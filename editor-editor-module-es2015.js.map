{"version":3,"sources":["./src/app/editor/store/news-editor.effects.ts","./src/app/editor/editor.module.ts","./node_modules/rxjs-compat/add/observable/of.js","./src/app/editor/list/list.component.ts","./src/app/editor/list/list.component.html","./src/app/editor/review/review.component.ts","./src/app/editor/review/review.component.html","./src/app/editor/add-to-list-dialog/add-to-list-dialog.component.ts","./src/app/editor/add-to-list-dialog/add-to-list-dialog.component.html","./src/app/editor/notes-dialog/notes-dialog.component.ts","./src/app/editor/notes-dialog/notes-dialog.component.html","./src/app/editor/edit/edit.component.ts","./src/app/editor/edit/edit.component.html","./node_modules/rxjs/add/observable/of.js","./src/app/editor/editor-dashboard/editor-dashboard.component.ts","./src/app/editor/editor-dashboard/editor-dashboard.component.html","./src/app/editor/editor.routing.ts","./src/app/editor/services/editor-news.service.ts"],"names":[],"mappings":"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","file":"editor-editor-module-es2015.js","sourcesContent":["\nimport {catchError, mergeMap,  map } from 'rxjs/operators';\nimport { EditorNewsService } from './../services/editor-news.service';\nimport { Injectable } from '@angular/core';\nimport { Observable ,  of } from 'rxjs';\nimport { Action } from '@ngrx/store';\n\n\n\n\nimport {Actions, Effect, ofType} from '@ngrx/effects';\n\nimport * as NewsActions from './news-editor.actions';\nimport { News } from '../../news/models/news';\n\n@Injectable()\nexport class NewsEditorEffects {\n\n  constructor(\n    private actions$: Actions,\n    private newsService: EditorNewsService,\n  ) { }\n\n  @Effect()\n  GetMyNews$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.GetReviewNews>(NewsActions.GET_REVIEW_NEWS),\n      mergeMap(action =>\n        this.newsService.getReviewNews().pipe(\n        map((data) => {\n          console.log(data);\n          return new NewsActions.GetReviewNewsSuccess(data);\n        }),\n        catchError(() => of(new NewsActions.GetReviewNewsError())),)\n      )\n    );\n\n  @Effect()\n  ApproveNews$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.ApproveNews>(NewsActions.APPROVE_NEWS),\n      mergeMap(action =>\n        this.newsService.approveNews(action.payload.id).pipe(\n        map((data) => {\n          console.log(data);\n          return new NewsActions.ApproveNewsSuccess({ id: action.payload.id });\n        }),\n        catchError(() => of(new NewsActions.ApproveNewsError())),)\n      )\n    );\n\n  @Effect()\n  RejectNews$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.RejectNews>(NewsActions.REJECT_NEWS),\n      mergeMap(action =>\n        this.newsService.reJectNews(action.payload).pipe(\n        map((data) => {\n          console.log(data);\n          return new NewsActions.RejectNewsSuccess(action.payload);\n        }),\n        catchError(() => of(new NewsActions.RejectNewsError())),)\n      )\n    );\n\n  // @Effect()\n  // GetTrashNews$: Observable<Action> = this.actions$.\n  //   ofType<NewsActions.GetReviewNews>(NewsActions.GET_REVIEW_NEWS)\n  //   .mergeMap(action =>\n  //     this.newsService.trashNews(action.payload.perPage, action.payload.currentPage)\n  //     .map((data) => {\n  //       return new NewsActions.GetReviewNewsSuccess(data);\n  //     })\n  //     .catch(() => of(new NewsActions.GetReviewNewsError()))\n  //   );\n\n  @Effect()\n  getLists$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.GetLists>(NewsActions.GET_LISTS),\n      mergeMap(action =>\n        this.newsService.getNewsLists().pipe(\n        map((data) => {\n          console.log(data);\n          // new NewsActions.GetSelectedList(); //load selected list\n          return new NewsActions.GetListsSuccess(data);\n        }),\n        catchError(() => of(new NewsActions.GetListsError())),)\n      )\n    );\n\n\n  @Effect()\n  getListsByDate$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.GetListsByDate>(NewsActions.GET_LISTS_BY_DATE),\n      mergeMap(action =>\n        this.newsService.getNewsListsByDate(action.payload.date).pipe(\n        map((data) => {\n          console.log(data);\n          // new NewsActions.GetSelectedList(); //load selected list\n          return new NewsActions.GetListsByDateSuccess(data);\n        }),\n        catchError(() => of(new NewsActions.GetListsByDateError())),)\n      )\n    );\n\n\n  @Effect()\n  AddToList$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.AddToList>(NewsActions.ADD_TO_LIST),\n      mergeMap(action =>\n        this.newsService.addNewsToList({ list_id: action.payload.list_id, news_id: action.payload.news_id }).pipe(\n        map((data) => {\n          console.log(data);\n          return new NewsActions.AddToListSuccess(data);\n        }),\n        catchError(() => of(new NewsActions.AddToListError())),)\n      )\n    );\n\n\n  @Effect()\n  RemoveFromList$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.RemoveFromList>(NewsActions.REMOVE_FROM_LIST),\n      mergeMap(action =>\n        this.newsService.removeNewsFromList(action.payload.id).pipe(\n        map((data) => {\n          //console.log(data);\n          return new NewsActions.RemoveFromListSuccess(data);\n        }),\n        catchError(() => of(new NewsActions.RemoveFromListError())),)\n      )\n    );\n\n\n  @Effect()\n  UpdateListOrder$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.UpdateListOrder>(NewsActions.UPDATE_LIST_ORDER),\n      mergeMap(action =>\n        this.newsService.orderList(action.payload).pipe(\n        map((data) => {\n          //console.log(data);\n          return new NewsActions.UpdateListOrderSuccess(data);\n        }),\n        catchError(() => of(new NewsActions.UpdateListOrderError())),)\n      )\n    );\n\n\n  @Effect()\n  GetSelectedList$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.GetSelectedList>(NewsActions.GET_SELECTED_LIST),\n      mergeMap(action =>\n        this.newsService.getSelectedList().pipe(\n        map((data) => {\n          //console.log(data);\n          return new NewsActions.GetSelectedListSuccess({ list_id: data });\n        }),\n        catchError(() => of(new NewsActions.GetSelectedListError())),)\n      )\n    );\n\n  @Effect()\n  UpdateSelectedList$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.UpdateSelectedList>(NewsActions.UPDATE_SELECTED_LIST),\n      mergeMap(action =>\n        this.newsService.updateSelectedList(action.payload.list_id).pipe(\n        map((data) => {\n          //console.log(data);\n          return new NewsActions.UpdateSelectedListSuccess({ list_id: data });\n        }),\n        catchError(() => of(new NewsActions.UpdateSelectedListError())),)\n      )\n    );\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { NewsEditorRoutes } from './editor.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\n/*import { DragulaModule } from 'ng2-dragula/ng2-dragula';*/\nimport { DragulaModule } from 'ng2-dragula';\n\nimport { EditorDashboardComponent } from './editor-dashboard/editor-dashboard.component';\nimport { ReviewComponent } from './review/review.component';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { NewsEditorEffects } from './store/news-editor.effects';\nimport { reducer } from './store/news-editor.reducer';\nimport { NotesDialogComponent } from './notes-dialog/notes-dialog.component';\nimport { EditComponent } from './edit/edit.component';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { ListComponent } from './list/list.component';\nimport { AddToListDialogComponent } from './add-to-list-dialog/add-to-list-dialog.component';\n\nimport { ContextMenuModule } from 'ngx-contextmenu';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(NewsEditorRoutes),\n    FormsModule,\n    DemoMaterialModule,\n    FlexLayoutModule,\n    PerfectScrollbarModule,\n    DragulaModule.forRoot(),\n    SharedModule,\n    StoreModule.forFeature('ReviewNews', reducer),\n    EffectsModule.forFeature([NewsEditorEffects]),\n    ContextMenuModule.forRoot(),\n  ],\n  declarations: [\n    EditorDashboardComponent,\n    ReviewComponent,\n    NotesDialogComponent,\n    AddToListDialogComponent,\n    EditComponent,\n    ListComponent,\n  ],\n  entryComponents: [NotesDialogComponent, AddToListDialogComponent]\n})\nexport class EditorModule { }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.of = rxjs_1.of;\n//# sourceMappingURL=of.js.map","\nimport {takeUntil} from 'rxjs/operators';\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Router } from '@angular/router';\n\nimport { Store } from '@ngrx/store';\nimport { News, NewsList, ListNews, ListOrder } from './../../news/models/news';\nimport * as editorActions from '../store/news-editor.actions';\nimport {Actions, ofType} from '@ngrx/effects';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataSource } from '@angular/cdk/table';\nimport { Observable, Subject } from 'rxjs';\n\nimport { ViewNewsDialogComponent } from '../../shared/component/view-news-dialog/view-news-dialog.component';\nimport { AddToListDialogComponent } from '../add-to-list-dialog/add-to-list-dialog.component';\n\nimport {Overlay} from '@angular/cdk/overlay';\nimport { DragulaService } from 'ng2-dragula';\nimport { formatDate } from \"@angular/common\";\nimport {Subscription} from \"Rxjs\";\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit, OnDestroy {\n\n  displayedColumns = ['news_name', 'heading', 'date', 'status', 'actions'];\n  displayedColumnsPublished = ['news_name', 'heading', 'date', 'status'];\n  // dataSource = new NewsListDataSource(this.selectedList);\n  dataSource;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  pageEvent: PageEvent;\n\n  sidePanelOpened = true;\n  sidePanelOpened_noNews = true;\n\n  lists; // : NewsList[] = [];\n  selectedList: NewsList;\n  settings_selected_list: any;\n\n  view_dialog$: any;\n\n  // initializers\n  init_news$;\n\n  //date for selected dates lists\n  show_list_date = new Date();\n  show_list_date_f = formatDate(new Date(), 'dd/MM/yyyy', 'en-US');\n\n  @ViewChild('sidebar', {static: true}) sidenav: MatSidenav;\n\n  private destroy$ = new Subject();\n  subs = new Subscription();\n\n  constructor(\n    public dialog: MatDialog,\n    private store: Store<any>,\n    private router: Router,\n    private updates$: Actions,\n    private overlay: Overlay,\n    private dragulaService: DragulaService\n    ) {\n\n      this.subs.add(this.dragulaService.dropModel('news-list')\n        .subscribe(({ sourceModel, targetModel, item }) => {\n\n            let post_str: ListOrder[] = [];\n            targetModel.forEach((news, index) => {\n              post_str[index] = new ListOrder(this.selectedList.id, news.id, index + 1);\n              console.log(post_str)\n            });\n\n            //update order\n            this.store.dispatch(new editorActions.UpdateListOrder(post_str));\n\n            // update selected list selection\n            this.updates$\n              .pipe(ofType(editorActions.UPDATE_LIST_ORDER_SUCCESS))\n              .subscribe(() => {\n                let sub = this.store.select(news_store => news_store.ReviewNews.lists)\n                  .subscribe(list => {\n                    list.forEach((element: NewsList) => {\n                      if (element.id === this.selectedList.id) {\n                        this.selectedList = element\n                        this.dataSource = new NewsListDataSource(element.list_news);\n                        // sub.unsubscribe();\n                      }\n                    });\n                  });\n            });\n\n          }\n        )\n      );\n\n    }\n\n\n\n      /*this.dragulaService.dropModel('news-list').pipe(\n        takeUntil(this.destroy$)\n      ).subscribe((result) => {\n        let post_str: ListOrder[] = [];\n        this.selectedList.list_news.forEach((news, index) => {\n          post_str[index] = new ListOrder(this.selectedList.id, news.id, index + 1);\n          console.log(post_str)\n        });\n\n          //update order\n          this.store.dispatch(new editorActions.UpdateListOrder(post_str));\n\n          // update selected list selection\n          this.updates$\n          .pipe(ofType(editorActions.UPDATE_LIST_ORDER_SUCCESS))\n          .subscribe(() => {\n            let sub = this.store.select(news_store => news_store.ReviewNews.lists)\n            .subscribe(list => {\n              list.forEach((element: NewsList) => {\n                if (element.id === this.selectedList.id) {\n                  this.selectedList = element\n                  this.dataSource = new NewsListDataSource(element.list_news);\n                  // sub.unsubscribe();\n                }\n              });\n            });\n          });\n        }\n      );\n    }*/\n\n  ngOnInit() {\n    // this.init_news$ = this.store.select(store => store.ReviewNews.isListLoaded)\n    // .take(1)\n    // .subscribe(\n    //   (isLoaded) => {\n    //     if (!isLoaded) {\n    //       console.log('Loading News Lists!');\n    //       this.store.dispatch(new editorActions.GetLists());\n    //     } else {\n    //       this.lists = this.store.select(news_store => news_store.ReviewNews.lists);\n    //     }\n    //   }\n    // );\n    this.store.dispatch(new editorActions.GetLists());\n\n    //this.lists = this.store.select(news_store => news_store.ReviewNews.lists);\n\n    this.updates$\n      .pipe(ofType(editorActions.GET_LISTS_SUCCESS))\n      .subscribe(() => {\n        this.store.dispatch(new editorActions.GetSelectedList());\n      });\n    //this.store.dispatch(new editorActions.GetSelectedList());\n\n    this.updates$\n      .pipe(ofType(editorActions.GET_SELECTED_LIST_SUCCESS))\n      .subscribe(() => {\n        this.lists = this.store.select(news_store => news_store.ReviewNews.lists);\n\n        this.store.select(news_store => news_store.ReviewNews.selectedList)\n          .subscribe(val => {\n            this.settings_selected_list = val;\n          });\n\n      });\n  }\n\n  onSelectList(list: NewsList) {\n    if (this.selectedList && this.selectedList.id === list.id) {\n      this.selectedList = null;\n    }else {\n      this.selectedList = list;\n      this.dataSource = new NewsListDataSource(list.list_news);\n    }\n    console.log('LIST SELECTION')\n  }\n\n  viewNews(news: News) {\n    let dialogRef = this.dialog.open(ViewNewsDialogComponent, { width: '90%', data: news });\n\n    dialogRef.afterClosed().subscribe((result: string) => {\n      dialogRef = null;\n      if (result) {\n      }\n    });\n\n    return false;\n  }\n\n  addNewsToList(id: number) {\n    let dialogRef = this.dialog.open(AddToListDialogComponent, { width: '95%', height: '90%', maxHeight: '95%', data: { list: this.selectedList } });\n\n    dialogRef.componentInstance.onAdd.subscribe((result: any) => {\n      console.log(result);\n\n      this.updates$\n        .pipe(ofType(editorActions.ADD_TO_LIST_SUCCESS))\n        .subscribe(() => {\n\n          this.store.select(news_store => news_store.ReviewNews.lists)\n          .subscribe(list => {\n            list.forEach((element: NewsList) => {\n              if (element.id === result.list_id) {\n                this.selectedList = element\n                this.dataSource = new NewsListDataSource(element.list_news);\n              }\n            });\n          });\n\n        });\n    });\n\n    dialogRef.afterClosed().subscribe((result: string) => {\n      dialogRef = null;\n      if (result) {\n      }\n    });\n\n    return false;\n  }\n\n  deleteNews (news_id: number, list_id: number) {\n\n    this.store.dispatch(new editorActions.RemoveFromList({ id: news_id }));\n\n    this.updates$\n    .pipe(ofType(editorActions.REMOVE_FROM_LIST_SUCCESS))\n    .subscribe(() => {\n      this.store.select(news_store => news_store.ReviewNews.lists)\n      .subscribe(list => {\n        list.forEach((element: NewsList) => {\n          if (element.id === list_id) {\n            // console.log('LISTTTTTTTTTTT'+news_id)\n            this.selectedList = element\n            this.dataSource = new NewsListDataSource(element.list_news);\n          }\n        });\n      });\n\n    });\n  }\n\n  updateSelectedList(_list_id: number) {\n    console.log(_list_id)\n    this.store.dispatch(new editorActions.UpdateSelectedList({ list_id: _list_id }));\n  }\n\n  sideBarToggle() {\n    this.sidenav.toggle();\n  }\n\n  isOver(): boolean {\n    return window.matchMedia(`(max-width: 960px)`).matches;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n  // Load Lists for selected date\n  loadDateList(event) {\n\n    this.show_list_date = new Date(event);\n    this.show_list_date_f = formatDate(event, 'yyyy-M-dd', 'en-US');\n    console.log(this.show_list_date_f);\n\n\n    //get selected date's lists\n    this.store.dispatch(new editorActions.GetListsByDate({ date: this.show_list_date_f }));\n\n    this.updates$\n      .pipe(ofType(editorActions.GET_LISTS_BY_DATE_SUCCESS))\n      .subscribe(() => {\n        this.store.dispatch(new editorActions.GetSelectedList());\n      });\n    //this.store.dispatch(new editorActions.GetSelectedList());\n\n    this.updates$\n      .pipe(ofType(editorActions.GET_SELECTED_LIST_SUCCESS))\n      .subscribe(() => {\n        this.lists = this.store.select(news_store => news_store.ReviewNews.lists);\n\n        this.store.select(news_store => news_store.ReviewNews.selectedList)\n          .subscribe(val => {\n            this.settings_selected_list = val;\n          });\n\n      });\n\n  }\n\n}\n\n\n\nexport class NewsListDataSource extends DataSource<ListNews> {\n  constructor(private staticData: ListNews[]) {\n    super();\n  }\n\n  connect(): Observable<ListNews[]> {\n    return Observable.of(this.staticData);\n  }\n\n  disconnect() {}\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center start\">\n  <div fxFlex.gt-md=\"100\" fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n    <mat-card class=\"mat-card-top\">\n      <mat-sidenav-container [ngClass]=\"{ 'side-panel-opened': sidePanelOpened, 'side-panel-closed': !sidePanelOpened }\">\n\n        <mat-sidenav #sidebar [mode]=\"isOver() ? 'over' : 'side'\" [opened]=\"!isOver()\" (open)=\"sidePanelOpened = true || sidePanelOpened_noNews == true\"\n        (close)=\"sidePanelOpened = false || sidePanelOpened_noNews == false\">\n          <mat-toolbar color=\"primary\" class=\"no-shadow\">\n            <div fxLayout=\"row\" fxFlex=\"100\" >\n              <span class=\"m-t-0 font-14\">\n                <!-- <button mat-icon-button class=\"mr-1\"><mat-icon>inbox</mat-icon></button> -->\n\n                <mat-form-field>\n                  <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"show_list_date\" (ngModelChange)=\"loadDateList($event)\">\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                  <mat-datepicker #picker></mat-datepicker>\n                </mat-form-field>\n\n              </span>\n            </div>\n          </mat-toolbar>\n\n          <mat-nav-list>\n            <mat-list-item (click)=\"onSelectList(list)\" *ngFor=\"let list of lists | async\" [style.background-color]=\"list==selectedList ? 'rgba(127, 255, 212, 0.6)' : 'rgba(255, 255, 255, 0)'\">\n              <mat-icon *ngIf=\"list==selectedList\" color=\"primary\">subdirectory_arrow_right</mat-icon>\n\n              <h3 matLine> {{list.name}} </h3>\n              <p matLine class=\"text-muted\"> {{list.list_news.length}} </p>\n\n              <mat-icon *ngIf=\"list.id == settings_selected_list\" color=\"warn\">offline_pin</mat-icon>\n\n              <button [matMenuTriggerFor]=\"them\" mat-icon-button class=\"ml-1\" *ngIf=\"list.id != settings_selected_list\">\n                <mat-icon>more_vert</mat-icon>\n              </button>\n              <mat-menu #them=\"matMenu\" x-position=\"before\">\n                <button mat-menu-item color=\"primary\" (click)=\"updateSelectedList(list.id)\">Set Selected</button>\n              </mat-menu>\n\n\n            </mat-list-item>\n          </mat-nav-list>\n        </mat-sidenav>\n\n        <mat-toolbar class=\"bg-success no-shadow chat-right-panel\" color=\"warn\">\n          <div fxLayout=\"row\" fxFlex=\"100\" fxLayoutAlign=\"center center\">\n            <button (click)=\"sideBarToggle()\" class=\"mr-1\" mat-icon-button>\n              <mat-icon>short_text</mat-icon>\n            </button>\n            <!-- <span class=\"top-avatar m-r-10\">\n              <img src=\"{{selectedMessage.photo}}\" class=\"img-circle\">\n            </span> -->\n            <div fxFlex>\n              <div class=\"font-14\" *ngIf=\"selectedList\">{{ selectedList.created_at | date }} {{ selectedList.name }}</div>\n            </div>\n            <div fxFlex>\n              <!--<div class=\"font-14\" *ngIf=\"selectedNews\">News</div>-->\n            </div>\n            <!-- <button [matMenuTriggerFor]=\"them\" mat-icon-button class=\"ml-1\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #them=\"matMenu\" x-position=\"before\">\n              <button mat-menu-item color=\"primary\" [disabled]=\"!selectedNews\">Approve</button>\n              <button mat-menu-item color=\"warn\" [disabled]=\"!selectedNews\">Reject</button>\n              <button mat-menu-item color=\"link\" [disabled]=\"!selectedNews\">Edit</button>\n            </mat-menu> -->\n          </div>\n        </mat-toolbar>\n\n        <mat-card-content class=\"chat-middle-box\" style=\"min-height:700px;\">\n          <!-- selected list -->\n          <div class=\"table-rasponsive\" *ngIf=\"selectedList\">\n\n            <div class=\"table\">\n              <div class=\"table-header\">\n                <div class=\"header__item column-news_name\">News Name</div>\n                <div class=\"header__item column-heading\">Heading</div>\n                <div class=\"header__item column-date\">Date</div>\n                <div class=\"header__item column-actions\">Actions</div>\n              </div>\n              <div class=\"table-content\" [dragula]=\"'news-list'\" [dragulaModel]=\"selectedList.list_news\">\n                <div class=\"table-row status_{{news.news.newsstatus.status}}\" *ngFor=\"let news of selectedList.list_news\" id=\"{{ news.news.id }}\">\n                  <div class=\"table-data column-news_name\">{{ news.news.news_name }}</div>\n\n                  <div class=\"table-data column-heading dhv\" *ngIf=\"news.news.language.language_code === 'Dhv'\">{{ news.news.heading }}</div>\n                  <div class=\"table-data column-heading\" *ngIf=\"news.news.language.language_code != 'Dhv'\">{{ news.news.heading }}</div>\n\n                  <div class=\"table-data column-date\" matTooltip=\"{{ news.news.created_at}}\" matTooltipPosition=\"below\">{{ news.news.created_at | date }}</div>\n                  <div class=\"table-data column-actions\">\n                      <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.news)\" *ngIf=\"news.news.newsstatus.status != 'breaker'\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                          <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                      </button>\n\n                      <button mat-icon-button color=\"warn\" (click)=\"deleteNews(news.id, selectedList.id)\" matTooltip=\"Remove News\" matTooltipPosition=\"below\">\n                        <mat-icon aria-label=\"Edit\">delete</mat-icon>\n                      </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </mat-card-content>\n\n        <mat-card-actions class=\"chat-footer\">\n            <div align=\"end\">\n              <button mat-raised-button color=\"primary\" [disabled]=\"!selectedList\" (click)=\"addNewsToList(selectedList.id)\">Add News To List</button>\n              <!-- <button mat-button color=\"basic\" [disabled]=\"!selectedNews\" (click)=\"onEdit()\">Edit</button>\n              <button mat-raised-button color=\"warn\" [disabled]=\"!selectedNews\" (click)=\"rejectNews()\">Reject</button>\n              <button mat-raised-button color=\"primary\" [disabled]=\"!selectedNews\" (click)=\"approveNews(selectedNews)\">Approve</button> -->\n            </div>\n          <!-- <div fxLayout=\"row\" layout-align=\"start center\">\n            <mat-form-field class=\"mr-1 ml-1\" fxFlex>\n              <input matInput placeholder=\"Send message\" >\n            </mat-form-field>\n            <button mat-fab color=\"warn\" >\n              <mat-icon>send</mat-icon>\n            </button>\n          </div> -->\n        </mat-card-actions>\n      </mat-sidenav-container>\n    </mat-card>\n  </div>\n</div>\n\n\n\n\n\n\n\n<!-- <mat-table #table [dataSource]=\"dataSource\">\n\n    <ng-container matColumnDef=\"news_name\">\n      <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let listnews\"> {{ listnews.news.news_name | uppercase }} </mat-cell>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"heading\">\n      <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n      <mat-cell *matCellDef=\"let listnews\" [class.dhv_nosize]=\"listnews.news.language.language_code=='Dhv'\"> {{listnews.news.heading}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"date\">\n      <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n      <mat-cell *matCellDef=\"let listnews\" matTooltip=\"{{listnews.news.created_at | date:'medium'}}\" matTooltipPosition=\"below\"> {{listnews.news.created_at | date}} </mat-cell>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"status\">\n        <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n        <mat-cell *matCellDef=\"let listnews\">\n          <mat-chip-list>\n            <mat-chip selected=\"false\" *ngIf=\"listnews.news.newsstatus.status == 'draft'\">Draft</mat-chip>\n            <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"listnews.news.newsstatus.status == 'published'\">Approved</mat-chip>\n            <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"listnews.news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n            <mat-chip selected=\"true\" *ngIf=\"listnews.news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n          </mat-chip-list>\n      </mat-cell>\n    </ng-container>\n\n\n    <div>\n      <ng-container matColumnDef=\"actions\">\n        <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n        <mat-cell *matCellDef=\"let listnews\" style=\"display: flex; justify-content: flex-end;\">\n\n            <button mat-icon-button color=\"basic\" (click)=\"viewNews(listnews.news)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n            </button>\n\n            <button mat-icon-button color=\"warn\" (click)=\"deleteNews(listnews.id, selectedList.id)\" matTooltip=\"Remove News\" matTooltipPosition=\"below\">\n              <mat-icon aria-label=\"Edit\">delete</mat-icon>\n            </button>\n\n        </mat-cell>\n      </ng-container>\n    </div>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\" [dragula]='\"task-group\"'></mat-row>\n  </mat-table> -->\n","import { Router } from '@angular/router';\nimport { ConfirmDialogComponent } from './../../shared/component/confirm-dialog/confirm-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\nimport { News } from './../../news/models/news';\nimport * as editorActions from '../store/news-editor.actions';\n\nimport { NotesDialogComponent, RejectNotes } from './../notes-dialog/notes-dialog.component';\n\n\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.css']\n})\nexport class ReviewComponent implements OnInit {\n  them;\n  user;\n  sidePanelOpened = true;\n  sidePanelOpened_noNews = true;\n  review_news_count = null;\n\n  @ViewChild('sidebar', {static: true}) sidenav: MatSidenav;\n\n  // MESSAGE\n  selectedNews: News;\n  reviewList;\n\n  // initializers\n  init_news$;\n\n  constructor(\n    private store: Store<any>,\n    private dialog: MatDialog,\n    private router: Router\n  ) {\n    // this.selectedMessage = this.messages[1];\n  }\n\n  ngOnInit() {\n    // this.init_news$ = this.store.select(store => store.ReviewNews.isLoaded)\n    // .take(1)\n    // .subscribe(\n    //   (isLoaded) => {\n    //     if (!isLoaded) {\n    //       console.log('loading news for review');\n    //       this.store.dispatch(new editorActions.GetReviewNews());\n    //     }\n    //   }\n    // );\n    this.store.dispatch(new editorActions.GetReviewNews());\n\n    // no of news for approval count\n    this.init_news$ = this.store.select(store => store.ReviewNews)\n    .subscribe(\n      (ReviewNews) => {\n        if (ReviewNews.isLoaded) {\n          this.review_news_count = Object.keys(ReviewNews.news).length;\n          if (this.review_news_count <= 0) {\n            this.sideBarToggle();\n          }\n        }\n      }\n    );\n\n    this.reviewList = this.store.select(news_store => news_store.ReviewNews.news);\n  }\n\n  sideBarToggle() {\n    this.sidenav.toggle();\n  }\n\n  isOver(): boolean {\n    return window.matchMedia(`(max-width: 960px)`).matches;\n  }\n\n  onSelect(news: News): void {\n    if (this.selectedNews && this.selectedNews.id === news.id) {\n      this.selectedNews = null;\n    }else {\n      this.selectedNews = news;\n    }\n  }\n\n  approveNews(toApprove: News) {\n    this.store.dispatch(new editorActions.ApproveNews({ id: toApprove.id }));\n    this.selectedNews = null;\n  }\n\n  rejectNews() {\n\n    let dialogRef = this.dialog.open(NotesDialogComponent, { width: '50%', data: this.selectedNews });\n\n    dialogRef.afterClosed().subscribe((result: string) => {\n      dialogRef = null;\n      if (result) {\n      }\n    });\n    dialogRef.componentInstance.onReject.subscribe((result: RejectNotes) => {\n      this.store.dispatch(new editorActions.RejectNews(result));\n      this.selectedNews = null;\n    });\n\n    return false;\n  }\n\n  onEdit() {\n    if (this.selectedNews) {\n      const url = '/editor/edit/' + this.selectedNews.id;\n      this.router.navigateByUrl(url, { skipLocationChange: true });\n    }\n  }\n\n}\n","\n\n<div fxLayout=\"row\" fxLayoutAlign=\"center start\">\n  <div fxFlex.gt-md=\"100\" fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n    <mat-card class=\"mat-card-top\">\n      <mat-sidenav-container [ngClass]=\"{ 'side-panel-opened': sidePanelOpened, 'side-panel-closed': !sidePanelOpened }\">\n\n        <mat-sidenav #sidebar [mode]=\"isOver() ? 'over' : 'side'\" [opened]=\"!isOver()\" (open)=\"sidePanelOpened = true || sidePanelOpened_noNews == true\"\n        (close)=\"sidePanelOpened = false || sidePanelOpened_noNews == false\">\n          <mat-toolbar color=\"primary\" class=\"no-shadow\">\n            <div fxLayout=\"row\" fxFlex=\"100\" >\n              <span class=\"m-t-0 font-14\">\n                <button mat-icon-button class=\"mr-1\"><mat-icon>inbox</mat-icon></button>\n                News in Review\n              </span>\n            </div>\n          </mat-toolbar>\n\n          <mat-nav-list>\n            <mat-list-item (click)=\"onSelect(news)\" *ngFor=\"let news of reviewList | async\" [style.background-color]=\"news==selectedNews ? 'rgba(127, 255, 212, 0.6)' : 'rgba(255, 255, 255, 0)'\">\n              <!-- <img mat-list-avatar src=\"{{message.photo}}\" alt=\"\"> -->\n              <mat-icon *ngIf=\"news==selectedNews\" color=\"primary\">subdirectory_arrow_right</mat-icon>\n              <h3 matLine> {{news.news_name}} </h3>\n              <p matLine class=\"text-muted\"> {{news.user.name}} </p>\n            </mat-list-item>\n          </mat-nav-list>\n        </mat-sidenav>\n\n        <mat-toolbar class=\"bg-success no-shadow chat-right-panel\" color=\"warn\">\n          <div fxLayout=\"row\" fxFlex=\"100\" fxLayoutAlign=\"center center\">\n            <button (click)=\"sideBarToggle()\" class=\"mr-1\" mat-icon-button>\n              <mat-icon>short_text</mat-icon>\n            </button>\n            <!-- <span class=\"top-avatar m-r-10\">\n              <img src=\"{{selectedMessage.photo}}\" class=\"img-circle\">\n            </span> -->\n            <div fxFlex>\n              <div class=\"font-14\" *ngIf=\"selectedNews\">{{selectedNews.news_name}}</div>\n            </div>\n            <button [matMenuTriggerFor]=\"them\" mat-icon-button class=\"ml-1\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #them=\"matMenu\" x-position=\"before\">\n              <button mat-menu-item color=\"primary\" [disabled]=\"!selectedNews\">Approve</button>\n              <button mat-menu-item color=\"warn\" [disabled]=\"!selectedNews\">Reject</button>\n              <button mat-menu-item color=\"link\" [disabled]=\"!selectedNews\">Edit</button>\n            </mat-menu>\n          </div>\n        </mat-toolbar>\n\n        <mat-card-content class=\"chat-middle-box\" style=\"min-height:700px;\">\n          <div  *ngIf=\"!selectedNews\">\n              <div class=\"login-register-box error-card text-center\" style=\"margin: 200px auto;\" *ngIf=\"review_news_count > 0\">\n                <img src=\"/assets/images/nothing-states/select_to_view.png\" style=\"width:auto; height:150px;\">\n                <p class=\"text-muted m-t-30 m-b-30\">Select a news from left sidebar to view</p>\n              </div>\n              <div class=\"login-register-box error-card text-center\" style=\"margin: 200px auto;\" *ngIf=\"review_news_count <= 0\">\n                <img src=\"/assets/images/nothing-states/nothing-to-approve.png\" style=\"width:auto; height:150px;\">\n                <h3 class=\"text-muted m-t-30 m-b-30\">No news to Approve !</h3>\n              </div>\n          </div>\n          <div *ngIf=\"selectedNews\">\n              <div fxLayout=\"column\" fxLayoutWrap=\"wrap\">\n                  <!-- title column -->\n                  <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" [class.dhv-title]=\"selectedNews.language.language_code == 'Dhv'\">\n                      {{selectedNews.heading}}\n                  </div>\n                  <!-- hr column -->\n                  <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n                    <mat-divider></mat-divider>\n                  </div>\n                  <!-- news body column -->\n                  <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n                      <div [innerHTML]=\"selectedNews.body\" style=\"white-space: pre-wrap\" [class.dhv]=\"selectedNews.language.language_code == 'Dhv'\"></div>\n                  </div>\n                  <!-- hr column -->\n                  <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n                    <mat-divider></mat-divider>\n                  </div>\n                  <!-- news bars column -->\n                  <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n                      <mat-card>\n                          <mat-card-content>\n                              <mat-card-title>News Bar(s)</mat-card-title>\n                          </mat-card-content>\n                          <mat-tab-group>\n                              <mat-tab *ngFor=\"let bar of selectedNews.newsbar; let i = index\" label=\"Bar {{i+1}}\">\n                                <mat-card-content>\n                                  <p [class]=\"selectedNews.language.language_code == 'Dhv' ? 'dhv' : '' \">{{bar.title}}</p>\n                                  <p [class]=\"selectedNews.language.language_code == 'Dhv' ? 'dhv m-t-20' : '' \">{{bar.detail}}</p>\n                                </mat-card-content>\n                              </mat-tab>\n                          </mat-tab-group>\n                      </mat-card>\n                  </div>\n              </div>\n          </div>\n        </mat-card-content>\n\n        <mat-card-actions class=\"chat-footer\">\n            <div align=\"end\">\n              <button mat-button color=\"basic\" [disabled]=\"!selectedNews\" (click)=\"onEdit()\">Edit</button>\n              <button mat-raised-button color=\"warn\" [disabled]=\"!selectedNews\" (click)=\"rejectNews()\">Reject</button>\n              <button mat-raised-button color=\"primary\" [disabled]=\"!selectedNews\" (click)=\"approveNews(selectedNews)\">Approve</button>\n            </div>\n          <!-- <div fxLayout=\"row\" layout-align=\"start center\">\n            <mat-form-field class=\"mr-1 ml-1\" fxFlex>\n              <input matInput placeholder=\"Send message\" >\n            </mat-form-field>\n            <button mat-fab color=\"warn\" >\n              <mat-icon>send</mat-icon>\n            </button>\n          </div> -->\n        </mat-card-actions>\n      </mat-sidenav-container>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PageEvent } from '@angular/material/paginator';\nimport { EditorNewsService } from '../services/editor-news.service';\nimport { News, ListNews, NewsList } from '../../news/models/news';\nimport { DataSource } from '@angular/cdk/table';\nimport { Observable } from 'rxjs';\n\n// import { of } from 'rxjs';\nimport 'rxjs/add/observable/of';\n\nimport { Store } from '@ngrx/store';\nimport * as editorActions from '../store/news-editor.actions';\nimport * as newsActions from '../../news/store/news.actions';\n\nimport {Actions, ofType} from '@ngrx/effects';\n\n@Component({\n  selector: 'app-add-to-list-dialog',\n  templateUrl: './add-to-list-dialog.component.html',\n  styleUrls: ['./add-to-list-dialog.component.css']\n})\nexport class AddToListDialogComponent implements OnInit {\n  onDelete = new EventEmitter();\n  onAdd = new EventEmitter();\n  onUndo = new EventEmitter();\n\n  newsData: News[];\n\n  // mat table\n  displayedColumns = ['news_name', 'heading', 'date', 'actions'];\n  displayedColumnsBreaker = ['heading_br', 'actions_br'];\n  dataSource: DataSource<any>;\n  dataSource1: DataSource<any>;\n  dataSource2: DataSource<any>;\n  dataSource3: DataSource<any>;\n  dataSource4: DataSource<any>;\n  dataSource5: DataSource<any>;\n  dataSource6: DataSource<any>;\n  dataSource7: DataSource<any>;\n  dataSourceBreakers: DataSource<any>;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddToListDialogComponent>,\n    public apiService: EditorNewsService,\n    private store: Store<any>,\n    private updates$: Actions,\n    @Inject(MAT_DIALOG_DATA) public data: { list: NewsList }\n  ) { }\n\n  ngOnInit() {\n    // console.log(this.data)\n    this.apiService.getTodaysNews().subscribe((news: any) => {\n      this.newsData = news;\n      this.loadDataSource(this.newsData);\n    });\n  }\n\n  loadDataSource(news_data: News[]) {\n    this.dataSource  = new NewsListDataSource(this.checkIfInList(news_data[\"1\"][\"data\"]));\n    this.dataSource1 = new NewsListDataSource(this.checkIfInList(news_data[\"2\"][\"data\"]));\n    this.dataSource2 = new NewsListDataSource(this.checkIfInList(news_data[\"3\"][\"data\"]));\n    this.dataSource3 = new NewsListDataSource(this.checkIfInList(news_data[\"4\"][\"data\"]));\n    this.dataSource4 = new NewsListDataSource(this.checkIfInList(news_data[\"5\"][\"data\"]));\n    this.dataSource5 = new NewsListDataSource(this.checkIfInList(news_data[\"6\"][\"data\"]));\n    this.dataSource6 = new NewsListDataSource(this.checkIfInList(news_data[\"7\"][\"data\"]));\n    this.dataSourceBreakers = new NewsListDataSource(this.checkIfInList(news_data[\"breakers\"]));\n  }\n\n  addToList(id: number) {\n    console.log(id);\n    // this.store.dispatch(new newsActions.UpdateMyNewsLoaded({ isMyNewsLoaded: false }));\n    this.store.dispatch(new editorActions.AddToList({ list_id: this.data.list.id, news_id: id }));\n    this.onAdd.emit({ list_id: this.data.list.id, news_id: id });\n\n\n    this.updates$\n    .pipe(ofType(editorActions.ADD_TO_LIST_SUCCESS))\n    .subscribe(() => {\n      this.store.select(news_store => news_store.ReviewNews.lists)\n      .subscribe(list => {\n        list.forEach((element: NewsList) => {\n          if (element.id === this.data.list.id) {\n            // console.log(element)\n            this.data = { list: element };\n            this.loadDataSource(this.newsData);\n          }\n        });\n      });\n\n    });\n  }\n\n  checkIfInList(news_data: News[]) {\n    let news_re: News[] = [];\n    let i_index = 0;\n    news_data.forEach((news, index) => {\n      let found = false;\n\n      this.data.list.list_news.forEach((list_news, list_index) => {\n        if (news.id === list_news.news.id) {\n          found = true;\n        }\n      });\n\n      if(!found){\n        news_re[i_index] = news;\n        i_index = i_index + 1;\n      }\n\n    });\n    return news_re;\n  }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n  doDelete(id) {\n    this.closeDialog(false);\n    this.onDelete.emit(id);\n  }\n\n  doAdd(id) {\n    this.closeDialog(false);\n    this.onAdd.emit(id);\n  }\n\n  doUndo(id) {\n    this.closeDialog(false);\n    this.onUndo.emit(id);\n  }\n\n}\n\nexport class NewsListDataSource extends DataSource<News> {\n  constructor(private staticData: News[]) {\n    super();\n  }\n\n  connect(): Observable<News[]> {\n    return Observable.of(this.staticData);\n  }\n\n  disconnect() {}\n}\n","<h3 mat-dialog-title>Add News To: <i>{{data.list.name}}</i></h3>\n\n  <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n          <mat-card>\n              <!-- <mat-toolbar color=\"primary\" class=\"no-shadow\">\n                <div fxLayout=\"row\" fxFlex=\"100\" >\n                  <span class=\"m-t-0 font-14\">My News</span>\n                </div>\n              </mat-toolbar> -->\n              <mat-card-content>\n\n\n                <mat-tab-group>\n                  <!-- TODAYS -->\n                  <mat-tab label=\"Todays News\">\n                    <mat-card-content>\n                      <div class=\"table-rasponsive\">\n                        <mat-table #table [dataSource]=\"dataSource\">\n                            <!--- Note that these columns can be defined in any order.\n                                  The actual rendered columns are set as a property on the row definition\" -->\n\n                            <!-- Name Column -->\n                            <ng-container matColumnDef=\"news_name\">\n                              <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\"> {{ news.news_name | uppercase }} </mat-cell>\n                            </ng-container>\n\n                            <!-- Heading Column -->\n                            <ng-container matColumnDef=\"heading\">\n                              <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" [class.dhv_nosize]=\"news.language.language_code=='Dhv'\"> {{news.heading}} </mat-cell>\n                            </ng-container>\n\n                            <!-- Date Column -->\n                            <ng-container matColumnDef=\"date\">\n                              <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" matTooltip=\"{{news.created_at | date:'medium'}}\" matTooltipPosition=\"below\" [className]=\"(news.created_at|date) != (news.updated_at|date) ? 'nottodays' : 'todays'\">\n                                <span *ngIf=\"(news.created_at|date) === (news.updated_at|date)\">{{news.created_at | date}}</span>\n                                <mat-chip-list><mat-chip selected=\"true\" *ngIf=\"(news.created_at|date) != (news.updated_at|date)\" class=\"bg-warning\">{{news.created_at | date}}</mat-chip></mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Status Column -->\n                            <ng-container matColumnDef=\"status\">\n                                <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\">\n                                  <mat-chip-list>\n                                    <mat-chip selected=\"false\" *ngIf=\"news.newsstatus.status == 'draft'\">Draft</mat-chip>\n                                    <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'published'\">Approved</mat-chip>\n                                    <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n                                    <mat-chip selected=\"true\" *ngIf=\"news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n                                  </mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Actions Column -->\n                            <!--<div [hidden]=\"iii !=hoveredIndex\">-->\n                            <div>\n                            <ng-container matColumnDef=\"actions\">\n                              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" style=\"display: flex; justify-content: flex-end;\">\n                                  <!-- <button mat-button color=\"warn\" *ngIf=\"news.newsstatus.status != 'published'\" (click)=\"deleteNews(news.id)\">Delete</button> -->\n                                  <!-- <button mat-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\">Edit</button> -->\n\n                                  <button mat-icon-button color=\"warn\" (click)=\"addToList(news.id)\" matTooltip=\"Add to List\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">add</mat-icon>\n                                  </button>\n\n                                  <!-- <button mat-icon-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\" matTooltip=\"Edit News\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                                  </button>\n                                  <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.id)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                                  </button> -->\n\n                              </mat-cell>\n                            </ng-container>\n                            </div>\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></mat-row>\n                          </mat-table>\n                        </div>\n                    </mat-card-content>\n                  </mat-tab>\n\n\n\n\n\n\n                  <!-- DAY -1 -->\n                  <mat-tab label=\"{{newsData['2']['date']}}\">\n                    <mat-card-content>\n                        <div class=\"table-rasponsive\">\n                          <mat-table #table [dataSource]=\"dataSource1\">\n                            <!--- Note that these columns can be defined in any order.\n                                  The actual rendered columns are set as a property on the row definition\" -->\n\n                            <!-- Name Column -->\n                            <ng-container matColumnDef=\"news_name\">\n                              <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\"> {{ news.news_name | uppercase }} </mat-cell>\n                            </ng-container>\n\n                            <!-- Heading Column -->\n                            <ng-container matColumnDef=\"heading\">\n                              <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" [class.dhv_nosize]=\"news.language.language_code=='Dhv'\"> {{news.heading}} </mat-cell>\n                            </ng-container>\n\n                            <!-- Date Column -->\n                            <ng-container matColumnDef=\"date\">\n                              <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" matTooltip=\"{{news.created_at | date:'medium'}}\" matTooltipPosition=\"below\">\n                                  <span *ngIf=\"(news.created_at|date) === (news.updated_at|date)\">{{news.created_at | date}}</span>\n                                  <mat-chip-list><mat-chip selected=\"true\" *ngIf=\"(news.created_at|date) != (news.updated_at|date)\" class=\"bg-warning\">{{news.created_at | date}}</mat-chip></mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Status Column -->\n                            <ng-container matColumnDef=\"status\">\n                                <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\">\n                                  <mat-chip-list>\n                                    <mat-chip selected=\"false\" *ngIf=\"news.newsstatus.status == 'draft'\">Draft</mat-chip>\n                                    <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'published'\">Approved</mat-chip>\n                                    <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n                                    <mat-chip selected=\"true\" *ngIf=\"news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n                                  </mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Actions Column -->\n                            <!--<div [hidden]=\"iii!=hoveredIndex\">-->\n                            <div>\n                            <ng-container matColumnDef=\"actions\">\n                              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" style=\"display: flex; justify-content: flex-end;\">\n                                  <!-- <button mat-button color=\"warn\" *ngIf=\"news.newsstatus.status != 'published'\" (click)=\"deleteNews(news.id)\">Delete</button> -->\n                                  <!-- <button mat-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\">Edit</button> -->\n\n                                  <button mat-icon-button color=\"warn\" (click)=\"addToList(news.id)\" matTooltip=\"Add to List\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">add</mat-icon>\n                                  </button>\n\n                                  <!-- <button mat-icon-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\" matTooltip=\"Edit News\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                                  </button>\n                                  <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.id)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                                  </button> -->\n\n                              </mat-cell>\n                            </ng-container>\n                            </div>\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></mat-row>\n                          </mat-table>\n                        </div>\n                    </mat-card-content>\n                  </mat-tab>\n\n\n\n\n\n\n\n                  <!-- DAY -2 -->\n                  <mat-tab label=\"{{newsData['3']['date']}}\">\n                    <mat-card-content>\n                        <div class=\"table-rasponsive\">\n                          <mat-table #table [dataSource]=\"dataSource2\">\n                            <!--- Note that these columns can be defined in any order.\n                                  The actual rendered columns are set as a property on the row definition\" -->\n\n                            <!-- Name Column -->\n                            <ng-container matColumnDef=\"news_name\">\n                              <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\"> {{ news.news_name | uppercase }} </mat-cell>\n                            </ng-container>\n\n                            <!-- Heading Column -->\n                            <ng-container matColumnDef=\"heading\">\n                              <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" [class.dhv_nosize]=\"news.language.language_code=='Dhv'\"> {{news.heading}} </mat-cell>\n                            </ng-container>\n\n                            <!-- Date Column -->\n                            <ng-container matColumnDef=\"date\">\n                              <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" matTooltip=\"{{news.created_at | date:'medium'}}\" matTooltipPosition=\"below\">\n                                  <span *ngIf=\"(news.created_at|date) === (news.updated_at|date)\">{{news.created_at | date}}</span>\n                                  <mat-chip-list><mat-chip selected=\"true\" *ngIf=\"(news.created_at|date) != (news.updated_at|date)\" class=\"bg-warning\">{{news.created_at | date}}</mat-chip></mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Status Column -->\n                            <ng-container matColumnDef=\"status\">\n                                <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\">\n                                  <mat-chip-list>\n                                    <mat-chip selected=\"false\" *ngIf=\"news.newsstatus.status == 'draft'\">Draft</mat-chip>\n                                    <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'published'\">Approved</mat-chip>\n                                    <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n                                    <mat-chip selected=\"true\" *ngIf=\"news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n                                  </mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Actions Column -->\n                            <!--<div [hidden]=\"iii!=hoveredIndex\">-->\n                            <div>\n                            <ng-container matColumnDef=\"actions\">\n                              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" style=\"display: flex; justify-content: flex-end;\">\n                                  <!-- <button mat-button color=\"warn\" *ngIf=\"news.newsstatus.status != 'published'\" (click)=\"deleteNews(news.id)\">Delete</button> -->\n                                  <!-- <button mat-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\">Edit</button> -->\n\n                                  <button mat-icon-button color=\"warn\" (click)=\"addToList(news.id)\" matTooltip=\"Add to List\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">add</mat-icon>\n                                  </button>\n\n                                  <!-- <button mat-icon-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\" matTooltip=\"Edit News\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                                  </button>\n                                  <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.id)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                                  </button> -->\n\n                              </mat-cell>\n                            </ng-container>\n                            </div>\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></mat-row>\n                          </mat-table>\n                        </div>\n                    </mat-card-content>\n                  </mat-tab>\n\n\n\n\n\n\n\n                  <!-- DAY -3 -->\n                  <mat-tab label=\"{{newsData['4']['date']}}\">\n                    <mat-card-content>\n                        <div class=\"table-rasponsive\">\n                          <mat-table #table [dataSource]=\"dataSource3\">\n                            <!--- Note that these columns can be defined in any order.\n                                  The actual rendered columns are set as a property on the row definition\" -->\n\n                            <!-- Name Column -->\n                            <ng-container matColumnDef=\"news_name\">\n                              <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\"> {{ news.news_name | uppercase }} </mat-cell>\n                            </ng-container>\n\n                            <!-- Heading Column -->\n                            <ng-container matColumnDef=\"heading\">\n                              <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" [class.dhv_nosize]=\"news.language.language_code=='Dhv'\"> {{news.heading}} </mat-cell>\n                            </ng-container>\n\n                            <!-- Date Column -->\n                            <ng-container matColumnDef=\"date\">\n                              <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" matTooltip=\"{{news.created_at | date:'medium'}}\" matTooltipPosition=\"below\">\n                                  <span *ngIf=\"(news.created_at|date) === (news.updated_at|date)\">{{news.created_at | date}}</span>\n                                  <mat-chip-list><mat-chip selected=\"true\" *ngIf=\"(news.created_at|date) != (news.updated_at|date)\" class=\"bg-warning\">{{news.created_at | date}}</mat-chip></mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Status Column -->\n                            <ng-container matColumnDef=\"status\">\n                                <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\">\n                                  <mat-chip-list>\n                                    <mat-chip selected=\"false\" *ngIf=\"news.newsstatus.status == 'draft'\">Draft</mat-chip>\n                                    <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'published'\">Approved</mat-chip>\n                                    <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n                                    <mat-chip selected=\"true\" *ngIf=\"news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n                                  </mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Actions Column -->\n                            <!--<div [hidden]=\"iii!=hoveredIndex\">-->\n                            <div>\n                            <ng-container matColumnDef=\"actions\">\n                              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" style=\"display: flex; justify-content: flex-end;\">\n                                  <!-- <button mat-button color=\"warn\" *ngIf=\"news.newsstatus.status != 'published'\" (click)=\"deleteNews(news.id)\">Delete</button> -->\n                                  <!-- <button mat-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\">Edit</button> -->\n\n                                  <button mat-icon-button color=\"warn\" (click)=\"addToList(news.id)\" matTooltip=\"Add to List\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">add</mat-icon>\n                                  </button>\n\n                                  <!-- <button mat-icon-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\" matTooltip=\"Edit News\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                                  </button>\n                                  <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.id)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                                  </button> -->\n\n                              </mat-cell>\n                            </ng-container>\n                            </div>\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></mat-row>\n                          </mat-table>\n                        </div>\n                    </mat-card-content>\n                  </mat-tab>\n\n\n\n\n\n\n\n                  <!-- DAY -4 -->\n                  <mat-tab label=\"{{newsData['5']['date']}}\">\n                    <mat-card-content>\n                        <div class=\"table-rasponsive\">\n                          <mat-table #table [dataSource]=\"dataSource4\">\n                            <!--- Note that these columns can be defined in any order.\n                                  The actual rendered columns are set as a property on the row definition\" -->\n\n                            <!-- Name Column -->\n                            <ng-container matColumnDef=\"news_name\">\n                              <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\"> {{ news.news_name | uppercase }} </mat-cell>\n                            </ng-container>\n\n                            <!-- Heading Column -->\n                            <ng-container matColumnDef=\"heading\">\n                              <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" [class.dhv_nosize]=\"news.language.language_code=='Dhv'\"> {{news.heading}} </mat-cell>\n                            </ng-container>\n\n                            <!-- Date Column -->\n                            <ng-container matColumnDef=\"date\">\n                              <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" matTooltip=\"{{news.created_at | date:'medium'}}\" matTooltipPosition=\"below\">\n                                  <span *ngIf=\"(news.created_at|date) === (news.updated_at|date)\">{{news.created_at | date}}</span>\n                                  <mat-chip-list><mat-chip selected=\"true\" *ngIf=\"(news.created_at|date) != (news.updated_at|date)\" class=\"bg-warning\">{{news.created_at | date}}</mat-chip></mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Status Column -->\n                            <ng-container matColumnDef=\"status\">\n                                <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\">\n                                  <mat-chip-list>\n                                    <mat-chip selected=\"false\" *ngIf=\"news.newsstatus.status == 'draft'\">Draft</mat-chip>\n                                    <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'published'\">Approved</mat-chip>\n                                    <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n                                    <mat-chip selected=\"true\" *ngIf=\"news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n                                  </mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Actions Column -->\n                            <!--<div [hidden]=\"iii!=hoveredIndex\">-->\n                            <div>\n                            <ng-container matColumnDef=\"actions\">\n                              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" style=\"display: flex; justify-content: flex-end;\">\n                                  <!-- <button mat-button color=\"warn\" *ngIf=\"news.newsstatus.status != 'published'\" (click)=\"deleteNews(news.id)\">Delete</button> -->\n                                  <!-- <button mat-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\">Edit</button> -->\n\n                                  <button mat-icon-button color=\"warn\" (click)=\"addToList(news.id)\" matTooltip=\"Add to List\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">add</mat-icon>\n                                  </button>\n\n                                  <!-- <button mat-icon-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\" matTooltip=\"Edit News\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                                  </button>\n                                  <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.id)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                                  </button> -->\n\n                              </mat-cell>\n                            </ng-container>\n                            </div>\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></mat-row>\n                          </mat-table>\n                        </div>\n                    </mat-card-content>\n                  </mat-tab>\n\n\n\n\n\n\n\n                  <!-- DAY -5 -->\n                  <mat-tab label=\"{{newsData['6']['date']}}\">\n                    <mat-card-content>\n                        <div class=\"table-rasponsive\">\n                          <mat-table #table [dataSource]=\"dataSource5\">\n                            <!--- Note that these columns can be defined in any order.\n                                  The actual rendered columns are set as a property on the row definition\" -->\n\n                            <!-- Name Column -->\n                            <ng-container matColumnDef=\"news_name\">\n                              <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\"> {{ news.news_name | uppercase }} </mat-cell>\n                            </ng-container>\n\n                            <!-- Heading Column -->\n                            <ng-container matColumnDef=\"heading\">\n                              <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" [class.dhv_nosize]=\"news.language.language_code=='Dhv'\"> {{news.heading}} </mat-cell>\n                            </ng-container>\n\n                            <!-- Date Column -->\n                            <ng-container matColumnDef=\"date\">\n                              <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" matTooltip=\"{{news.created_at | date:'medium'}}\" matTooltipPosition=\"below\">\n                                  <span *ngIf=\"(news.created_at|date) === (news.updated_at|date)\">{{news.created_at | date}}</span>\n                                  <mat-chip-list><mat-chip selected=\"true\" *ngIf=\"(news.created_at|date) != (news.updated_at|date)\" class=\"bg-warning\">{{news.created_at | date}}</mat-chip></mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Status Column -->\n                            <ng-container matColumnDef=\"status\">\n                                <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\">\n                                  <mat-chip-list>\n                                    <mat-chip selected=\"false\" *ngIf=\"news.newsstatus.status == 'draft'\">Draft</mat-chip>\n                                    <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'published'\">Approved</mat-chip>\n                                    <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n                                    <mat-chip selected=\"true\" *ngIf=\"news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n                                  </mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Actions Column -->\n                            <!--<div [hidden]=\"iii!=hoveredIndex\">-->\n                            <div>\n                            <ng-container matColumnDef=\"actions\">\n                              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" style=\"display: flex; justify-content: flex-end;\">\n                                  <!-- <button mat-button color=\"warn\" *ngIf=\"news.newsstatus.status != 'published'\" (click)=\"deleteNews(news.id)\">Delete</button> -->\n                                  <!-- <button mat-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\">Edit</button> -->\n\n                                  <button mat-icon-button color=\"warn\" (click)=\"addToList(news.id)\" matTooltip=\"Add to List\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">add</mat-icon>\n                                  </button>\n\n                                  <!-- <button mat-icon-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\" matTooltip=\"Edit News\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                                  </button>\n                                  <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.id)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                                  </button> -->\n\n                              </mat-cell>\n                            </ng-container>\n                            </div>\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></mat-row>\n                          </mat-table>\n                        </div>\n                    </mat-card-content>\n                  </mat-tab>\n\n\n\n\n\n\n\n                  <!-- DAY -6 -->\n                  <mat-tab label=\"{{newsData['7']['date']}}\">\n                    <mat-card-content>\n                        <div class=\"table-rasponsive\">\n                          <mat-table #table [dataSource]=\"dataSource6\">\n                            <!--- Note that these columns can be defined in any order.\n                                  The actual rendered columns are set as a property on the row definition\" -->\n\n                            <!-- Name Column -->\n                            <ng-container matColumnDef=\"news_name\">\n                              <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\"> {{ news.news_name | uppercase }} </mat-cell>\n                            </ng-container>\n\n                            <!-- Heading Column -->\n                            <ng-container matColumnDef=\"heading\">\n                              <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" [class.dhv_nosize]=\"news.language.language_code=='Dhv'\"> {{news.heading}} </mat-cell>\n                            </ng-container>\n\n                            <!-- Date Column -->\n                            <ng-container matColumnDef=\"date\">\n                              <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" matTooltip=\"{{news.created_at | date:'medium'}}\" matTooltipPosition=\"below\">\n                                  <span *ngIf=\"(news.created_at|date) === (news.updated_at|date)\">{{news.created_at | date}}</span>\n                                  <mat-chip-list><mat-chip selected=\"true\" *ngIf=\"(news.created_at|date) != (news.updated_at|date)\" class=\"bg-warning\">{{news.created_at | date}}</mat-chip></mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Status Column -->\n                            <ng-container matColumnDef=\"status\">\n                                <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\">\n                                  <mat-chip-list>\n                                    <mat-chip selected=\"false\" *ngIf=\"news.newsstatus.status == 'draft'\">Draft</mat-chip>\n                                    <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'published'\">Approved</mat-chip>\n                                    <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n                                    <mat-chip selected=\"true\" *ngIf=\"news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n                                  </mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Actions Column -->\n                            <!--<div [hidden]=\"iii!=hoveredIndex\">-->\n                            <div>\n                            <ng-container matColumnDef=\"actions\">\n                              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" style=\"display: flex; justify-content: flex-end;\">\n                                  <!-- <button mat-button color=\"warn\" *ngIf=\"news.newsstatus.status != 'published'\" (click)=\"deleteNews(news.id)\">Delete</button> -->\n                                  <!-- <button mat-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\">Edit</button> -->\n\n                                  <button mat-icon-button color=\"warn\" (click)=\"addToList(news.id)\" matTooltip=\"Add to List\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">add</mat-icon>\n                                  </button>\n\n                                  <!-- <button mat-icon-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\" matTooltip=\"Edit News\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                                  </button>\n                                  <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.id)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                                  </button> -->\n\n                              </mat-cell>\n                            </ng-container>\n                            </div>\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></mat-row>\n                          </mat-table>\n                        </div>\n                    </mat-card-content>\n                  </mat-tab>\n\n\n\n                  <!-- BREAKERS -->\n                  <mat-tab label=\"Breakers\">\n                      <mat-card-content>\n                          <div class=\"table-rasponsive\">\n                            <mat-table #table [dataSource]=\"dataSourceBreakers\">\n                              <!--- Note that these columns can be defined in any order.\n                                    The actual rendered columns are set as a property on the row definition\" -->\n\n                              <!-- Name Column -->\n                              <ng-container matColumnDef=\"news_name\">\n                                <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\"> {{ news.news_name | uppercase }} </mat-cell>\n                              </ng-container>\n\n                              <!-- Heading Column -->\n                              <ng-container matColumnDef=\"heading_br\">\n                                <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\" [class.dhv_nosize]=\"news.language.language_code=='Dhv'\"> {{news.heading}} </mat-cell>\n                              </ng-container>\n\n                              <!-- Date Column -->\n                              <ng-container matColumnDef=\"date\">\n                                <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\" matTooltip=\"{{news.created_at | date:'medium'}}\" matTooltipPosition=\"below\">\n                                    <span *ngIf=\"(news.created_at|date) === (news.updated_at|date)\">{{news.created_at | date}}</span>\n                                    <mat-chip-list><mat-chip selected=\"true\" *ngIf=\"(news.created_at|date) != (news.updated_at|date)\" class=\"bg-warning\">{{news.created_at | date}}</mat-chip></mat-chip-list>\n                                </mat-cell>\n                              </ng-container>\n\n                              <!-- Status Column -->\n                              <ng-container matColumnDef=\"status\">\n                                  <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n                                  <mat-cell *matCellDef=\"let news\">\n                                    <mat-chip-list>\n                                      <mat-chip selected=\"false\" *ngIf=\"news.newsstatus.status == 'draft'\">Draft</mat-chip>\n                                      <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'published'\">Approved</mat-chip>\n                                      <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n                                      <mat-chip selected=\"true\" *ngIf=\"news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n                                    </mat-chip-list>\n                                </mat-cell>\n                              </ng-container>\n\n                              <!-- Actions Column -->\n                              <!--<div [hidden]=\"iii!=hoveredIndex\">-->\n                              <div>\n                              <ng-container matColumnDef=\"actions_br\">\n                                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\" style=\"display: flex; justify-content: flex-end;\">\n                                    <!-- <button mat-button color=\"warn\" *ngIf=\"news.newsstatus.status != 'published'\" (click)=\"deleteNews(news.id)\">Delete</button> -->\n                                    <!-- <button mat-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\">Edit</button> -->\n\n                                    <button mat-icon-button color=\"warn\" (click)=\"addToList(news.id)\" matTooltip=\"Add to List\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"Edit\">add</mat-icon>\n                                    </button>\n\n                                    <!-- <button mat-icon-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\" matTooltip=\"Edit News\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                                    </button>\n                                    <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.id)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                                        <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                                    </button> -->\n\n                                </mat-cell>\n                              </ng-container>\n                              </div>\n\n                              <mat-header-row *matHeaderRowDef=\"displayedColumnsBreaker\"></mat-header-row>\n                              <mat-row *matRowDef=\"let row; columns: displayedColumnsBreaker; let i=index\"></mat-row>\n                            </mat-table>\n                          </div>\n                      </mat-card-content>\n                    </mat-tab>\n\n\n\n\n\n\n\n                  <!-- SEARCH NEWS TO ADD -->\n                  <!-- <mat-tab label=\"Todays News\">\n                      <mat-card-content>\n\n                      </mat-card-content>\n                    </mat-tab>\n                    -->\n                </mat-tab-group>\n\n\n\n              </mat-card-content>\n          </mat-card>\n      </div>\n  </div>\n  <!-- <button mat-fab color=\"warn\" class=\"bottom-right\" routerLink=\"/news/write\">\n    <mat-icon class=\"mat-24\">create</mat-icon>\n  </button> -->\n","import { Component, OnInit, Inject, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { News } from './../../news/models/news';\n\n@Component({\n  selector: 'app-notes-dialog',\n  templateUrl: './notes-dialog.component.html'\n})\nexport class NotesDialogComponent implements OnInit {\n  onReject = new EventEmitter();\n  noteInp;\n  editorNotes;\n\n  constructor(\n    public dialogRef: MatDialogRef<NotesDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit() {\n    this.editorNotes = new RejectNotes(this.data.id);\n    console.log(this.data);\n  }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n  addNote() {\n    const tmpNote = this.noteInp;\n    this.editorNotes.addNote(tmpNote);\n    this.noteInp = '';\n  }\n\n  doReject() {\n    this.closeDialog(false);\n    this.onReject.emit(this.editorNotes);\n  }\n\n}\n\nexport class RejectNotes {\n\n  news_id: any;\n  notes?: any = [];\n  containNotes = false;\n\n  constructor(\n    newsId\n  ) {\n    this.news_id = newsId;\n  }\n\n  addNote(note: string) {\n    this.containNotes = true;\n    this.notes.push(note);\n  }\n}\n","<h1 mat-dialog-title>Add Note to news</h1>\n<div mat-dialog-content>\n    <!-- <mat-card>\n        <mat-card-content> -->\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <mat-list role=\"list\">\n              <mat-list-item role=\"listitem\" *ngFor=\"let note of editorNotes.notes\">\n                {{note}}\n                <!-- <button mat-button position=\"after\"><mat-icon>close</mat-icon></button> -->\n              </mat-list-item>\n              <mat-list-item role=\"listitem\" *ngIf=\"!editorNotes.notes[0]\"><i>Reject without any notes.</i></mat-list-item>\n            </mat-list>\n          </div>\n\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- hr column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n              <mat-divider></mat-divider>\n            </div>\n          </div>\n\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" class=\"m-t-30\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Note</mat-label>\n                <textarea matInput mat-autosize matAutosizeMinRows=\"2\" #rejectNote name=\"rejectNote\" [(ngModel)]=\"noteInp\"></textarea>\n              </mat-form-field>\n            </div>\n\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                <button mat-button color=\"primary\" (click)=\"addNote()\">Add Note</button>\n            </div>\n\n          </div>\n        <!-- </mat-card-content>\n    </mat-card> -->\n</div>\n<div mat-dialog-actions align=\"end\">\n  <button mat-button (click)=\"closeDialog(false)\" tabindex=\"2\">Cancel</button>\n  <button mat-raised-button color=\"warn\" (click)=\"doReject()\" tabindex=\"-1\">Reject</button>\n</div>\n","import { Location } from '@angular/common';\nimport { Component, OnInit, Input, Output, HostListener, HostBinding, ViewChild, ElementRef, Renderer2 } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { News, NewsBar, TickerNews } from '../../news/models/news';\nimport { NewsState } from '../../store/app.state';\nimport * as editorActions from '../store/news-editor.actions';\nimport { EditorNewsService } from '../services/editor-news.service';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from './../../shared/component/confirm-dialog/confirm-dialog.component';\nimport { ContextMenuComponent } from 'ngx-contextmenu';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  news_bar = new NewsBar('', '');\n  ticker_news = new TickerNews('');\n  public new_news: News;\n  edit_id = this.aRoute.snapshot.params.id;\n\n  @Input() public dhivehiEnabled: boolean;\n  @Input() public tickerEnabled = false;\n  submitted = false;\n  @Input() loaded = false;\n  loaded2 = false;\n\n  @ViewChild(ContextMenuComponent, {static: true}) public basicMenu: ContextMenuComponent;\n  @ViewChild('news_body', {static: true}) el:ElementRef;\n\n  constructor(\n    public snackBar: MatSnackBar,\n    private router: Router,\n    private newsService: EditorNewsService,\n    private aRoute: ActivatedRoute,\n    private store: Store<NewsState>,\n    public dialog: MatDialog,\n    private location: Location\n  ) {\n    this.loadEditNews(this.edit_id);\n  }\n\n  ngOnInit() {\n  }\n\n  loadEditNews(id: number) {\n    this.loaded = false;\n    this.edit_id = id;\n    this.newsService.editNews(this.edit_id)\n      .subscribe(\n        (response) => {\n          this.new_news = response;\n          if ( this.new_news.language.language_code === 'Dhv' ) { this.dhivehiEnabled = true; } else { this.dhivehiEnabled = false; }\n          this.loaded = true;\n        },\n        (error) => {\n          this.submitted = false;\n          const message = '';\n          this.snackBar.open(message, 'dismiss');\n        });\n  }\n\n  onSubmit(draft: boolean) {\n    this.submitted = true;\n    this.new_news.draft = draft;\n    this.newsService.updateNews(this.new_news, this.edit_id)\n        .subscribe(\n          (response) => {\n            this.store.dispatch(new editorActions.UpdateReviewNewsLoaded({ isLoaded: false }));\n            // this.location.back();\n            this.router.navigate(['/editor/review']);\n          },\n          (error) => {\n            this.submitted = false;\n          }\n    );\n  }\n\n  cancelWrite() {\n    this.router.navigate(['/editor/review']);\n  }\n\n  approveNews(id) {\n    this.store.dispatch(new editorActions.ApproveNews({ id: id }));\n    this.router.navigate(['/editor/review']);\n    this.store.dispatch(new editorActions.UpdateReviewNewsLoaded({ isLoaded: false }));\n  }\n\n  changeLanguage() {\n    if (this.dhivehiEnabled) {\n      this.new_news.language.language_code = 'Dhv';\n    } else {\n      this.new_news.language.language_code = 'Eng';\n    }\n  }\n\n  addBar() {\n    const nBar = new NewsBar(null, null, null, null, null, null);\n    this.new_news.newsbar.push(nBar);\n  }\n\n  removeBar(barId) {\n\n    // let dialogRef = this.dialog.open( ConfirmDialogComponent, { width: '350px' });\n\n    // dialogRef.afterClosed().subscribe((result: string) => {\n    //     dialogRef = null;\n    //     if (result) { // user confirmed to delete\n    //       this.newsService.destroyBar(barId)\n    //       .subscribe(\n    //         (response) => {\n    //           /*\n    //           ---------- // TODO\n    //           instead of reloading the model, remove the bar from fiest loaded model ->'this.new_news'\n    //           because now the if the user had made any changes before removing a bar,\n    //           the changes made earlier are reloaded with the old data from database.\n    //           */\n    //           this.loadEditNews(this.edit_id);\n    //           console.log(response);\n    //         }\n    //       );\n    //     }\n    // });\n\n  }\n\n  addTicker() {\n    const ticker = new TickerNews('');\n    this.new_news.tickernews.push(ticker);\n  }\n\n  removeTicker(tickerIndex) {\n    this.new_news.tickernews.splice(tickerIndex, 1);\n  }\n\n  toggleTicker() {\n    if (!this.tickerEnabled) {\n      this.new_news.tickernews = null;\n    }else {\n      const ticker = new TickerNews('');\n      this.new_news.tickernews = [ticker];\n    }\n  }\n\n  // TODO: Remove this when we're done, this is here for debugging purpose\n  get diagnostic() { return JSON.stringify(this.new_news); }\n\n  selectionchange(e?: any) {\n    let ev = this.el.nativeElement;\n    console.log(ev.selectionStart)\n\n    const start = ev.selectionStart;\n    const end = ev.selectionEnd;\n\n    console.log(ev.value.substr(start, end - start))\n\n    let newBodyText = ev.value.substr(0, start)+'<review>'+ev.value.substr(start, end - start)+'</review>'+ev.value.substr(end, ev.value.toString().length);\n    this.new_news.body = newBodyText;\n  }\n}\n","<div [hidden]=\"submitted\" *ngIf=\"loaded\">\n  <mat-toolbar color=\"secondary\" class=\"no-shadow\">\n    <mat-toolbar-row>\n        <span fxFlex fxShow=\"false\" fxShow.gt-xs>\n\n          <mat-chip-list>Edit News&nbsp;\n            <mat-chip selected=\"false\" *ngIf=\"new_news.newsstatus.status == 'draft'\">Draft</mat-chip>\n            <mat-chip color=\"warn\" selected=\"true\" *ngIf=\"new_news.newsstatus.status == 'published'\">Published</mat-chip>\n            <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"new_news.newsstatus.status == 'ready'\">Pending</mat-chip>\n          </mat-chip-list>\n        </span>\n        <div fxShow=\"false\" fxShow.gt-xs>\n            <mat-slide-toggle labelPosition=\"after\" color=\"secondary\" [(ngModel)]=\"dhivehiEnabled\" (ngModelChange)=\"changeLanguage($event)\">{{new_news.language.language_code}}</mat-slide-toggle>\n            &nbsp;&nbsp;\n            <mat-slide-toggle labelPosition=\"after\" color=\"secondary\" [(ngModel)]=\"tickerEnabled\" (ngModelChange)=\"toggleTicker()\">Ticker</mat-slide-toggle>\n        </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n  </div>\n\n  <form class=\"basic-form\" #newsForm=\"ngForm\" [hidden]=\"submitted\" *ngIf=\"loaded\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"center start\">\n    <div fxFlex.gt-md=\"100\" fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n      <mat-card class=\"mat-card-top\">\n\n        <mat-toolbar color=\"primary\" class=\"no-shadow\">\n          <div fxLayout=\"row\" fxFlex=\"100\" >\n            <span class=\"m-t-0 font-14\">Body</span>\n          </div>\n        </mat-toolbar>\n\n\n        <mat-card-content>\n\n                <!-- ============================================================== -->\n                <!-- column -->\n                <!-- ============================================================== -->\n\n                <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n\n                    <!-- <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <code>{{diagnostic}}</code>\n                    </div> -->\n\n                    <!-- column -->\n                    <div fxFlex.gt-md=\"100\" fxFlex=\"100\">\n                      <mat-form-field appearance=\"outline\">\n                        <mat-label>News Name</mat-label>\n                        <input matInput placeholder=\"News Name\" #newsName required\n                        [(ngModel)]=\"new_news.news_name\"\n                        name=\"newsName\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-md=\"100\" fxFlex=\"100\">\n                      <mat-form-field appearance=\"outline\">\n                          <mat-label>News Title</mat-label>\n                          <textarea matInput mat-autosize matAutosizeMinRows=\"2\" #dhvHeading required\n                          [appDnrmsThaana]=\"dhivehiEnabled\"\n                          [(ngModel)]=\"new_news.heading\"\n                            name=\"dhvHeading\"></textarea>\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <mat-form-field appearance=\"outline\">\n                        <mat-label>News Body</mat-label>\n                        <textarea matInput mat-autosize matAutosizeMinRows=\"20\" #news_body required\n                        [appDnrmsThaana]=\"dhivehiEnabled\"\n                        [(ngModel)]=\"new_news.body\"\n                        [contextMenu]=\"basicMenu\" [contextMenuSubject]=\"dhvInputBody\"\n                        name=\"dhvInputBody\"></textarea>\n                      </mat-form-field>\n                    </div>\n\n\n                </div>\n\n        </mat-card-content>\n      </mat-card>\n\n      <mat-card class=\"mat-card-top\" *ngFor=\"let cBar of new_news.newsbar; let i = index\">\n        <mat-toolbar color=\"primary\" *ngIf=\"i === 0\" class=\"no-shadow\">\n          <div fxLayout=\"row\" fxFlex=\"100\" >\n            <span class=\"m-t-0 font-14\">\n              News Bar <span *ngIf=\"i != 0\">{{i+1}}</span>\n            </span>\n          </div>\n          <span class=\"example-fill-remaining-space\"></span>\n\n          <mat-icon (click)=\"addBar()\">add_circle_outline</mat-icon>\n          <mat-icon (click)=\"removeBar(i)\" *ngIf=\"i !== 0\">highlight_off</mat-icon>\n        </mat-toolbar>\n\n        <mat-toolbar color=\"secondary\" *ngIf=\"i != 0\" class=\"no-shadow\">\n          <div fxLayout=\"row\" fxFlex=\"100\" >\n            <span class=\"m-t-0 font-14\">\n              News Bar <span *ngIf=\"i != 0\">{{i+1}}</span>\n            </span>\n          </div>\n          <span class=\"example-fill-remaining-space\"></span>\n\n          <mat-icon (click)=\"addBar()\">add_circle_outline</mat-icon>\n          <mat-icon (click)=\"removeBar(cBar.id)\" *ngIf=\"i !== 0\">highlight_off</mat-icon>\n        </mat-toolbar>\n\n        <mat-card-content>\n            <!--<mat-divider *ngIf=\"i > 0\"></mat-divider>-->\n            <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n              <!-- column -->\n              <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Bar Title</mat-label>\n                  <textarea matInput mat-autosize matAutosizeMinRows=\"2\" #BarTitledhvInput{{i}} required\n                  [appDnrmsThaana]=\"dhivehiEnabled\"\n                  [(ngModel)]=\"cBar.title\"\n                    name=\"BarTitledhvInput{{i}} \"></textarea>\n                </mat-form-field>\n              </div>\n              <!-- column -->\n              <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Bar Detail</mat-label>\n                  <textarea matInput mat-autosize matAutosizeMinRows=\"2\" #BarDetailedhvInput{{i}} required\n                  [appDnrmsThaana]=\"dhivehiEnabled\"\n                  [(ngModel)]=\"cBar.detail\"\n                    name=\"BarDetailedhvInput{{i}} \"></textarea>\n                </mat-form-field>\n              </div>\n            </div>\n        </mat-card-content>\n      </mat-card>\n\n\n      <span *ngIf=\"tickerEnabled\">\n      <mat-card class=\"mat-card-top\" *ngFor=\"let cTicker of new_news.tickernews; let i = index\">\n        <mat-toolbar color=\"primary\" *ngIf=\"i === 0\" class=\"no-shadow\">\n            <div fxLayout=\"row\" fxFlex=\"100\">\n              <span class=\"m-t-0 font-14\">\n                  Ticker News <span *ngIf=\"i != 0\">{{i+1}}</span>\n              </span>\n            </div>\n            <span class=\"example-fill-remaining-space\"></span>\n\n            <mat-icon (click)=\"addTicker()\">add_circle_outline</mat-icon>\n            <mat-icon (click)=\"removeTicker(i)\" *ngIf=\"i !== 0\">highlight_off</mat-icon>\n          </mat-toolbar>\n\n          <mat-toolbar color=\"secondary\" *ngIf=\"i != 0\" class=\"no-shadow\">\n              <div fxLayout=\"row\" fxFlex=\"100\">\n                <span class=\"m-t-0 font-14\">\n                    Ticker News <span *ngIf=\"i != 0\">{{i+1}}</span>\n                </span>\n              </div>\n              <span class=\"example-fill-remaining-space\"></span>\n\n              <mat-icon (click)=\"addTicker()\">add_circle_outline</mat-icon>\n              <mat-icon (click)=\"removeTicker(i)\" *ngIf=\"i !== 0\">highlight_off</mat-icon>\n            </mat-toolbar>\n\n        <mat-card-content>\n            <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n\n              <!-- column -->\n              <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Ticker Text</mat-label>\n                  <textarea matInput mat-autosize matAutosizeMinRows=\"2\" #tickerdhvInput{{i}} required\n                  [appDnrmsThaana]=\"dhivehiEnabled\"\n                  [(ngModel)]=\"cTicker.news\"\n                    name=\"tickerdhvInput{{i}}\"></textarea>\n                </mat-form-field>\n              </div>\n\n            </div>\n        </mat-card-content>\n      </mat-card>\n      </span>\n\n      <mat-card class=\"mat-card-top\">\n          <mat-card-content>\n              <mat-card-actions align=\"end\">\n              <!-- column -->\n              <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                <button mat-button color=\"warn\" (click)=\"cancelWrite()\">Cancel</button>\n                <button type=\"button\" (click)=\"onSubmit(false)\" mat-raised-button color=\"primary\" [disabled]=\"!newsForm.form.valid\">Save</button>\n                <!-- <button mat-raised-button color=\"primary\" (click)=\"approveNews(new_news.id)\">Approve</button> -->\n              </div>\n              </mat-card-actions>\n          </mat-card-content>\n      </mat-card>\n\n    </div>\n  </div>\n  </form>\n\n  <div *ngIf=\"submitted || loaded2\">\n  <div fxLayout=\"row\">\n      <div fxFlex.gt-sm=\"100%\" >\n          <mat-card>\n              <mat-card-content>\n                <mat-card-title>Saving News</mat-card-title>\n                <mat-progress-bar mode=\"indeterminate\" value=\"40\" class=\"m-t-30\"></mat-progress-bar>\n              </mat-card-content>\n          </mat-card>\n      </div>\n  </div>\n  </div>\n\n\n  <context-menu [menuClass]=\"'c-menu'\">\n    <ng-template contextMenuItem (execute)=\"selectionchange($event)\">\n        <button mat-menu-item><mat-icon>comment</mat-icon> Add Comment </button>\n    </ng-template>\n    <ng-template contextMenuItem (execute)=\"selectionchange()\">\n        <button mat-menu-item><mat-icon>highlight</mat-icon> Highlight Selected </button>\n    </ng-template>\n  </context-menu>\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"rxjs-compat/add/observable/of\");\n//# sourceMappingURL=of.js.map","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-editor-dashboard',\n  templateUrl: './editor-dashboard.component.html',\n  styleUrls: ['./editor-dashboard.component.css']\n})\nexport class EditorDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  editor-dashboard works!\n</p>\n","import { Routes } from '@angular/router';\nimport { EditorDashboardComponent } from './editor-dashboard/editor-dashboard.component';\nimport { ReviewComponent } from './review/review.component';\n\nimport { EditComponent } from './edit/edit.component';\nimport { ListComponent } from './list/list.component';\n\nexport const NewsEditorRoutes: Routes = [\n {\n    path: '',\n    children: [{\n      path: 'dashboard',\n      component: EditorDashboardComponent,\n      data: { role: 'editor' }\n    },\n    {\n      path: 'review',\n      component: ReviewComponent,\n      data: { role: 'editor' }\n    }, {\n      path: 'edit/:id',\n      component: EditComponent,\n      data: { role: 'editor' }\n    }, {\n      path: 'list',\n      component: ListComponent,\n      data: { role: 'editor' }\n    }]\n  }\n];\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { environment } from './../../../environments/environment';\nimport { News, ListOrder } from '../../news/models/news';\nimport { RejectNotes } from '../notes-dialog/notes-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditorNewsService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  // get all news in ready status (review)\n  getReviewNews () {\n    return this.http.get<any>(this.apiUrl + 'news/editor/ready');\n  }\n\n  // get all news in ready status (review)\n  approveNews (id: number) {\n    return this.http.post<any>(this.apiUrl + 'news/editor/approve', { newsId: id });\n  }\n\n  // reject news\n  reJectNews (reject: RejectNotes) {\n    return this.http.post<any>(this.apiUrl + 'news/editor/reject', reject);\n    // { news_id: reject.news_id, notes: reject.notes, containNotes: reject.containNotes }\n  }\n\n  // get a news for editing\n  editNews (id: number) {\n    return this.http.get<any>( this.apiUrl + 'news/editor/edit/' + id );\n  }\n\n  // save a news, with bar(s) & ticker(s)\n  updateNews (save_news: News, id: number) {\n    const headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\n\n    save_news.newsstatus_id = 1;\n    const post_str = JSON.parse(JSON.stringify(save_news));\n\n    return this.http.put<any>(this.apiUrl + 'news/editor/' + id, post_str, { headers: headers });\n  }\n\n\n  /**\n   * News List Services\n   */\n\n  // get todays lists\n  getNewsLists () {\n    return this.http.get<any>(this.apiUrl + 'news/editor/lists');\n  }\n\n  // get lists for given date, date format = 'Y-m-d' eg: 2018-11-20\n  getNewsListsByDate (date: string) {\n    return this.http.get<any>(this.apiUrl + 'news/editor/lists/' + date);\n  }\n\n  // get all news written today if published\n  getTodaysNews () {\n    return this.http.get<any>(this.apiUrl + 'news/editor/news/todays');\n  }\n\n  // add a news to a list\n  addNewsToList (data: { list_id: number, news_id: number }) {\n    return this.http.post<any>(this.apiUrl + 'news/editor/list/news/add', data);\n  }\n\n  // add a news to a list\n  removeNewsFromList (news_id: number) {\n    return this.http.delete<any>(this.apiUrl + 'news/editor/list/news/remove/' + news_id);\n  }\n\n  //order news in a list\n  orderList(ordered_list: ListOrder[]) {\n    return this.http.post<any>(this.apiUrl + 'news/editor/list/order/update', ordered_list);\n  }\n\n  //update selected news list\n  updateSelectedList(list_id: number) {\n    return this.http.put<any>(this.apiUrl + 'news/editor/list/selected/update', { \"settings_value\": list_id });\n  }\n\n  // get selected list\n  getSelectedList () {\n    return this.http.get<any>(this.apiUrl + 'news/lists/selected-list');\n  }\n}\n"],"sourceRoot":"webpack:///"}