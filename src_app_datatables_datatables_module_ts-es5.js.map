{"version":3,"sources":["webpack:///src/app/datatables/data-table/data-table.component.ts","webpack:///src/app/datatables/data-table/data-table.component.html","webpack:///src/app/datatables/datatables.module.ts","webpack:///src/app/datatables/datatables.routing.ts","webpack:///src/app/datatables/table-editing/table-editing.component.html","webpack:///src/app/datatables/table-editing/table-editing.component.ts","webpack:///src/app/datatables/table-filter/table-filter.component.ts","webpack:///src/app/datatables/table-filter/table-filter.component.html"],"names":["data","DataTableComponent","editing","rows","temp","loadingIndicator","reorderable","columns","prop","name","setTimeout","event","val","target","value","toLowerCase","DataTablesModule","CommonModule","RouterModule","DataTablesRoutes","MatInputModule","NgxDatatableModule","DemoMaterialModule","TableEditingComponent","TableFilterComponent","path","children","component","table","cell","rowIndex","console","log","filter","d","indexOf","updateFilter"],"mappings":"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","file":"src_app_datatables_datatables_module_ts-es5.js","sourcesContent":["import { Component, ViewChild } from '@angular/core';\n\ndeclare var require: any;\nconst data: any = require('assets/company.json');\n\n@Component({\n  selector: 'app-data-table',\n  templateUrl: './data-table.component.html',\n  styleUrls: ['./data-table.component.scss']\n})\nexport class DataTableComponent {\n  editing = {};\n    rows = [];\n    temp = [...data];\n\n    loadingIndicator = true;\n    reorderable = true;\n\n    columns = [\n        { prop: 'name' },\n        { name: 'Gender' },\n        { name: 'Company' }\n    ];\n\n    @ViewChild(DataTableComponent, {static: true}) table: DataTableComponent;\n    constructor() {\n        this.rows = data;\n        this.temp = [...data];\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n    }\n\n    updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n\n    }\n}\n","<mat-card>\n    <mat-card-content>\n        <mat-card-title>Basic Data table</mat-card-title>\n        <ngx-datatable\n            #table\n            class='material'\n            [columns]=\"columns\"\n            [columnMode]=\"'force'\"\n            [headerHeight]=\"50\"\n            [footerHeight]=\"50\"\n            [rowHeight]=\"'auto'\"\n            [limit]=\"10\"\n            [rows]='rows'> \n          </ngx-datatable>\n    </mat-card-content>\n</mat-card>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material/input';\nimport { DemoMaterialModule} from '../demo-material-module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { DataTablesRoutes } from './datatables.routing';\nimport { DataTableComponent } from './data-table/data-table.component';\nimport { TableEditingComponent } from './table-editing/table-editing.component';\nimport { TableFilterComponent } from './table-filter/table-filter.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(DataTablesRoutes),\n    MatInputModule,\n    NgxDatatableModule,\n    DemoMaterialModule\n  ],\n  declarations: [\n    DataTableComponent,\n    TableEditingComponent,\n    TableFilterComponent\n\n  ]\n})\n\nexport class DataTablesModule {}\n","import { Routes } from '@angular/router';\n\nimport { DataTableComponent } from './data-table/data-table.component';\nimport { TableEditingComponent } from './table-editing/table-editing.component';\nimport { TableFilterComponent } from './table-filter/table-filter.component';\n\nexport const DataTablesRoutes: Routes = [\n  {\n    path: '',\n    children: [{\n      path: 'basicdatatable',\n      component: DataTableComponent\n    }, {\n      path: 'editing',\n      component: TableEditingComponent\n    }, {\n      path: 'filter',\n      component: TableFilterComponent\n    }]\n  }\n];\n","<mat-card>\n    <mat-card-content>\n        <mat-card-title>Editable table</mat-card-title>\n        <ngx-datatable\n                    #mydatatable\n                    class=\"material\"\n                    [headerHeight]=\"50\"\n                    [limit]=\"5\"\n                    [columnMode]=\"'force'\"\n                    [footerHeight]=\"50\"\n                    [rowHeight]=\"'auto'\"\n                    [rows]=\"rows\">\n                    <ngx-datatable-column name=\"Name\">\n                      <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\" let-row=\"row\">\n                        <span\n                          title=\"Double click to edit\"\n                          (dblclick)=\"editing[rowIndex + '-name'] = true\"\n                          *ngIf=\"!editing[rowIndex + '-name']\">\n                          {{value}}\n                        </span>\n                        <input\n                          autofocus\n                          (blur)=\"updateValue($event, 'name', rowIndex)\"\n                          *ngIf=\"editing[rowIndex+ '-name']\"\n                          type=\"text\"\n                          [value]=\"value\"\n                        />\n                      </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Gender\">\n                      <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-row=\"row\" let-value=\"value\">\n                         <span\n                          title=\"Double click to edit\"\n                          (dblclick)=\"editing[rowIndex + '-gender'] = true\"\n                          *ngIf=\"!editing[rowIndex + '-gender']\">\n                          {{value}}\n                        </span>\n                        <select\n                          *ngIf=\"editing[rowIndex + '-gender']\"\n                          (change)=\"updateValue($event, 'gender', rowIndex)\"\n                          [value]=\"value\">\n                          <option value=\"male\">Male</option>\n                          <option value=\"female\">Female</option>\n                        </select>\n                      </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Age\">\n                      <ng-template ngx-datatable-cell-template let-value=\"value\">\n                        {{value}}\n                      </ng-template>\n                    </ngx-datatable-column>\n                  </ngx-datatable>\n    </mat-card-content>\n</mat-card>\n","import { Component, ViewChild } from '@angular/core';\n\ndeclare var require: any;\nconst data: any = require('assets/company.json');\n\n@Component({\n  selector: 'app-table-editing',\n  templateUrl: './table-editing.component.html',\n  styleUrls: ['./table-editing.component.scss']\n})\nexport class TableEditingComponent {\n editing = {};\n    rows = [];\n    temp = [...data];\n\n    loadingIndicator = true;\n    reorderable = true;\n\n    columns = [\n        { prop: 'name' },\n        { name: 'Gender' },\n        { name: 'Company' }\n    ];\n\n    @ViewChild(TableEditingComponent, {static: true}) table: TableEditingComponent;\n    constructor() {\n        this.rows = data;\n        this.temp = [...data];\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n    }\n\n    updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n\n    // update the rows\n\n    // Whenever the filter changes, always go back to the first page\n    this.table = data;\n    }\n    updateValue(event, cell, rowIndex) {\n    console.log('inline editing rowIndex', rowIndex);\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n    console.log('UPDATED!', this.rows[rowIndex][cell]);\n    }\n}\n","import { Component, ViewChild } from '@angular/core';\n\ndeclare var require: any;\nconst data: any = require('assets/company.json');\n@Component({\n  selector: 'app-table-filter',\n  templateUrl: './table-filter.component.html',\n  styleUrls: ['./table-filter.component.scss']\n})\nexport class TableFilterComponent {\n  editing = {};\n    rows = [];\n    temp = [...data];\n\n    loadingIndicator = true;\n    reorderable = true;\n\n    columns = [\n        { prop: 'name' },\n        { name: 'Gender' },\n        { name: 'Company' }\n    ];\n\n    @ViewChild(TableFilterComponent, {static: true}) table: TableFilterComponent;\n    constructor() {\n        this.rows = data;\n        this.temp = [...data];\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n    }\n\n    updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n\n    // filter our data\n    const temp = this.temp.filter(function(d) {\n      return d.name.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // update the rows\n    this.rows = temp;\n    // Whenever the filter changes, always go back to the first page\n    this.table = data;\n    }\n    updateValue(event, cell, rowIndex) {\n    console.log('inline editing rowIndex', rowIndex);\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n    console.log('UPDATED!', this.rows[rowIndex][cell]);\n    }\n}\n","<mat-card>\n    <mat-card-content>\n        <mat-card-title>Filtered table</mat-card-title>\n        <mat-form-field>\n           <input matInput  type='text' class=\"form-control\"  placeholder='Type to filter the name column...' (keyup)='updateFilter($event)'   />\n        </mat-form-field>\n        <ngx-datatable\n            #table\n            class='material'\n            [columns]=\"columns\"\n            [columnMode]=\"'force'\"\n            [headerHeight]=\"50\"\n            [footerHeight]=\"50\"\n            [rowHeight]=\"'auto'\"\n            [limit]=\"10\"\n            [rows]='rows'> \n          </ngx-datatable>\n    </mat-card-content>\n</mat-card>"]}