{"version":3,"sources":["./src/app/control/cg-text/cg-text.component.ts","./src/app/control/cg-text/cg-text.component.html","./src/app/control/control.module.ts","./src/app/control/control.routing.ts","./src/app/control/news-cg/news-cg.component.ts","./src/app/control/news-cg/news-cg.component.html","./src/app/control/onair/onair.component.ts","./src/app/control/onair/onair.component.html","./src/app/control/services/control.service.ts","./src/app/control/services/onair.service.ts","./src/app/control/slide-data-dialog/slide-data-dialog.component.ts","./src/app/control/slide-data-dialog/slide-data-dialog.component.html","./src/app/control/sms/sms.component.ts","./src/app/control/sms/sms.component.html","./src/app/control/store/control.actions.ts","./src/app/control/store/control.effects.ts","./src/app/control/store/control.reducer.ts","./src/app/control/ticker/ticker.component.ts","./src/app/control/ticker/ticker.component.html"],"names":[],"mappings":"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","file":"src_app_control_control_module_ts-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cg-text',\n  templateUrl: './cg-text.component.html',\n  styleUrls: ['./cg-text.component.css']\n})\nexport class CgTextComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  cg-text works!\n</p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NewsCgComponent } from './news-cg/news-cg.component';\nimport { CgTextComponent } from './cg-text/cg-text.component';\nimport { TickerComponent } from './ticker/ticker.component';\nimport { RouterModule } from '@angular/router';\nimport { ControlRoutes } from './control.routing';\nimport { FormsModule } from '@angular/forms';\n\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { DragulaModule } from 'ng2-dragula';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { reducer } from './store/control.reducer';\nimport { ControlEffects } from './store/control.effects';\nimport { OnairComponent } from './onair/onair.component';\nimport { SlideDataDialogComponent } from './slide-data-dialog/slide-data-dialog.component';\nimport { SmsComponent } from './sms/sms.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(ControlRoutes),\n    FormsModule,\n    DemoMaterialModule,\n    FlexLayoutModule,\n    PerfectScrollbarModule,\n    DragulaModule,\n    SharedModule,\n    NgxDatatableModule,\n    StoreModule.forFeature('ControlState', reducer),\n    EffectsModule.forFeature([ControlEffects]),\n  ],\n  declarations: [\n    NewsCgComponent,\n    CgTextComponent,\n    TickerComponent,\n    OnairComponent,\n    SlideDataDialogComponent,\n    SmsComponent,\n  ],\n  entryComponents: [\n    SlideDataDialogComponent\n  ]\n})\nexport class ControlModule { }\n","import { Routes } from '@angular/router';\nimport { NewsCgComponent } from './news-cg/news-cg.component';\nimport { CgTextComponent } from './cg-text/cg-text.component';\nimport { TickerComponent } from './ticker/ticker.component';\nimport { OnairComponent } from './onair/onair.component';\nimport { SmsComponent } from './sms/sms.component';\n\nexport const ControlRoutes: Routes = [\n {\n    path: '',\n    children: [\n    {\n      path: 'news-cg',\n      component: NewsCgComponent,\n      data: { role: 'control' }\n    }, {\n      path: 'cg-text',\n      component: CgTextComponent,\n      data: { role: 'control' }\n    }, {\n      path: 'ticker',\n      component: TickerComponent,\n      data: { role: 'control' }\n    }, {\n      path: 'on-air',\n      component: OnairComponent,\n      data: { role: 'control' }\n    }, {\n      path: 'sms',\n      component: SmsComponent,\n      data: { role: 'control' }\n    }]\n  }\n];\n","import { Component, OnInit } from '@angular/core';\nimport { News, NewsList, ListNews, ListOrder } from './../../news/models/news';\n\nimport { Store } from '@ngrx/store';\nimport * as controlActions from '../store/control.actions';\nimport {Actions, ofType} from '@ngrx/effects';\n\n@Component({\n  selector: 'app-news-cg',\n  templateUrl: './news-cg.component.html',\n  styleUrls: ['./news-cg.component.css']\n})\nexport class NewsCgComponent implements OnInit {\n\n  NewsList = new NewsList();\n  selectedNews: ListNews;\n  selectedNewsKey = 0;\n\n  viewingKeyTmp: number = null;\n  viewingKey: number = null;\n\n  constructor(\n    private store: Store<any>,\n    private updates$: Actions,\n  ) { }\n\n  ngOnInit() {\n    this.store.dispatch(new controlActions.GetNewsCgNews());\n\n    this.updates$\n      .pipe(ofType(controlActions.GET_NEWS_CG_NEWS_SUCCESS))\n      .subscribe(() => {\n        this.store.select(store => store.ControlState.newsCgState)\n          .subscribe((list: NewsList) => {\n            this.NewsList = list;\n            if(this.NewsList.list_news){\n              this.selectedNews = this.NewsList.list_news[this.selectedNewsKey];\n            }else{\n              this.selectedNews = null;\n            }\n          });\n      });\n\n    this.updates$\n      .pipe(ofType(controlActions.UPDATE_NEWS_CG_NEWS_SUCCESS))\n      .subscribe(() => {\n        this.viewingKey = this.viewingKeyTmp;\n      });\n  }\n\n  nextNews() {\n    if (this.selectedNewsKey < (this.NewsList.list_news.length - 1)){\n      this.selectedNewsKey = this.selectedNewsKey + 1;\n    }\n    this.selectedNews = this.NewsList.list_news[this.selectedNewsKey];\n  }\n\n  previousNews() {\n    if (this.selectedNewsKey > 0){\n      this.selectedNewsKey = this.selectedNewsKey - 1;\n    }\n    this.selectedNews = this.NewsList.list_news[this.selectedNewsKey];\n  }\n\n  updateCg(id: number) {\n    this.viewingKeyTmp = id;\n    this.store.dispatch(new controlActions.UpdateNewsCgNews({ news_bar_id: id }));\n  }\n\n  stopCg() {\n    this.store.dispatch(new controlActions.StopNewsCg());\n  }\n\n}\n","<!-- ============================================================== -->\n<!-- Simple four boxes Row -->\n<!-- ============================================================== -->\n<!-- <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-content>\n\n          <div class=\"d-flex no-block\">\n\n              <button mat-raised-button color=\"primary\"><mat-icon>refresh</mat-icon> Load CG</button>\n              <button mat-raised-button color=\"warn\" class=\"m-l-20\" (click)=\"stopCg()\"><mat-icon>stop</mat-icon> Stop Bar</button>\n\n          </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div> -->\n\n\n\n  <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <!-- Column-->\n      <div fxFlex.gt-lg=\"75\" fxFlex.gt-md=\"60\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n              <div class=\"mb-1\">\n                <h1 class=\"mt-0\"><strong>{{NewsList.name}}</strong></h1>\n\n              </div>\n\n              <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" *ngIf=\"NewsList.list_news.length > 0\">\n                <div fxFlex.gt-xs=\"100\" fxFlex=\"100\" *ngIf=\"selectedNews\">\n                  <h4 class=\"text-danger font-bold\" style=\"text-align:center;\">{{selectedNews.news.news_name}}</h4>\n                  <div fxLayout=\"column\">\n                    <span *ngIf=\"selectedNews.news.language.language_code == 'Dhv'\" class=\"dhv\" style=\"text-align:center;\">{{selectedNews.news.heading}}</span>\n                    <span *ngIf=\"selectedNews.news.language.language_code != 'Dhv'\" style=\"text-align:center;\">{{selectedNews.news.heading}}</span>\n                  </div>\n                </div>\n              </div>\n            </mat-card-content>\n\n            <!-- Nothing state -->\n            <mat-card-content class=\"table-responsive\" *ngIf=\"NewsList.list_news.length == 0\">\n              <div style=\"padding-top:100px;\">\n                <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" style=\"height: 100%;padding: 0;margin: 0;display: -webkit-box;display: -moz-box;display: -ms-flexbox;display: -webkit-flex;display: flex;align-items: center;justify-content: center;\">\n                  <div fxLayout=\"row\">\n                      <img src=\"/assets/images/nothing-states/nothing-in-list.png\" style=\"width:auto; height:200px;\">\n                      <br>\n                  </div>\n                </div>\n                <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" style=\"height: 100%;padding: 0;margin: 0;display: -webkit-box;display: -moz-box;display: -ms-flexbox;display: -webkit-flex;display: flex;align-items: center;justify-content: center;\">\n                    <div fxLayout=\"row\">\n                        <h3>No News in the List</h3>\n                      </div>\n                </div>\n              </div>\n            </mat-card-content>\n\n            <mat-card-content class=\"table-responsive\" *ngIf=\"NewsList.list_news.length > 0 && selectedNews\">\n                <ngx-datatable\n                  class=\"material\"\n                  [rows]=\"selectedNews.news.newsbar\"\n                  [columnMode]=\"'flex'\"\n                  [headerHeight]=\"50\"\n                  [footerHeight]=\"0\"\n                  [rowHeight]=\"'auto'\">\n\n                  <ngx-datatable-column name=\"News Bar\" [flexGrow]=\"4\">\n                    <ng-template ngx-datatable-cell-template let-row=\"row\">\n\n                      <strong *ngIf=\"selectedNews.news.language.language_code == 'Dhv'\" class=\"dhv\">{{row.title}}</strong>\n                      <strong *ngIf=\"selectedNews.news.language.language_code != 'Dhv'\">{{row.title}}</strong>\n                      <br/>\n                      <span class=\"mat-text-muted\" *ngIf=\"selectedNews.news.language.language_code == 'Dhv'\" class=\"dhv\">{{row.detail}}</span>\n                      <span class=\"mat-text-muted\" *ngIf=\"selectedNews.news.language.language_code != 'Dhv'\">{{row.detail}}</span>\n\n                    </ng-template>\n                  </ngx-datatable-column>\n\n                  <ngx-datatable-column name=\"Action\" [flexGrow]=\"1\">\n                    <ng-template ngx-datatable-cell-template let-row=\"row\">\n\n                        <button mat-icon-button color=\"warn\" (click)=\"updateCg(row.id)\" *ngIf=\"viewingKey != row.id\">\n                            <mat-icon aria-label=\"Play CG\">play_circle_outline</mat-icon>\n                        </button>\n                        <button mat-icon-button color=\"warn\" (click)=\"updateCg(row.id)\" *ngIf=\"viewingKey == row.id\">\n                            <mat-icon aria-label=\"Play CG\">play_circle_filled</mat-icon>\n                        </button>\n\n                    </ng-template>\n                  </ngx-datatable-column>\n\n                </ngx-datatable>\n            </mat-card-content>\n\n            <mat-card-content class=\"bg-light\">\n              <div class=\"d-flex\">\n                  <button mat-icon-button color=\"primary\" (click)=\"previousNews()\" [disabled]=\"!NewsList.list_news\">\n                      <mat-icon aria-label=\"Example icon-button with a heart icon\">chevron_left</mat-icon>\n                  </button>\n\n                  <button mat-icon-button color=\"primary\" (click)=\"nextNews()\" [disabled]=\"!NewsList.list_news\">\n                      <mat-icon aria-label=\"Example icon-button with a heart icon\">chevron_right</mat-icon>\n                  </button>\n              </div>\n            </mat-card-content>\n\n\n\n          </mat-card>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ControlService } from '../services/control.service';\nimport { OnairService } from '../services/onair.service';\nimport { SlideDataDialogComponent } from '../slide-data-dialog/slide-data-dialog.component';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Language } from '../../news/models/news';\nimport {AngularFirestore} from '@angular/fire/firestore';\n\n@Component({\n  selector: 'app-onair',\n  templateUrl: './onair.component.html',\n  styleUrls: ['./onair.component.css']\n})\nexport class OnairComponent implements OnInit {\n\n  sidePanelOpened = true;\n  sidePanelOpened_noNews = true;\n\n  slides: Slide[];\n  selectedSlide: Slide;\n  settings_selected_slide: number;\n  destroySubject$: Subject<void> = new Subject();\n\n  @ViewChild('sidebar', {static: true}) sidenav: MatSidenav;\n\n  constructor(\n    private onAirService: OnairService,\n    public dialog: MatDialog,\n    public snackBar: MatSnackBar,\n    private angularFirestore: AngularFirestore\n  ) { }\n\n  ngOnInit() {\n    this.onAirService.getSlides().subscribe(onair => {\n      this.slides = onair;\n\n      this.slides.forEach(slide => {\n        this.angularFirestore\n          .collection(\"onair-slides-collection\")\n          .doc(slide.slide_id)\n          .set(slide)\n          .then(response => { console.log(response) }, error => error);\n      })\n\n      console.log(this.slides);\n    });\n  }\n\n\n\n  sideBarToggle() {\n    this.sidenav.toggle();\n  }\n\n  isOver(): boolean {\n    return window.matchMedia(`(max-width: 960px)`).matches;\n  }\n\n  onSelectSlide(slide:Slide){\n    this.selectedSlide = slide;\n    this.settings_selected_slide = slide.id;\n    console.log(slide)\n  }\n\n  addSlideData(slideId: number) {\n    let content = new slideData(null, new Language('Dhv'), this.settings_selected_slide, 0);\n\n    let dialogRef = this.dialog.open(SlideDataDialogComponent, { width: '40%', height: 'auto', maxHeight: '95%', data: content });\n\n    dialogRef.componentInstance.onAdd.subscribe((result: slideData) => {\n      console.log(result)\n      this.onAirService.addSlideData(result).subscribe(re => {\n        console.log(re)\n        this.slides = re;\n        this.slides.forEach(data => {\n          if(data.id === this.settings_selected_slide) {\n            this.selectedSlide = data;\n          }\n        })\n      })\n    },\n    err=>{\n      console.log(\"status code--->\"+err.status);\n    });\n  }\n\n  deleteContent(id: number) {\n    this.onAirService.deleteSlideData(id).subscribe(re => {\n\n      this.onAirService.getSlides().subscribe(onair => {\n        this.slides = onair;\n\n        this.slides.forEach(data => {\n          if(data.id === this.settings_selected_slide) {\n            this.selectedSlide = data;\n          }\n        })\n      });\n    },\n    err=>{\n      console.log(\"Err Deleting Slide Data, status code--->\"+err.status);\n    });\n  }\n\n\n}\n\n\n\n\nexport class Slide {\n  id: number;\n  slide_id: string;\n  slide_name: string;\n  onairslidecontent: slideData[];\n}\n\nexport class slideData{\n  data: string;\n  language: Language;\n  on_air_slides_id: number;\n  active: number;\n\n  constructor(data?: string, lang?: Language, s_id?: number, active?: number) {\n    this.data     = data;\n    this.language = lang;\n    this.on_air_slides_id = s_id;\n    this.active   = active;\n  }\n}\n","<!-- ============================================================== -->\n<!-- Simple four boxes Row -->\n<!-- ============================================================== -->\n<!-- <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-content>\n          <div class=\"d-flex no-block\">\n              <button mat-raised-button color=\"primary\"><mat-icon>refresh</mat-icon> Load CG</button>\n              <button mat-raised-button color=\"warn\" class=\"m-l-20 m-r-20\" (click)=\"stopCg()\"><mat-icon>stop</mat-icon> Stop Bar</button>\n\n              <mat-button-toggle-group #group=\"matButtonToggleGroup\" class=\"m-l-20\">\n                <mat-button-toggle value=\"left\">\n                  LIVE\n                </mat-button-toggle>\n                <mat-button-toggle value=\"center\">\n                  REPEAT\n                </mat-button-toggle>\n                <mat-button-toggle value=\"right\">\n                  RECORDED\n                </mat-button-toggle>\n                <mat-button-toggle value=\"justify\">\n                  NOTHING\n                </mat-button-toggle>\n              </mat-button-toggle-group>\n          </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div> -->\n\n\n\n\n\n\n\n\n\n\n<div fxLayout=\"row\" fxLayoutAlign=\"center start\">\n  <div fxFlex.gt-md=\"100\" fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n    <mat-card class=\"mat-card-top\">\n      <mat-sidenav-container [ngClass]=\"{ 'side-panel-opened': sidePanelOpened, 'side-panel-closed': !sidePanelOpened }\">\n\n        <mat-sidenav #sidebar [mode]=\"isOver() ? 'over' : 'side'\" [opened]=\"!isOver()\" (open)=\"sidePanelOpened = true || sidePanelOpened_noNews == true\"\n        (close)=\"sidePanelOpened = false || sidePanelOpened_noNews == false\">\n          <mat-toolbar color=\"primary\" class=\"no-shadow\">\n            <div fxLayout=\"row\" fxFlex=\"100\" >\n              <span class=\"m-t-0 font-14\">\n                <!-- <button mat-icon-button class=\"mr-1\"><mat-icon>inbox</mat-icon></button> -->\n\n                <mat-form-field>\n                  <!--<input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"show_list_date\" (ngModelChange)=\"loadDateList($event)\">-->\n                  <input matInput [matDatepicker]=\"picker\">\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                  <mat-datepicker #picker></mat-datepicker>\n                </mat-form-field>\n\n              </span>\n            </div>\n          </mat-toolbar>\n\n          <mat-nav-list>\n            <mat-list-item (click)=\"onSelectSlide(slide)\" *ngFor=\"let slide of slides\" [style.background-color]=\"slide==selectedSlide ? 'rgba(127, 255, 212, 0.6)' : 'rgba(255, 255, 255, 0)'\">\n\n              <mat-icon *ngIf=\"slide==selectedSlide\" color=\"primary\">subdirectory_arrow_right</mat-icon>\n\n              <h3 matLine> {{slide.slide_name}} </h3>\n              <p matLine class=\"text-muted\"> {{slide.slide_id}} </p>\n\n              <mat-icon *ngIf=\"slide.id == settings_selected_slide\" color=\"warn\">offline_pin</mat-icon>\n\n              <button [matMenuTriggerFor]=\"them\" mat-icon-button class=\"ml-1\" *ngIf=\"slide.id != settings_selected_slide\">\n                <mat-icon>more_vert</mat-icon>\n              </button>\n              <mat-menu #them=\"matMenu\" x-position=\"before\">\n                <button mat-menu-item color=\"primary\" (click)=\"updateSelectedSlide(slide.id)\">Set Selected</button>\n              </mat-menu>\n\n\n            </mat-list-item>\n          </mat-nav-list>\n        </mat-sidenav>\n\n        <mat-toolbar class=\"bg-success no-shadow chat-right-panel\" color=\"warn\">\n          <div fxLayout=\"row\" fxFlex=\"100\" fxLayoutAlign=\"center center\">\n            <button (click)=\"sideBarToggle()\" class=\"mr-1\" mat-icon-button>\n              <mat-icon>short_text</mat-icon>\n            </button>\n            <!-- <span class=\"top-avatar m-r-10\">\n              <img src=\"{{selectedMessage.photo}}\" class=\"img-circle\">\n            </span> -->\n            <div fxFlex>\n              <!--<div class=\"font-14\" *ngIf=\"selectedList\">{{ selectedList.created_at | date }} {{ selectedList.name }}</div>-->\n              <div class=\"font-14\">&nbsp;</div>\n            </div>\n            <div fxFlex>\n              <div class=\"font-14\">News</div>\n            </div>\n            <!-- <button [matMenuTriggerFor]=\"them\" mat-icon-button class=\"ml-1\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #them=\"matMenu\" x-position=\"before\">\n              <button mat-menu-item color=\"primary\" [disabled]=\"!selectedNews\">Approve</button>\n              <button mat-menu-item color=\"warn\" [disabled]=\"!selectedNews\">Reject</button>\n              <button mat-menu-item color=\"link\" [disabled]=\"!selectedNews\">Edit</button>\n            </mat-menu> -->\n          </div>\n        </mat-toolbar>\n\n        <mat-card-content class=\"chat-middle-box\" style=\"min-height:700px;\">\n          <!-- selected list -->\n          <div class=\"table-rasponsive\" *ngIf=\"selectedSlide\">\n\n            <div class=\"table\">\n              <div class=\"table-header\">\n                <div class=\"header__item column-value\">Data</div>\n                <div class=\"header__item column-actions\">Actions</div>\n              </div>\n              <div class=\"table-content\">\n                <div class=\"table-row status_{{slide_content.id}}\" *ngFor=\"let slide_content of selectedSlide.onairslidecontent\" id=\"{{ slide_content.id }}\">\n                  <div class=\"table-data column-value\">{{ slide_content.value }}</div>\n\n                  <div class=\"table-data column-actions\">\n                      <button mat-icon-button color=\"basic\" matTooltip=\"View News\" matTooltipPosition=\"below\" *ngIf=\"active === 1\">\n                          <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                      </button>\n\n                      <button mat-icon-button color=\"warn\" matTooltip=\"Remove News\" matTooltipPosition=\"below\" (click)=\"deleteContent(slide_content.id)\">\n                        <mat-icon aria-label=\"Edit\">delete</mat-icon>\n                      </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </mat-card-content>\n\n        <mat-card-actions class=\"chat-footer\">\n            <div align=\"end\">\n              <button mat-raised-button color=\"primary\" [disabled]=\"!selectedSlide\" (click)=\"addSlideData(selectedSlide.id)\">Add New</button>\n              <!-- <button mat-button color=\"basic\" [disabled]=\"!selectedNews\" (click)=\"onEdit()\">Edit</button>\n              <button mat-raised-button color=\"warn\" [disabled]=\"!selectedNews\" (click)=\"rejectNews()\">Reject</button>\n              <button mat-raised-button color=\"primary\" [disabled]=\"!selectedNews\" (click)=\"approveNews(selectedNews)\">Approve</button> -->\n            </div>\n          <!-- <div fxLayout=\"row\" layout-align=\"start center\">\n            <mat-form-field class=\"mr-1 ml-1\" fxFlex>\n              <input matInput placeholder=\"Send message\" >\n            </mat-form-field>\n            <button mat-fab color=\"warn\" >\n              <mat-icon>send</mat-icon>\n            </button>\n          </div> -->\n        </mat-card-actions>\n      </mat-sidenav-container>\n    </mat-card>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\n\nimport { environment } from './../../../environments/environment';\nimport { News, ListOrder } from '../../news/models/news';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ControlService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  // get selected list\n  getNewsCgNews () {\n    return this.http.get<any>(this.apiUrl + 'control/news/cg');\n  }\n\n  // get selected list\n  getNewsCgSettings () {\n    console.log('Getting cg settings')\n    //return this.http.get<any>(this.apiUrl + 'control/cg/settings/all');\n    return this.http.get<any>(this.apiUrl + 'control/news/cg');\n  }\n\n  //update news cg text\n  updateNewsCgText(news_bar_id: number) {\n    return this.http.put<any>(this.apiUrl + 'control/news/cg/update/', { \"news_bar_id\": news_bar_id, \"ip\": '' });\n  }\n\n  stopNewsCg() {\n    return this.http.post<any>(this.apiUrl + 'control/cg/news/stop', {});\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {environment} from '../../../environments/environment';\nimport {slideData} from '../onair/onair.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OnairService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  // get selected list\n  getSlides () {\n    return this.http.get<any>(this.apiUrl + 'control/onair/slides');\n  }\n\n  //add slide data\n  addSlideData(data: slideData) {\n    return this.http.post<any>(this.apiUrl + 'control/onair/slide/data', data);\n  }\n\n  //add slide data\n  deleteSlideData(id: number) {\n    return this.http.delete<any>(this.apiUrl + 'control/onair/slide/data/'+id);\n  }\n}\n","import { Component, OnInit, Inject, Input, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { slideData } from '../onair/onair.component';\nimport { Language } from '../../news/models/news';\n\n@Component({\n  selector: 'app-slide-data-dialog',\n  templateUrl: './slide-data-dialog.component.html',\n  styleUrls: ['./slide-data-dialog.component.css']\n})\nexport class SlideDataDialogComponent implements OnInit {\n\n  @Input() public dhivehiEnabled = true;\n  slide_data: slideData = new slideData(null, new Language('Dhv'), null);\n  onAdd = new EventEmitter();\n\n  constructor(\n    public dialogRef: MatDialogRef<SlideDataDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: slideData\n    ) { }\n\n  ngOnInit() {\n    this.slide_data = this.data;\n  }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n  changeLanguage() {\n    if (this.dhivehiEnabled) {\n      this.slide_data.language.language_code = 'Dhv';\n    } else {\n      this.slide_data.language.language_code = 'Eng';\n    }\n  }\n\n  addData() {\n    // this.store.dispatch(new adminActions.CreateUser(this.user));\n    this.onAdd.emit(this.slide_data);\n    this.dialogRef.close(true);\n  }\n\n}\n","<h3 mat-dialog-title>Add Data To Slide</h3>\n<mat-slide-toggle labelPosition=\"after\" color=\"secondary\" [(ngModel)]=\"dhivehiEnabled\" (ngModelChange)=\"changeLanguage()\">{{slide_data.language.language_code}}</mat-slide-toggle>\n<form class=\"basic-form\" #userForm=\"ngForm\">\n  <div mat-dialog-content>\n\n      <div style=\"margin-top:20px;\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Slide Data</mat-label>\n              <input matInput mat-autosize required name=\"templateName\" [(ngModel)]=\"slide_data.data\" [appDnrmsThaana]=\"dhivehiEnabled\">\n            </mat-form-field>\n            {{ slide_data | json }}\n          </div>\n      </div>\n<!-- {{template|json}} -->\n  </div>\n  <!-- actions column -->\n  <div mat-dialog-actions align=\"end\">\n    <button mat-button color=\"basic\" (click)=\"closeDialog(true)\">Cancel</button>\n    <button mat-raised-button color=\"primary\" (click)=\"addData()\" [disabled]=\"!userForm.form.valid\">Add</button>\n    <!-- <button mat-button color=\"basic\" *ngIf=\"data.newsstatus.status != 'published' && data.newsstatus.status != 'deleted'\" routerLink=\"/news/{{data.id}}\" (click)=\"closeDialog(true)\">Edit</button> -->\n  </div>\n\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sms',\n  templateUrl: './sms.component.html',\n  styleUrls: ['./sms.component.css']\n})\nexport class SmsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  sms works!\n</p>\n","import { Action } from '@ngrx/store';\nimport { News, ListOrder, NewsList } from '../../news/models/news';\n\nexport const LOGOUT_CONTROL = '[Control] LOGOUT_CONTROL';\n\nexport const GET_NEWS_CG_NEWS = '[Control] GET_NEWS_CG_NEWS';\nexport const GET_NEWS_CG_NEWS_SUCCESS = '[Control] GET_NEWS_CG_NEWS_SUCCESS';\nexport const GET_NEWS_CG_NEWS_ERROR = '[Control] GET_NEWS_CG_NEWS_ERROR';\n\nexport const UPDATE_NEWS_CG_NEWS = '[Control] UPDATE_NEWS_CG_NEWS';\nexport const UPDATE_NEWS_CG_NEWS_SUCCESS = '[Control] UPDATE_NEWS_CG_NEWS_SUCCESS';\nexport const UPDATE_NEWS_CG_NEWS_ERROR = '[Control] UPDATE_NEWS_CG_NEWS_ERROR';\n\nexport const GET_CG_SETTINGS = '[Control] GET_CG_SETTINGS';\nexport const GET_CG_SETTINGS_SUCCESS = '[Control] GET_CG_SETTINGS_SUCCESS';\nexport const GET_CG_SETTINGS_ERROR = '[Control] GET_CG_SETTINGS_ERROR';\n\nexport const STOP_NEWS_CG = '[Control] STOP_NEWS_CG';\nexport const STOP_NEWS_CG_SUCCESS = '[Control] STOP_NEWS_CG_SUCCESS';\nexport const STOP_NEWS_CG_ERROR = '[Control] STOP_NEWS_CG_ERROR';\n\nexport class LogoutEditorState implements Action {\n  readonly type = LOGOUT_CONTROL;\n}\n\n\n/**\n * --------------------------------------------------> Get cg news\n */\nexport class GetNewsCgNews implements Action {\n  readonly type = GET_NEWS_CG_NEWS;\n}\n\nexport class GetNewsCgNewsSuccess implements Action {\n  readonly type = GET_NEWS_CG_NEWS_SUCCESS;\n  constructor(public payload: NewsList) {}\n}\n\nexport class GetNewsCgNewsError implements Action {\n  readonly type = GET_NEWS_CG_NEWS_ERROR;\n}\n\n\n/**\n * --------------------------------------------------> Get cg Settings\n */\nexport class GetCgSettings implements Action {\n  readonly type = GET_CG_SETTINGS;\n}\n\nexport class GetCgSettingsSuccess implements Action {\n  readonly type = GET_CG_SETTINGS_SUCCESS;\n  constructor(public payload: NewsList) {}\n}\n\nexport class GetCgSettingsError implements Action {\n  readonly type = GET_CG_SETTINGS_ERROR;\n}\n\n\n/**\n * --------------------------------------------------> Update cg news\n */\nexport class UpdateNewsCgNews implements Action {\n  readonly type = UPDATE_NEWS_CG_NEWS;\n  constructor(public payload: { news_bar_id: number }) {}\n}\n\nexport class UpdateNewsCgNewsSuccess implements Action {\n  readonly type = UPDATE_NEWS_CG_NEWS_SUCCESS;\n}\n\nexport class UpdateNewsCgNewsError implements Action {\n  readonly type = UPDATE_NEWS_CG_NEWS_ERROR;\n}\n\n\n/**\n * --------------------------------------------------> stop cg\n */\nexport class StopNewsCg implements Action {\n  readonly type = STOP_NEWS_CG;\n  //constructor(public payload: { news_bar_id: number }) {}\n}\n\nexport class StopNewsCgSuccess implements Action {\n  readonly type = STOP_NEWS_CG_SUCCESS;\n}\n\nexport class StopNewsCgError implements Action {\n  readonly type = STOP_NEWS_CG_ERROR;\n}\n\n\n\nexport type All = any;\n","\nimport {catchError, mergeMap,  map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Observable ,  of } from 'rxjs';\nimport { Action } from '@ngrx/store';\n\n\n\n\nimport {Actions, Effect, ofType} from '@ngrx/effects';\n\nimport * as ControlActions from './control.actions';\nimport { ControlService } from '../services/control.service';\n\n@Injectable()\nexport class ControlEffects {\n\n  constructor(\n    private actions$: Actions,\n    private controlService: ControlService,\n  ) { }\n\n  @Effect()\n  GetNewsCgNews$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<ControlActions.GetNewsCgNews>(ControlActions.GET_NEWS_CG_NEWS),\n      mergeMap(action =>\n        this.controlService.getNewsCgNews().pipe(\n        map((data) => {\n          console.log(data);\n          return new ControlActions.GetNewsCgNewsSuccess(data);\n        }),\n        catchError(() => of(new ControlActions.GetNewsCgNewsError())),)\n      )\n    );\n\n\n\n  /*GetCgSettings$: Observable<Action> = this.actions$.\n    ofType<ControlActions.GetNewsCgNews>(ControlActions.GET_NEWS_CG_NEWS)\n    .mergeMap(action =>\n      this.controlService.getNewsCgSettings()\n      .map((data) => {\n        console.log(data);\n        return new ControlActions.GetCgSettingsSuccess(data);\n      })\n      .catch(() => of(new ControlActions.GetCgSettingsError()))\n    );*/\n\n\n  @Effect()\n  UpdateNewsCgNews$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<ControlActions.UpdateNewsCgNews>(ControlActions.UPDATE_NEWS_CG_NEWS),\n      mergeMap(action =>\n        this.controlService.updateNewsCgText(action.payload.news_bar_id).pipe(\n        map((data) => {\n          console.log(data);\n          return new ControlActions.UpdateNewsCgNewsSuccess();\n        }),\n        catchError(() => of(new ControlActions.UpdateNewsCgNewsError())),)\n      )\n    );\n\n\n    @Effect()\n    StopNewsCg$: Observable<Action> = this.actions$.\n      pipe(\n        ofType<ControlActions.UpdateNewsCgNews>(ControlActions.STOP_NEWS_CG),\n        mergeMap(action =>\n          this.controlService.stopNewsCg().pipe(\n          map((data) => {\n            console.log(data);\n            return new ControlActions.StopNewsCgSuccess();\n          }),\n          catchError(() => of(new ControlActions.StopNewsCgError())),)\n        )\n      );\n}\n","\nimport { Action, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as ControlActions from './control.actions';\nimport { ControlState } from '../../store/app.state';\n\n\n\n\n\nexport const initialState: ControlState = {\n    // news: [],\n    // isLoaded: false,\n    // // pageState: {currentPage: null, perPage: null, lastPages: null, totalResults: null},\n    // lists: [],\n    isLoaded: true,\n    cgSettings: null,\n    newsCgState: null\n  };\n\nexport type Actions = ControlActions.All;\nexport interface ActionWithPayload<T> extends Action {\n  payload: T;\n}\n\nexport function reducer(state = initialState, action: ActionWithPayload<any>): ControlState {\n  console.log(state, action);\n\n  switch (action.type) {\n\n    case ControlActions.GET_NEWS_CG_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n\n    case ControlActions.GET_NEWS_CG_NEWS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        newsCgState: action.payload\n      };\n    }\n\n    case ControlActions.GET_CG_SETTINGS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n\n    case ControlActions.GET_CG_SETTINGS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        cgSettings: action.payload\n      };\n    }\n\n    case ControlActions.LOGOUT_CONTROL: {\n      return initialState;\n    }\n\n    default: {\n      return state;\n    }\n  }\n\n}\n\nexport const getReviewNewsState = createFeatureSelector<ControlState>('ControlState');\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-ticker',\n  templateUrl: './ticker.component.html',\n  styleUrls: ['./ticker.component.css']\n})\nexport class TickerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  ticker works!\n</p>\n"],"sourceRoot":"webpack:///"}