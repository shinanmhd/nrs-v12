{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/authentication/store/user.actions.ts","./src/app/authentication/store/user.effects.ts","./src/app/authentication/store/user.reducer.ts","./src/app/demo-material-module.ts","./src/app/editor/store/news-editor.actions.ts","./src/app/editor/store/news-editor.reducer.ts","./src/app/layouts/blank/blank.component.ts","./src/app/layouts/blank/blank.component.html","./src/app/layouts/full/full.component.ts","./src/app/layouts/full/full.component.html","./src/app/layouts/full/header/header.component.ts","./src/app/layouts/full/header/header.component.html","./src/app/layouts/full/sidebar/sidebar.component.ts","./src/app/layouts/full/sidebar/sidebar.component.html","./src/app/news/models/news.ts","./src/app/news/store/news.actions.ts","./src/app/news/store/news.reducer.ts","./src/app/shared/accordion/accordion.directive.ts","./src/app/shared/accordion/accordionanchor.directive.ts","./src/app/shared/accordion/accordionlink.directive.ts","./src/app/shared/accordion/index.ts","./src/app/shared/component/add-ticker-news-dialog/add-ticker-news-dialog.component.ts","./src/app/shared/component/add-ticker-news-dialog/add-ticker-news-dialog.component.html","./src/app/shared/component/confirm-dialog/confirm-dialog.component.ts","./src/app/shared/component/confirm-dialog/confirm-dialog.component.html","./src/app/shared/component/view-news-dialog/view-news-dialog.component.ts","./src/app/shared/component/view-news-dialog/view-news-dialog.component.html","./src/app/shared/directives/thaana.directive.ts","./src/app/shared/menu-items/menu-items.ts","./src/app/shared/models/user.ts","./src/app/shared/services/auth.guard.ts","./src/app/shared/services/auth.service.ts","./src/app/shared/services/ds.service.ts","./src/app/shared/services/http-interceptor.service.ts","./src/app/shared/services/route-role.service.ts","./src/app/shared/services/session.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/spinner.component.ts","./src/app/store/app.reducer.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport {Component, OnDestroy, OnInit} from '@angular/core';\n\nimport { Subscription } from 'Rxjs';\n\nimport { Store } from '@ngrx/store';\nimport * as userReducer from './authentication/store/user.reducer';\nimport * as userActions from './authentication/store/user.actions';\nimport { UserState } from './store/app.state';\nimport { AuthService } from './shared/services/auth.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit, OnDestroy {\n  loggedInSub: Subscription;\n\n  constructor (\n    private auth: AuthService,\n    private store: Store<UserState>,\n    private router: Router,\n    private _location: Location\n  ) {}\n\n  ngOnInit() {\n    console.log('app comp init!');\n    this.loggedInSub = this.auth.loggedIn$.subscribe(\n      loggedIn => {\n        this.store.dispatch(new userActions.GetUserSettings());\n        // redirect if logged in\n        // this._location.back();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.loggedInSub.unsubscribe();\n  }\n}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<router-outlet><app-spinner></app-spinner></router-outlet>\n\n","import * as $ from 'jquery';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { AppRoutes } from './app.routing';\nimport { AppComponent } from './app.component';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FullComponent } from './layouts/full/full.component';\nimport { AppBlankComponent } from './layouts/blank/blank.component';\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DemoMaterialModule} from './demo-material-module';\n\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\n\nimport { SharedModule } from './shared/shared.module';\nimport { SpinnerComponent } from './shared/spinner.component';\nimport { HttpInterceptorService} from './shared/services/http-interceptor.service';\nimport { ConfirmDialogComponent } from './shared/component/confirm-dialog/confirm-dialog.component';\nimport { ViewNewsDialogComponent } from './shared/component/view-news-dialog/view-news-dialog.component';\nimport { AddTickerNewsDialogComponent } from './shared/component/add-ticker-news-dialog/add-ticker-news-dialog.component';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { reducers, metaReducers } from './store/app.reducer';\nimport { UserEffects } from './authentication/store/user.effects';\n\nimport { ContextMenuModule } from 'ngx-contextmenu';\n//import { SmsComponent } from './sms/sms.component';\n\nimport { environment } from \"../environments/environment\";\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFirestoreModule } from \"@angular/fire/firestore\";\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n  wheelSpeed: 2,\n  wheelPropagation: true,\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FullComponent,\n    AppHeaderComponent,\n    SpinnerComponent,\n    AppBlankComponent,\n    AppSidebarComponent,\n    ConfirmDialogComponent,\n    ViewNewsDialogComponent,\n    AddTickerNewsDialogComponent,\n    //SmsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    DemoMaterialModule,\n    FormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    PerfectScrollbarModule,\n    SharedModule,\n    RouterModule.forRoot(AppRoutes, { relativeLinkResolution: 'legacy' }),\n    StoreModule.forRoot(reducers, {metaReducers}),\n    EffectsModule.forRoot([UserEffects]),\n    StoreDevtoolsModule.instrument({maxAge: 50}),\n    ContextMenuModule.forRoot(),\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpInterceptorService,\n      multi: true,\n    },\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n    }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ConfirmDialogComponent, ViewNewsDialogComponent, AddTickerNewsDialogComponent]\n})\nexport class AppModule { }\n\n","import { Routes, CanActivate } from '@angular/router';\n\nimport { FullComponent } from './layouts/full/full.component';\nimport { AppBlankComponent } from './layouts/blank/blank.component';\nimport { AuthGuard } from './shared/services/auth.guard';\n\nexport const AppRoutes: Routes = [{\n  path: '',\n  component: FullComponent,\n  children: [\n    {\n      path: 'admin',\n      loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule),\n      // canActivate: [AuthGuard],\n      // data: { isPublic: false, role: 'editor' }\n  },{\n    path: '',\n    redirectTo: '/user',\n    pathMatch: 'full'\n  },{\n    path: 'user',\n    loadChildren: () => import('./dashboards/dashboards.module').then(m => m.DashboardsModule),\n    canActivate: [AuthGuard],\n    data: { isPublic: true, role: 'user' }\n  },\n  {\n    path: 'editor',\n    loadChildren: () => import('./editor/editor.module').then(m => m.EditorModule),\n    // canActivate: [AuthGuard],\n    // data: { isPublic: false, role: 'editor' }\n  },\n  {\n    path: 'news',\n    loadChildren: () => import('./news/news.module').then(m => m.NewsModule),\n    canActivate: [AuthGuard],\n    data: { isPublic: false, role: 'journalist' }\n  },\n  {\n    path: 'control',\n    loadChildren: () => import('./control/control.module').then(m => m.ControlModule),\n    canActivate: [AuthGuard],\n    data: { isPublic: false, role: 'journalist' }\n  },\n  {\n    path: 'material',\n    loadChildren: () => import('./material-component/material.module').then(m => m.MaterialComponentsModule)\n  },\n  {\n    path: 'apps',\n    loadChildren: () => import('./apps/apps.module').then(m => m.AppsModule)\n  },\n  {\n    path: 'forms',\n    loadChildren: () => import('./forms/forms.module').then(m => m.FormModule)\n  },\n  {\n    path: 'tables',\n    loadChildren: () => import('./tables/tables.module').then(m => m.TablesModule)\n  },\n  {\n    path: 'datatables',\n    loadChildren: () => import('./datatables/datatables.module').then(m => m.DataTablesModule)\n  },\n  {\n    path: 'pages',\n    loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule)\n  },\n  {\n    path: 'widgets',\n    loadChildren: () => import('./widgets/widgets.module').then(m => m.WidgetsModule)\n  },\n  {\n    path: 'charts',\n    loadChildren: () => import('./charts/chartslib.module').then(m => m.ChartslibModule)\n  }]\n},\n  {\n  path: '',\n  component: AppBlankComponent,\n  children: [{\n    path: 'authentication',\n    loadChildren: () => import('./authentication/authentication.module').then(m => m.AuthenticationModule)\n  }],\n  data: { isPublic: true }\n},\n  {\n  path: '**',\n  redirectTo: 'authentication/404'\n}];\n","import { Action } from '@ngrx/store';\nimport { User } from './../../shared/models/user';\n\nexport const USER_LOGIN = '[User] USER_LOGIN';\nexport const USER_LOGIN_SUCCESS = '[User] USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_ERROR = '[User] USER_LOGIN_ERROR';\n\nexport const USER_LOGOUT = '[User] USER_LOGOUT';\nexport const USER_LOGOUT_SUCCESS = '[User] USER_LOGOUT_SUCCESS';\nexport const USER_LOGOUT_ERROR = '[User] USER_LOGOUT_ERROR';\n\nexport const USER_GET_SETTINGS = '[User] USER_GET_SETTINGS';\nexport const USER_GET_SETTINGS_SUCCESS = '[User] USER_GET_SETTINGS_SUCCESS';\nexport const USER_GET_SETTINGS_ERROR = '[User] USER_GET_SETTINGS_ERROR';\n\nexport const SERVER_USER_GET_SETTINGS = '[User] SERVER_USER_GET_SETTINGS';\nexport const SERVER_USER_GET_SETTINGS_SUCCESS = '[User] SERVER_USER_GET_SETTINGS_SUCCESS';\nexport const SERVER_USER_GET_SETTINGS_ERROR = '[User] SERVER_USER_GET_SETTINGS_ERROR';\n\nexport const USER_GET_ROLES = '[User] USER_GET_ROLES';\n\nexport const USER_401 = '[User] USER_401';\n\n\nexport class UserLogin implements Action {\n  readonly type = USER_LOGIN;\n  constructor(public payload: any) {}\n}\n\nexport class UserLoginSuccess implements Action {\n  readonly type = USER_LOGIN_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class UserLoginError implements Action {\n  readonly type = USER_LOGIN_ERROR;\n}\n\nexport class UserLogout implements Action {\n  readonly type = USER_LOGOUT;\n}\n\nexport class UserLogoutSuccess implements Action {\n  readonly type = USER_LOGOUT_SUCCESS;\n  //constructor(public payload: User) {}\n}\n\nexport class UserLogoutError implements Action {\n  readonly type = USER_LOGOUT_ERROR;\n}\n\nexport class User401 implements Action {\n  readonly type = USER_401;\n}\n\nexport class GetUserSettings implements Action {\n  readonly type = USER_GET_SETTINGS;\n}\n\nexport class GetUserSettingsSuccess implements Action {\n  readonly type = USER_GET_SETTINGS_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class GetUserSettingsError implements Action {\n  readonly type = USER_GET_SETTINGS_ERROR;\n}\n\nexport class GetUserRoles implements Action {\n  readonly type = USER_GET_ROLES;\n}\n\n\n\n/**\n * Fetch user settings from server\n */\nexport class ServerGetUserSettings implements Action {\n  readonly type = SERVER_USER_GET_SETTINGS;\n}\n\nexport class ServerGetUserSettingsSuccess implements Action {\n  readonly type = SERVER_USER_GET_SETTINGS_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class ServerGetUserSettingsError implements Action {\n  readonly type = SERVER_USER_GET_SETTINGS_ERROR;\n}\n\nexport type All = UserLogin | UserLoginSuccess | UserLoginError | GetUserSettings |\n                  GetUserSettingsSuccess | GetUserSettingsError | GetUserRoles;\n","\nimport {of as observableOf,  Observable } from 'rxjs';\n\nimport {catchError, switchMap, map} from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport {Effect, Actions, ofType} from '@ngrx/effects';\n\n\n\n\n\nimport { AuthService } from '../../shared/services/auth.service';\nimport * as UserActions from './user.actions';\nimport * as NewsActions from '../../news/store/news.actions';\nimport * as EditorActions from '../../editor/store/news-editor.actions';\nimport { SessionService } from '../../shared/services/session.service';\nimport { User } from '../../shared/models/user';\n\n@Injectable()\nexport class UserEffects {\n\n  constructor(\n    private actions: Actions,\n    private authService: AuthService,\n    private sessionService: SessionService,\n    private store: Store<any>,\n    private router: Router\n  ) {}\n\n  @Effect()\n  LogIn: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.USER_LOGIN),\n      map((action: UserActions.UserLogin) => action.payload),\n      switchMap(payload => {\n        return this.authService.signIn(payload.email, payload.password).pipe(\n          map((user: User) => {\n            // console.log(user);\n            this.authService.doSignIn(user);\n            return new UserActions.UserLoginSuccess(user);\n          }),\n          catchError((error) => {\n            console.log(error);\n            return observableOf(new UserActions.UserLoginError());\n          }),);\n      }),\n    );\n\n  @Effect({ dispatch: false })\n  LogInSuccess: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.USER_LOGIN_SUCCESS),\n      map((action: UserActions.UserLoginSuccess) => action.payload),\n      map((user: User) => {\n        // console.log(user);\n        if (this.sessionService.saveSession(user)) {\n          // this.router.navigate(['/dashboard/default']);\n          // this._location.back();\n        }\n        // localStorage.setItem('token', user.user.token.token);\n\n      }),\n    );\n\n  @Effect()\n  GetUserSettings: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.USER_GET_SETTINGS),\n      map((action: UserActions.GetUserSettings) => action),\n      switchMap(payload => {\n        return this.sessionService.getUserSetting()\n          .pipe(\n            map((user: User) => {\n              return new UserActions.GetUserSettingsSuccess(user);\n            }),\n            catchError((error) => {\n              console.log(error);\n              return observableOf(new UserActions.GetUserSettingsError());\n            })\n          )\n      }),\n    );\n\n  @Effect()\n  ServerGetUserSettings: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.SERVER_USER_GET_SETTINGS),\n      map((action: UserActions.ServerGetUserSettings) => action),\n      switchMap(payload => {\n        return this.sessionService.updateUserSettings().pipe(\n          map((user: User) => {\n            this.sessionService.saveSession(user);\n            return new UserActions.ServerGetUserSettingsSuccess(user);\n          }),\n          catchError((error) => {\n            console.log(error);\n            return observableOf(new UserActions.ServerGetUserSettingsError());\n          }),);\n      }),\n    );\n\n  @Effect()\n  UserLogout: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.USER_LOGOUT),\n      map((action: UserActions.UserLogout) => action),\n      switchMap(payload => {\n        this.store.dispatch(new NewsActions.LogoutNewsState());\n        this.store.dispatch(new EditorActions.LogoutEditorState());\n        this.authService.doSignOut();\n\n        this.router.navigate(['/authentication/login']);\n        // return Observable.of(new UserActions.UserLogoutSuccess(this.sessionService.getUserLogoutSetting()));\n        return observableOf(new UserActions.UserLogoutSuccess());\n      }),\n    );\n\n  UserLogoutSuccess: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.USER_LOGOUT_SUCCESS),\n      map((action: UserActions.UserLogoutSuccess) => {\n        //location.reload();\n        this.router.navigate(['/authentication/login']);\n      })\n    );\n\n  @Effect()\n  User401: Observable<any> = this.actions.\n    pipe(\n        ofType(UserActions.USER_401),\n        switchMap(payload => {\n          console.warn('401 user found!!');\n          return observableOf(new UserActions.UserLogout());\n        })\n    );\n\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { Action } from '@ngrx/store';\n\nimport * as UserActions from './user.actions';\nimport { UserState } from '../../store/app.state';\nimport { User, Profile } from '../../shared/models/user';\nimport { NewsState } from './../../store/app.state';\n\nconst myuser: UserState = { user: { email: null, name: null, token: {token: null}, roles: null, roles_a: null, profile: new Profile() } };\nexport const initialState: UserState = myuser;\n\nexport type Actions = UserActions.All;\nexport interface ActionWithPayload<T> extends Action {\n  payload: T;\n}\n\nexport function reducer(state = initialState, action: ActionWithPayload<any>): UserState {\n  switch (action.type) {\n    case UserActions.USER_LOGIN: {\n      return {\n        ...state\n      };\n    }\n\n    case UserActions.USER_LOGIN_SUCCESS: {\n      return {\n        ...state,\n        user: action.payload,\n      };\n    }\n\n    case UserActions.USER_GET_SETTINGS: {\n      return {\n        ...state\n      };\n    }\n\n    case UserActions.USER_GET_SETTINGS_SUCCESS: {\n      return {\n        ...state,\n        user: action.payload,\n      };\n    }\n\n    case UserActions.USER_LOGOUT: {\n      // return {\n      //   ...state\n      // };\n      return initialState;\n    }\n\n    case UserActions.USER_LOGOUT_SUCCESS: {\n      // return {\n      //   // ...state,\n      //   // user: action.payload,\n      //   user: { email: null, name: null, token: {token: null}, roles: null, roles_a: null }\n      // };\n      return initialState;\n    }\n\n\n\n\n    case UserActions.SERVER_USER_GET_SETTINGS: {\n      return {\n        ...state\n      };\n    }\n\n    case UserActions.SERVER_USER_GET_SETTINGS_SUCCESS: {\n      return {\n        ...state,\n        user: action.payload,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const getUserState = createFeatureSelector<UserState>('userState');\n\nexport const getUser = createSelector(\n  getUserState,\n  (state: UserState) => state.user\n);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\n\n/**\n * NgModule that includes all Material modules that are required to serve the demo-app.\n */\n@NgModule({\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatTableModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatNativeDateModule,\n    CdkTableModule,\n    A11yModule,\n    BidiModule,\n    CdkAccordionModule,\n    ObserversModule,\n    OverlayModule,\n    PlatformModule,\n    PortalModule,\n  ]\n})\nexport class DemoMaterialModule {}\n","import { RejectNotes } from './../notes-dialog/notes-dialog.component';\nimport { Action } from '@ngrx/store';\nimport { News, NewsList, ListOrder } from './../../news/models/news';\n\nexport const GET_REVIEW_NEWS = '[NewsEditor] GET_REVIEW_NEWS';\nexport const GET_REVIEW_NEWS_SUCCESS = '[NewsEditor] GET_REVIEW_NEWS_SUCCESS';\nexport const GET_REVIEW_NEWS_ERROR = '[NewsEditor] GET_REVIEW_NEWS_ERROR';\n\nexport const APPROVE_NEWS = '[NewsEditor] APPROVE_NEWS';\nexport const APPROVE_NEWS_SUCCESS = '[NewsEditor] APPROVE_NEWS_SUCCESS';\nexport const APPROVE_NEWS_ERROR = '[NewsEditor] APPROVE_NEWS_ERROR';\n\nexport const REJECT_NEWS = '[NewsEditor] REJECT_NEWS';\nexport const REJECT_NEWS_SUCCESS = '[NewsEditor] REJECT_NEWS_SUCCESS';\nexport const REJECT_NEWS_ERROR = '[NewsEditor] REJECT_NEWS_ERROR';\n\n\n/**\n * ------------------------------------------------------------------------------> LIST ACTIONS\n */\nexport const GET_LISTS = '[NewsEditor] GET_LISTS';\nexport const GET_LISTS_SUCCESS = '[NewsEditor] GET_LISTS_SUCCESS';\nexport const GET_LISTS_ERROR = '[NewsEditor] GET_LISTS_ERROR';\n\nexport const GET_LISTS_BY_DATE = '[NewsEditor] GET_LISTS_BY_DATE';\nexport const GET_LISTS_BY_DATE_SUCCESS = '[NewsEditor] GET_LISTS_BY_DATE_SUCCESS';\nexport const GET_LISTS_BY_DATE_ERROR = '[NewsEditor] GET_LISTS_BY_DATE_ERROR';\n\nexport const ADD_TO_LIST = '[NewsEditor] ADD_TO_LISTS';\nexport const ADD_TO_LIST_SUCCESS = '[NewsEditor] ADD_TO_LISTS_SUCCESS';\nexport const ADD_TO_LIST_ERROR = '[NewsEditor] ADD_TO_LISTS_ERROR';\n\nexport const REMOVE_FROM_LIST = '[NewsEditor] REMOVE_FROM_LIST';\nexport const REMOVE_FROM_LIST_SUCCESS = '[NewsEditor] REMOVE_FROM_LIST_SUCCESS';\nexport const REMOVE_FROM_LIST_ERROR = '[NewsEditor] REMOVE_FROM_LIST_ERROR';\n\nexport const UPDATE_LIST_ORDER = '[NewsEditor] UPDATE_LIST_ORDER';\nexport const UPDATE_LIST_ORDER_SUCCESS = '[NewsEditor] UPDATE_LIST_ORDER_SUCCESS';\nexport const UPDATE_LIST_ORDER_ERROR = '[NewsEditor] UPDATE_LIST_ORDER_ERROR';\n\nexport const UPDATE_SELECTED_LIST = '[NewsEditor] UPDATE_SELECTED_LIST';\nexport const UPDATE_SELECTED_LIST_SUCCESS = '[NewsEditor] UPDATE_SELECTED_LIST_SUCCESS';\nexport const UPDATE_SELECTED_LIST_ERROR = '[NewsEditor] UPDATE_SELECTED_LIST_ERROR';\n\nexport const GET_SELECTED_LIST = '[NewsEditor] GET_SELECTED_LIST';\nexport const GET_SELECTED_LIST_SUCCESS = '[NewsEditor] GET_SELECTED_LIST_SUCCESS';\nexport const GET_SELECTED_LIST_ERROR = '[NewsEditor] GET_SELECTED_LIST_ERROR';\n\n\nexport const CHANGE_REVIEW_NEWS_LOADED = '[NewsEditor] CHANGE_REVIEW_NEWS_LOADED';\nexport const LOGOUT_EDITOR_STATE = '[NewsEditor] LOGOUT_EDITOR_STATE';\n\n/**\n * ---------------------------------------------------------------------------------------------------\n * ------------------------------------------------------------------------------> REVIEW NEWS ACTIONS\n * ---------------------------------------------------------------------------------------------------\n *\n *\n * ------------------------------------------------------------------------------> GET REVIEW NEWS\n */\nexport class GetReviewNews implements Action {\n  readonly type = GET_REVIEW_NEWS;\n  constructor() {}\n}\n\nexport class GetReviewNewsSuccess implements Action {\n  readonly type = GET_REVIEW_NEWS_SUCCESS;\n  constructor(public payload: News[]) {}\n}\n\nexport class GetReviewNewsError implements Action {\n  readonly type = GET_REVIEW_NEWS_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> APPROVE NEWS\n */\nexport class ApproveNews implements Action {\n  readonly type = APPROVE_NEWS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class ApproveNewsSuccess implements Action {\n  readonly type = APPROVE_NEWS_SUCCESS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class ApproveNewsError implements Action {\n  readonly type = APPROVE_NEWS_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> REJECT NEWS\n */\nexport class RejectNews implements Action {\n  readonly type = REJECT_NEWS;\n  constructor(public payload: RejectNotes ) {}\n}\n\nexport class RejectNewsSuccess implements Action {\n  readonly type = REJECT_NEWS_SUCCESS;\n  constructor(public payload: RejectNotes) {}\n}\n\nexport class RejectNewsError implements Action {\n  readonly type = REJECT_NEWS_ERROR;\n}\n\n\n/**\n * -------------------------------------------------------------------------------------------------\n * ------------------------------------------------------------------------------> NEWS LIST ACTIONS\n * -------------------------------------------------------------------------------------------------\n *\n *\n * ------------------------------------------------------------------------------> GET LISTS\n */\nexport class GetLists implements Action {\n  readonly type = GET_LISTS;\n  constructor() {};\n}\n\nexport class GetListsSuccess implements Action {\n  readonly type = GET_LISTS_SUCCESS;\n  constructor(public payload: NewsList[]) {}\n}\n\nexport class GetListsError implements Action {\n  readonly type = GET_LISTS_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> GET LISTS BY DATE\n */\nexport class GetListsByDate implements Action {\n  readonly type = GET_LISTS_BY_DATE;\n  constructor(public payload: { date: string }) {};\n}\n\nexport class GetListsByDateSuccess implements Action {\n  readonly type = GET_LISTS_BY_DATE_SUCCESS;\n  constructor(public payload: NewsList[]) {}\n}\n\nexport class GetListsByDateError implements Action {\n  readonly type = GET_LISTS_BY_DATE_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> ADD NEWS TO LIST\n */\nexport class AddToList implements Action {\n  readonly type = ADD_TO_LIST;\n  constructor(public payload: { list_id: number, news_id: number }) {};\n}\n\nexport class AddToListSuccess implements Action {\n  readonly type = ADD_TO_LIST_SUCCESS;\n  constructor(public payload: News[]) {}\n}\n\nexport class AddToListError implements Action {\n  readonly type = ADD_TO_LIST_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> REMOVE NEWS FROM LIST\n */\nexport class RemoveFromList implements Action {\n  readonly type = REMOVE_FROM_LIST;\n  constructor(public payload: { id: number }) {};\n}\n\nexport class RemoveFromListSuccess implements Action {\n  readonly type = REMOVE_FROM_LIST_SUCCESS;\n  constructor(public payload: News[]) {}\n}\n\nexport class RemoveFromListError implements Action {\n  readonly type = REMOVE_FROM_LIST_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> UPDATE LIST ORDER\n */\nexport class UpdateListOrder implements Action {\n  readonly type = UPDATE_LIST_ORDER;\n  constructor(public payload: ListOrder[]) {};\n}\n\nexport class UpdateListOrderSuccess implements Action {\n  readonly type = UPDATE_LIST_ORDER_SUCCESS;\n  constructor(public payload: News[]) {}\n}\n\nexport class UpdateListOrderError implements Action {\n  readonly type = UPDATE_LIST_ORDER_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> GET SELECTED LIST\n */\nexport class GetSelectedList implements Action {\n  readonly type = GET_SELECTED_LIST;\n  // constructor(public payload: { list_id: number }) {};\n}\n\nexport class GetSelectedListSuccess implements Action {\n  readonly type = GET_SELECTED_LIST_SUCCESS;\n  constructor(public payload: { list_id: number }) {}\n}\n\nexport class GetSelectedListError implements Action {\n  readonly type = GET_SELECTED_LIST_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> UPDATE SELECTED LIST\n */\nexport class UpdateSelectedList implements Action {\n  readonly type = UPDATE_SELECTED_LIST;\n  constructor(public payload: { list_id: number }) {};\n}\n\nexport class UpdateSelectedListSuccess implements Action {\n  readonly type = UPDATE_SELECTED_LIST_SUCCESS;\n  constructor(public payload: { list_id: number }) {}\n}\n\nexport class UpdateSelectedListError implements Action {\n  readonly type = UPDATE_SELECTED_LIST_ERROR;\n}\n\n\n\n\nexport class LogoutEditorState implements Action {\n  readonly type = LOGOUT_EDITOR_STATE;\n}\n\nexport class UpdateReviewNewsLoaded implements Action {\n  readonly type = CHANGE_REVIEW_NEWS_LOADED;\n  constructor(public payload: { isLoaded: boolean }) {}\n}\n\nexport type All = GetReviewNews | GetReviewNewsSuccess | GetReviewNewsError |\n                  ApproveNews | ApproveNewsSuccess | ApproveNewsError |\n                  RejectNews | RejectNewsSuccess | RejectNewsError;\n","import { News } from '../../news/models/news';\nimport { Action, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as EditorActions from './news-editor.actions';\nimport { ReviewNewsState } from '../../store/app.state';\n\n\n\n\n\nexport const initialState: ReviewNewsState = {\n    news: [],\n    isLoaded: false,\n    // pageState: {currentPage: null, perPage: null, lastPages: null, totalResults: null},\n    lists: [],\n    isListLoaded: false,\n    selectedList: null,\n  };\n\nexport type Actions = EditorActions.All;\nexport interface ActionWithPayload<T> extends Action {\n  payload: T;\n}\n\nexport function reducer(state = initialState, action: ActionWithPayload<any>): ReviewNewsState {\n  console.log(state, action);\n\n  switch (action.type) {\n\n    /**\n     * --------------------------------------------------------------------------------------> REVIEW NEWS\n     */\n    case EditorActions.GET_REVIEW_NEWS: {\n      return {\n        ...state,\n        news: [],\n        isLoaded: false\n      };\n    }\n\n    case EditorActions.GET_REVIEW_NEWS_SUCCESS: {\n      return {\n        ...state,\n        news: action.payload,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> APPROVE NEWS\n     */\n    case EditorActions.APPROVE_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n\n    case EditorActions.APPROVE_NEWS_SUCCESS: {\n      return {\n        ...state,\n        news: [\n         ...(state.news.filter( (news) => news.id !== action.payload.id )),\n        ],\n        isLoaded: true\n      };\n    }\n\n    case EditorActions.APPROVE_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> REJECT NEWS\n     */\n    case EditorActions.REJECT_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n\n    case EditorActions.REJECT_NEWS_SUCCESS: {\n      return {\n        ...state,\n        news: [\n         ...(state.news.filter( (news) => news.id !== action.payload.news_id )),\n        ],\n        isLoaded: true\n      };\n    }\n\n    case EditorActions.REJECT_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------------------------------------------\n     * --------------------------------------------------------------------------------------> NEWS LIST ACTIONS\n     * ---------------------------------------------------------------------------------------------------------\n     */\n    /**\n     * --------------------------------------------------------------------------------------> GET LIST\n     */\n    case EditorActions.GET_LISTS: {\n      return {\n        ...state,\n        isListLoaded: false\n      }\n    }\n\n    case EditorActions.GET_LISTS_SUCCESS: {\n      return {\n        ...state,\n        lists: action.payload,\n        isListLoaded: true\n      }\n    }\n\n    case EditorActions.GET_LISTS_ERROR: {\n      return {\n        ...state,\n        isListLoaded: true\n      }\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> GET LIST BY DATE\n     */\n\n    case EditorActions.GET_LISTS_BY_DATE: {\n      return {\n        ...state,\n        isListLoaded: false\n      }\n    }\n\n    case EditorActions.GET_LISTS_BY_DATE_SUCCESS: {\n      return {\n        ...state,\n        lists: action.payload,\n        isListLoaded: true\n      }\n    }\n\n    case EditorActions.GET_LISTS_BY_DATE_ERROR: {\n      return {\n        ...state,\n        isListLoaded: true\n      }\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> ADD TO LIST\n     */\n    case EditorActions.ADD_TO_LIST: {\n      return {\n        ...state,\n        isListLoaded: true\n      }\n    }\n\n    case EditorActions.ADD_TO_LIST_SUCCESS: {\n      return {\n        ...state,\n        isListLoaded: false,\n        // lists: [action.payload, ...state.lists]\n        // lists: [\n        //   ...(state.lists.filter( (list) => list.id !== action.payload.id )),\n        // ]\n\n        // lists: state.lists.map(\n        //   list => list.id === action.payload.id ? {\n        //       ...list,\n        //       lists: action.payload,\n        //   } : list,\n        // ),\n        // lists: {\n        //   ...state.lists,\n        //   [action.payload.id] : action.payload\n        // }\n        lists: action.payload\n      }\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> REMOVE FROM LIST\n     */\n    case EditorActions.REMOVE_FROM_LIST: {\n      return {\n        ...state,\n        isListLoaded: true\n      }\n    }\n\n    case EditorActions.REMOVE_FROM_LIST_SUCCESS: {\n      return {\n        ...state,\n        isListLoaded: false,\n        lists: action.payload\n      }\n    }\n    /**\n     * --------------------------------------------------------------------------------------> UPDATE LIST ORDER\n     */\n    case EditorActions.UPDATE_LIST_ORDER: {\n      return {\n        ...state,\n        isListLoaded: true\n      }\n    }\n\n    case EditorActions.UPDATE_LIST_ORDER_SUCCESS: {\n      return {\n        ...state,\n        isListLoaded: false,\n        lists: action.payload\n      }\n    }\n    /**\n     * --------------------------------------------------------------------------------------> GET SELECTED LIST\n     */\n    case EditorActions.GET_SELECTED_LIST_SUCCESS: {\n      return {\n        ...state,\n        selectedList: action.payload.list_id\n      }\n    }\n    /**\n     * --------------------------------------------------------------------------------------> UPDATE SELECTED LIST\n     */\n    case EditorActions.UPDATE_SELECTED_LIST_SUCCESS: {\n      return {\n        ...state,\n        selectedList: action.payload.list_id\n      }\n    }\n\n\n    /**\n     * --------------------------------------------------------------------------------------> OTHER ACTIONS\n     */\n    case EditorActions.CHANGE_REVIEW_NEWS_LOADED: {\n      return {\n        ...state,\n        isLoaded: action.payload.isLoaded\n      };\n    }\n\n    case EditorActions.LOGOUT_EDITOR_STATE: {\n      return initialState;\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const getReviewNewsState = createFeatureSelector<ReviewNewsState>('ReviewNewsState');\n\nexport const getMyNews = createSelector(\n  getReviewNewsState,\n  (state: ReviewNewsState) => state.news\n);\n\nexport const getNewsById = (newsBox, id) => createSelector(getReviewNewsState, (allItems) => {\n  if (allItems) {\n    return allItems[newsBox].find(item => {\n      return item.id === id;\n    });\n  } else {\n    return {};\n  }\n});\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-blank',\n  templateUrl: './blank.component.html',\n  styleUrls: []\n})\nexport class AppBlankComponent {}\n","<!-- ============================================================== -->\n<!-- Only router without any element -->\n<!-- ============================================================== -->\n<mat-sidenav-container>\n  <router-outlet></router-outlet>\n</mat-sidenav-container>","import * as $ from 'jquery';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Router } from '@angular/router';\nimport {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  ViewChild,\n  HostListener,\n  Directive,\n  AfterViewInit\n} from '@angular/core';\nimport { MenuItems } from '../../shared/menu-items/menu-items';\nimport { AppHeaderComponent } from './header/header.component';\nimport { AppSidebarComponent } from './sidebar/sidebar.component';\n\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\n/** @title Responsive sidenav */\n@Component({\n  selector: 'app-full-layout',\n  templateUrl: 'full.component.html',\n  styleUrls: []\n})\nexport class FullComponent implements OnDestroy, AfterViewInit {\n  mobileQuery: MediaQueryList;\n  dir = 'ltr';\n  green: boolean;\n  blue: boolean;\n  dark: boolean;\n  minisidebar: boolean;\n  boxed: boolean;\n  danger: boolean;\n  showHide: boolean;\n  sidebarOpened;\n\n  public config: PerfectScrollbarConfigInterface = {};\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public menuItems: MenuItems\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n  ngAfterViewInit() {\n    // This is for the topbar search\n    (<any>$('.srh-btn, .cl-srh-btn')).on('click', function() {\n      (<any>$('.app-search')).toggle(200);\n    });\n    // This is for the megamenu\n  }\n\n  // Mini sidebar\n}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<div class=\"main-container\" [dir]=\"dir\" [ngClass]=\"{'minisidebar': minisidebar, 'boxed': boxed, 'danger': danger, 'blue': blue, 'green': green, 'dark': dark }\">\n    <!-- ============================================================== -->\n    <!-- Topbar - style you can find in header.scss -->\n    <!-- ============================================================== -->\n    <mat-toolbar color=\"primary\" class=\"topbar telative\">\n        <!-- ============================================================== -->\n        <!-- Logo - style you can find in header.scss -->\n        <!-- ============================================================== -->\n        <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" href=\"/\">\n                <!-- Logo icon -->\n                <b>\n                    <!--You can put here icon as well // <i class=\"wi wi-sunset\"></i> //-->\n                    <!-- Dark Logo icon -->\n                    <img src=\"assets/images/logo-icon.png\" alt=\"homepage\" class=\"dark-logo\">\n                    <!-- Light Logo icon -->\n                    <img src=\"assets/images/logo-light-icon.png\" alt=\"homepage\" class=\"light-logo\">\n                </b>\n                <!--End Logo icon -->\n                <!-- Logo text -->\n                <span fxShow=\"false\" fxShow.gt-xs>\n                    <!-- dark Logo text -->\n                    <img src=\"assets/images/logo-text.png\" alt=\"homepage\" class=\"dark-logo\">\n                    <!-- Light Logo text -->\n                    <img src=\"assets/images/logo-light-text.png\" class=\"light-logo\" alt=\"homepage\">\n                </span>\n            </a>\n        </div>\n        <!-- ============================================================== -->\n        <!-- sidebar toggle -->\n        <!-- ============================================================== -->\n\n        <button mat-icon-button (click)=\"snav.toggle()\" value=\"sidebarclosed\">\n            <mat-icon>menu</mat-icon>\n        </button>\n        <!-- ============================================================== -->\n        <!-- Search - style you can find in header.scss -->\n        <!-- ============================================================== -->\n        <!-- <button mat-icon-button class=\"srh-btn\">\n            <mat-icon>search</mat-icon>\n        </button>\n        <form class=\"app-search\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search &amp; enter\">\n            <a class=\"cl-srh-btn\">\n                <i class=\"ti-close\"></i>\n            </a>\n        </form> -->\n        <span fxFlex></span>\n        <!-- ============================================================== -->\n        <!-- app header component - style you can find in header.scss / header.component.ts-->\n        <!-- ============================================================== -->\n        <app-header></app-header>\n        <!-- ============================================================== -->\n        <!-- Right sidebar toggle - style you can find in rightsidebar.component.scss -->\n        <!-- ============================================================== -->\n        <!-- <button (click)=\"end.toggle()\" mat-icon-button class=\"ml-xs overflow-visible\">\n            <mat-icon>settings</mat-icon>\n        </button> -->\n    </mat-toolbar>\n    <!-- ============================================================== -->\n    <!-- End Topbar - style you can find in pages.scss -->\n    <!-- ============================================================== -->\n    <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 0 : 0\"\n        [ngClass]=\"{'minisidebar': minisidebar}\">\n        <!-- ============================================================== -->\n        <!-- Sidebar - style you can find in sidebar.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav #snav id=\"snav\" class=\"pl-xs\" [mode]=\"mobileQuery.matches ? 'side' : 'over'\" fixedTopGap=\"0\"\n            [opened]=\"mobileQuery.matches\" [disableClose]=\"mobileQuery.matches\" (open)=\"sidebarOpened = true\" (close)=\"sidebarOpened = false\"\n            [perfectScrollbar]=\"config\">\n\n            <app-sidebar class=\"app-sidebar\"></app-sidebar>\n\n        </mat-sidenav>\n        <!-- ============================================================== -->\n        <!-- Sidebar - style you can find in sidebar.scss -->\n        <!-- ============================================================== -->\n        <!-- ============================================================== -->\n        <!-- Right Sidebar - style you can find in rightsidebar.component.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav #end position=\"end\" class=\"chat-panel\" mode=\"over\" opened=\"false\">\n            <div class=\"scroll\">\n                <mat-nav-list>\n\n                    <h3 mat-subheader class=\"text-uppercase font-weight-bold\">Settings</h3>\n                    <mat-list-item>\n                        <mat-slide-toggle color=\"warn\" (change)=\"dir = (dir == 'rtl' ? 'ltr' : 'rtl')\">RTL</mat-slide-toggle>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <mat-slide-toggle color=\"warn\" [(ngModel)]=\"boxed\">Boxed Layout</mat-slide-toggle>\n                    </mat-list-item>\n                    <!--<mat-list-item>\n                    <mat-slide-toggle [(ngModel)]=\"minisidebar\">Mini Sidebar</mat-slide-toggle>\n                  </mat-list-item>    -->\n                    <mat-divider></mat-divider>\n                    <h3 mat-subheader class=\"text-uppercase font-weight-bold\">Colors</h3>\n                    <mat-list-item>\n                        <mat-checkbox color=\"warn\" [(ngModel)]=\"danger\" (change)=\"green = blue = false\" class=\"text-danger\">Red</mat-checkbox>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <mat-checkbox color=\"warn\" [(ngModel)]=\"green\" (change)=\"danger = blue = false\" class=\"text-megna\">Teal\n                            Green</mat-checkbox>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <mat-checkbox color=\"warn\" [(ngModel)]=\"blue\" (change)=\"green = danger = false\" class=\"text-info\">Blue</mat-checkbox>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <mat-checkbox color=\"warn\" [(ngModel)]=\"dark\" (change)=\"green = blue = danger = false\">Dark</mat-checkbox>\n                    </mat-list-item>\n                </mat-nav-list>\n            </div>\n        </mat-sidenav>\n\n        <!-- ============================================================== -->\n        <!-- Page container - style you can find in pages.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav-content class=\"page-wrapper\">\n\n                <div class=\"page-content\">\n\n                    <router-outlet>\n                        <app-spinner></app-spinner>\n                    </router-outlet>\n\n                </div>\n\n        </mat-sidenav-content>\n        <!-- ============================================================== -->\n        <!-- Page container - style you can find in pages.scss -->\n        <!-- ============================================================== -->\n    </mat-sidenav-container>\n</div>\n","import { Component } from '@angular/core';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { Subscription } from 'Rxjs';\n\nimport { AuthService } from '../../../shared/services/auth.service';\n\nimport * as userActions from '../../../authentication/store/user.actions';\nimport { UserState } from '../../../store/app.state';\nimport { Store } from '@ngrx/store';\nimport { Router } from '../../../../../node_modules/@angular/router';\n\nimport { DsService } from '../../../shared/services/ds.service';\nimport { User } from '../../../shared/models/user';\nimport { environment } from '../../../../environments/environment';\ndeclare var deepstream: any;\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: []\n})\nexport class AppHeaderComponent {\n  public config: PerfectScrollbarConfigInterface = {};\n  loggedInSub: Subscription;\n  logged_in = false;\n  show_top_icons = false;\n  public userData: User = new User();\n\n\n\n\n  storagePath: string = null;\n  title = 'deepChat';\n  username;\n  text: string = 'first chat record';\n  chats;\n  chatArray = [];\n\n\n  constructor(\n    private auth: AuthService,\n    private store: Store<UserState>,\n    private ds: DsService,\n    private store2: Store<any>,\n  ) {\n    this.storagePath = environment.storageUrl;\n\n    // get user authentication status\n    this.loggedInSub = this.auth.loggedIn$.subscribe( loggedIn => this.logged_in = loggedIn );\n\n    this.store2.select(store => store.UserState).subscribe(userdata => {\n      this.userData = userdata.user;\n      //this.chantInit();\n    });\n  }\n\n  logOut(): void {\n    // this.auth.doSignOut();\n    this.store.dispatch(new userActions.UserLogout());\n\n  }\n\n\n    // chantInit(){\n    //   this.username = this.userData.email;\n    //   // Login without credentials\n    //   this.ds.login(null, this.loginHandler);\n\n    //   this.chats = this.ds.getList('chats');\n    //   this.chats.on('entry-added', recordName => {\n    //     this.ds.getRecord( recordName ).whenReady( record => {\n    //       record.subscribe( (data) => {\n    //         if(data.username && data.text) {\n    //           // Update bindable property\n    //           this.chatArray.push(data);\n    //           console.log(this.chatArray)\n    //         }\n    //       }, true );\n    //     });\n    //   })\n\n\n    //   const recordName = 'chat/' + this.ds.dsInstance.getUid();\n\n    //   const chatRecord = this.ds.getRecord(recordName);\n    //   chatRecord.set({uid: this.userData.id ,username: this.username, text: this.text, userimage: this.userData.profile.profilepic});\n    //   this.text = '';\n    //   // Update the chats list\n    //   this.chats.addEntry(recordName);\n    // }\n\n\n    // loginHandler(success, data) {\n    //   console.log('logged in', success, data);\n    // }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n// This is for Notifications\n  // notifications: Object[] = [\n  //   {\n  //     round: 'round-danger',\n  //     icon: 'ti-link',\n  //     title: 'Launch Admin',\n  //     subject: 'Just see the my new admin!',\n  //     time: '9:30 AM'\n  //   },\n  //   {\n  //     round: 'round-success',\n  //     icon: 'ti-calendar',\n  //     title: 'Event today',\n  //     subject: 'Just a reminder that you have event',\n  //     time: '9:10 AM'\n  //   },\n  //   {\n  //     round: 'round-info',\n  //     icon: 'ti-settings',\n  //     title: 'Settings',\n  //     subject: 'You can customize this template as you want',\n  //     time: '9:08 AM'\n  //   },\n  //   {\n  //     round: 'round-primary',\n  //     icon: 'ti-user',\n  //     title: 'Pavan kumar',\n  //     subject: 'Just see the my admin!',\n  //     time: '9:00 AM'\n  //   }\n  // ];\n\n  // This is for Mymessages\n  // mymessages: Object[] = [\n  //   {\n  //     useravatar: 'assets/images/users/1.jpg',\n  //     status: 'online',\n  //     from: 'Pavan kumar',\n  //     subject: 'Just see the my admin!',\n  //     time: '9:30 AM'\n  //   },\n  //   {\n  //     useravatar: 'assets/images/users/2.jpg',\n  //     status: 'busy',\n  //     from: 'Sonu Nigam',\n  //     subject: 'I have sung a song! See you at',\n  //     time: '9:10 AM'\n  //   },\n  //   {\n  //     useravatar: 'assets/images/users/2.jpg',\n  //     status: 'away',\n  //     from: 'Arijit Sinh',\n  //     subject: 'I am a singer!',\n  //     time: '9:08 AM'\n  //   },\n  //   {\n  //     useravatar: 'assets/images/users/4.jpg',\n  //     status: 'offline',\n  //     from: 'Pavan kumar',\n  //     subject: 'Just see the my admin!',\n  //     time: '9:00 AM'\n  //   }\n  // ];\n","<!-- ============================================================== -->\n<!-- Display login button if user is not logged in -->\n<!-- ============================================================== -->\n<button mat-icon-button alt=\"log in\" class=\"m-r-5\" *ngIf=\"!logged_in\" [routerLink]=\"['/authentication/login/']\">\n  <mat-icon style=\"color:#ffffff\">account_circle</mat-icon>\n</button>\n\n<!-- ============================================================== -->\n<!-- Notification - style you can find in header.scss -->\n<!-- ============================================================== -->\n<!-- <button [matMenuTriggerFor]=\"notification\" mat-icon-button class=\"m-r-10\">\n    <mat-icon>message</mat-icon>\n    <div class=\"notify\">\n        <span class=\"heartbit\"></span>\n        <span class=\"point\"></span>\n    </div>\n</button>\n<mat-menu #notification=\"matMenu\" class=\"mymegamenu\">\n    <div class=\"mailbox\">\n        <ul>\n            <li>\n                <div class=\"drop-title\">Notifications</div>\n            </li>\n            <li>\n                <div class=\"message-center\">\n                    <perfect-scrollbar [config]=\"config\">\n\n                        <a href=\"#\" *ngFor=\"let notification of notifications\">\n                            <div class=\"round {{notification.round}}\">\n                                <i class=\"{{notification.icon}}\"></i>\n                            </div>\n                            <div class=\"mail-content\">\n                                <h5>{{notification.title}}</h5>\n                                <span class=\"mail-desc\">{{notification.subject}}</span>\n                                <span class=\"time\">{{notification.time}}</span>\n                            </div>\n                        </a>\n\n                    </perfect-scrollbar>\n                </div>\n            </li>\n\n        </ul>\n    </div>\n</mat-menu> -->\n<!-- ============================================================== -->\n<!-- Profile - style you can find in header.scss -->\n<!-- ============================================================== -->\n<button [matMenuTriggerFor]=\"message\" mat-icon-button class=\"m-r-10\">\n    <!-- <mat-icon>email</mat-icon> -->\n    <!-- <div class=\"notify\">\n        <span class=\"heartbit\"></span>\n        <span class=\"point\"></span>\n    </div> -->\n</button>\n<mat-menu #message=\"matMenu\" class=\"mymessage\">\n    <div class=\"mailbox\">\n        <ul>\n            <!-- <li>\n                <div class=\"drop-title\">You have 4 new Mymessages</div>\n            </li> -->\n            <li>\n                <div class=\"message-center\">\n                    <perfect-scrollbar [config]=\"config\">\n\n                        <a href=\"#\" *ngFor=\"let mymessage of chatArray\">\n                            <div class=\"user-img\">\n                                <img src=\"{{storagePath}}profiles/user/{{mymessage.userimage}}\" alt=\"user\" class=\"img-circle\" width=\"40\">\n                                <!-- <span class=\"profile-status {{mymessage.status}} pull-right\"></span> -->\n                            </div>\n                            <div class=\"mail-content\">\n                                <h5>{{mymessage.username}}</h5>\n                                <span class=\"mail-desc\">{{mymessage.text}}</span>\n                                <!-- <span class=\"time\">{{mymessage.time}}</span> -->\n                            </div>\n                        </a>\n                    </perfect-scrollbar>\n                </div>\n            </li>\n        </ul>\n    </div>\n</mat-menu>\n<!-- ============================================================== -->\n<!-- Profile - style you can find in header.scss -->\n<!-- ============================================================== -->\n<button [matMenuTriggerFor]=\"profile\" mat-icon-button class=\"m-r-5\" *ngIf=\"logged_in\">\n  <mat-icon>account_circle</mat-icon>\n</button>\n<mat-menu #profile=\"matMenu\" class=\"mymegamenu\">\n    <!-- <button mat-menu-item>\n        <mat-icon>settings</mat-icon> Settings </button> -->\n    <button mat-menu-item [routerLink]=\"['/user/profile']\">\n        <mat-icon>account_box</mat-icon> Profile </button>\n    <!-- <button mat-menu-item>\n        <mat-icon>notifications_off</mat-icon> Disable notifications </button> -->\n    <button mat-menu-item (click)=\"logOut()\">\n        <mat-icon>exit_to_app</mat-icon> Sign Out </button>\n</mat-menu>\n","import { ChangeDetectorRef, Component, NgZone, OnInit, OnDestroy, ViewChild, HostListener, Directive, AfterViewInit } from '@angular/core';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { MenuItems } from '../../../shared/menu-items/menu-items';\nimport { SessionService } from '../../../shared/services/session.service';\nimport { Subscription } from 'Rxjs';\nimport { AuthService } from '../../../shared/services/auth.service';\n\nimport { Store } from '@ngrx/store';\nimport { UserState } from '../../../store/app.state';\nimport * as userActions from '../../../authentication/store/user.actions';\nimport { User } from '../../../shared/models/user';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: []\n})\nexport class AppSidebarComponent implements OnInit, OnDestroy {\n  public username = 'Guest';\n  public config: PerfectScrollbarConfigInterface = {};\n  mobileQuery: MediaQueryList;\n  loggedInSub: Subscription;\n  logged_in = false;\n\n  public userData: User = new User();\n  public storagePath: string;\n\n  private _mobileQueryListener: () => void;\n  status: boolean = false;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public menuItems: MenuItems,\n    private session: SessionService,\n    private auth: AuthService,\n    private store: Store<UserState>,\n    private store2: Store<any>,\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n\n    // get user authentication status\n    this.loggedInSub = this.auth.loggedIn$.subscribe( loggedIn => this.logged_in = loggedIn );\n    this.username = session.getSession('name');\n  }\n\n  ngOnInit() {\n    this.storagePath = environment.storageUrl;\n    this.store2.select(store => store.UserState).subscribe(userdata => {\n      this.userData = userdata.user;\n    });\n  }\n\n\n  clickEvent() {\n    this.status = !this.status;\n  }\n\n  subclickEvent() {\n    this.status = true;\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  checkRole(role: string) {\n    return this.session.checkRole(role);\n  }\n\n  logOut(): void {\n    this.store.dispatch(new userActions.UserLogout());\n  }\n}\n","<!-- ============================================================== -->\n<!-- sidebar -->\n<!-- ============================================================== -->\n<div class=\"user-profile\" style=\"background: url(assets/images/background/user-info.jpg) no-repeat;\">\n    <!-- User profile image -->\n    <div class=\"profile-img\" *ngIf=\"userData.id == null\">\n        <img src=\"{{storagePath+'profiles/default.jpg'}}\" alt=\"user\" *ngIf=\"userData == null\">\n    </div>\n    <div class=\"profile-img\" *ngIf=\"userData.id != null\">\n        <img src=\"{{storagePath+'profiles/user/'+userData.profile.profilepic}}\" alt=\"user\" *ngIf=\"userData.profile.profilepic\">\n    </div>\n    <!-- User profile text-->\n    <!-- ============================================================== -->\n    <!-- Profile - style you can find in header.scss -->\n    <!-- ============================================================== -->\n    <div class=\"profile-text\">\n        <a [matMenuTriggerFor]=\"sdprofile\" class=\"\" *ngIf=\"logged_in\"> {{ username }} <i class=\"ti-angle-down font-12 m-l-5\"></i></a>\n        <a class=\"\" *ngIf=\"!logged_in\"> {{ username }} </a>\n    </div>\n    <mat-menu #sdprofile=\"matMenu\" class=\"mymegamenu\">\n        <!-- <button mat-menu-item>\n            <mat-icon>settings</mat-icon> Settings </button> -->\n        <button mat-menu-item [routerLink]=\"['/user/profile']\">\n            <mat-icon>account_box</mat-icon> Profile </button>\n        <!--<button mat-menu-item>\n            <mat-icon>notifications_off</mat-icon> Disable notifications </button>-->\n        <button mat-menu-item (click)=\"logOut()\">\n            <mat-icon>exit_to_app</mat-icon> Sign Out </button>\n    </mat-menu>\n</div>\n\n<mat-nav-list appAccordion>\n    <!-- <div *ngIf=\"checkRole(menuitem.role)\"> -->\n    <mat-list-item appAccordionLink routerLinkActive=\"selected\" group=\"{{menuitem.state}}\" *ngFor=\"let menuitem of menuItems.getMenuitem()\">\n        <a class=\"\" appAccordionToggle [routerLink]=\"['/', menuitem.state]\" *ngIf=\"menuitem.type === 'link' && checkRole(menuitem.role)\">\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\n            <span>{{ menuitem.name }}</span>\n            <span fxFlex></span>\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\n        </a>\n\n        <a class=\"\" appAccordionToggle href=\"{{menuitem.state}}\" *ngIf=\"menuitem.type === 'extLink' && checkRole(menuitem.role)\">\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\n            <span>{{ menuitem.name }}</span>\n            <span fxFlex></span>\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\n        </a>\n        <a class=\"\" appAccordionToggle href=\"{{menuitem.state}}\" target=\"_blank\" *ngIf=\"menuitem.type === 'extTabLink' && checkRole(menuitem.role)\">\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\n            <span>{{ menuitem.name}}</span>\n            <span fxFlex></span>\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\n        </a>\n\n        <a class=\"\" appAccordionToggle href=\"javascript:;\" *ngIf=\"menuitem.type === 'sub' && checkRole(menuitem.role)\">\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\n            <span>{{ menuitem.name }}</span>\n            <span fxFlex></span>\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\n            <mat-icon class=\"dd-icon\">keyboard_arrow_down</mat-icon>\n        </a>\n        <mat-nav-list class=\"sub-item\" *ngIf=\"menuitem.type === 'sub' && checkRole(menuitem.role)\">\n            <mat-list-item *ngFor=\"let childitem of menuitem.children\" routerLinkActive=\"selected\">\n                <a [routerLink]=\"['/', menuitem.state, childitem.state ]\" *ngIf=\"childitem.type === 'link'\" class=\"relative\"\n                    routerLinkActive=\"selected\">{{ childitem.name}}</a>\n            </mat-list-item>\n            <mat-list-item *ngFor=\"let childitem of menuitem.children\">\n                <a class=\"\" href=\"javascript: void(0);\" *ngIf=\"childitem.type === 'subchild'\" (click)=\"clickEvent()\"\n                    [ngClass]=\"status ? 'selected' : ''\">\n                    <span>{{ childitem.name }}</span>\n                    <span fxFlex></span>\n                    <mat-icon class=\"dd-icon\">keyboard_arrow_down</mat-icon>\n                </a>\n                <mat-nav-list class=\"child-sub-item\" *ngIf=\"childitem.type === 'subchild'\">\n                    <mat-list-item *ngFor=\"let child of childitem.subchildren\" routerLinkActive=\"selected\">\n                        <a [routerLink]=\"['/', menuitem.state, childitem.state, child.state ]\" routerLinkActive=\"selected\">{{child.name}}</a>\n                    </mat-list-item>\n                </mat-nav-list>\n            </mat-list-item>\n\n        </mat-nav-list>\n\n        <div class=\"saperator text-muted\" *ngIf=\"menuitem.type === 'saperator'\">\n            <span>{{ menuitem.name }}</span>\n        </div>\n    </mat-list-item>\n    <!-- </div> -->\n</mat-nav-list>\n","export class News {\n  public id?: number;\n  public news_name?: string;\n  public heading?: string;\n  public body?: string;\n  public newsstatus_id?: number;\n  public user_id?: number;\n  public language?: Language;\n  public newsbar?: NewsBar[];\n  public tickernews?: TickerNews[];\n  public newsstatus?: Newsstatus;\n  public newsnotes?: NewNotes[];\n  public draft?: boolean;\n  public loading?: boolean;\n  public list_news?: ListNews[];\n\n  constructor() {\n    this.news_name = '';\n    this.heading = '';\n    this.body = '';\n    this.newsstatus_id = 0;\n    this.user_id = 0;\n    this.language = new Language('', '');\n    this.newsbar = [new NewsBar('', '')];\n    this.draft = false;\n  }\n\n  static generateMockNews(): News {\n    return new News();\n  }\n\n}\n\nexport class NewsBar {\n\n  constructor(\n    public title: string,\n    public detail: string,\n    public id?: number,\n    public news_id?: number,\n    public created_at?: string,\n    public updated_a?: string\n  ) { }\n\n}\n\nexport class TickerNews {\n\n  constructor(\n    public news: string\n  ) { }\n\n}\n\nexport class Language {\n\n  constructor(\n    public language_code: string,\n    public language?: string,\n    public id?: number\n  ) {}\n\n}\n\nexport class Newsstatus {\n\n  constructor(\n    public id: string,\n    public status: string,\n    public detail: string,\n  ) {}\n\n}\n\nexport class NewNotes {\n\n  constructor(\n    public id: number,\n    public news_id: number,\n    public note: string,\n  ) {}\n\n}\n\nexport class NewsList {\n\n  public id: number;\n  public name: string;\n  public created_at: string;\n  public updated_at: string;\n  public list_news: ListNews[];\n\n  constructor() {\n    this.id = null;\n    this.name = '';\n    this.created_at = '';\n    this.updated_at = '';\n    this.list_news = [new ListNews()];\n  }\n\n}\n\nexport class ListNews {\n\n  public id: number;\n  public news_list_id: number;\n  public news_id: number;\n  public created_at: string;\n  public updated_at: string;\n  public news: News;\n\n  constructor() {\n    this.id = null;\n    this.news_list_id = null;\n    this.news_id = null;\n    this.created_at = null;\n    this.updated_at = null;\n    this.news = new News();\n  }\n\n}\n\nexport class ListOrder{\n  list_id: number;\n  news_id: number;\n  order: number;\n\n  constructor ( list_id, news_id, order ) {\n    this.list_id  = list_id;\n    this.news_id  = news_id;\n    this.order    = order;\n  }\n}\n\nexport class Ticker {\n  public id?: number;\n  public name?: string;\n  public color?: string;\n  public separator?: string;\n  public enabled?: number;\n  public tickernews?: TickersNews[];\n  public created_at?: string;\n  public updated_at?: string;\n\n  constructor() {\n    this.name = '';\n  }\n}\n\nexport class TickersNews {\n  public id?: number;\n  public news: string;\n  public name?: string;\n  public language_id?: number;\n  public enabled?: number;\n  public ticker_id?: number;\n  public language?: Language;\n  public created_at?: string;\n  public updated_at?: string;\n\n  constructor() {\n    this.news = '';\n    this.language = new Language('', '');\n  }\n}\n\n\n\nexport class JournalistDashboard {\n  public news_numbers?: JournalistDashboardNewsNumbers;\n  public lists?: NewsList[];\n\n  constructor() {\n    this.news_numbers = new JournalistDashboardNewsNumbers();\n    this.lists = [];\n  }\n}\nexport class JournalistDashboardNewsNumbers {\n  public my: number;\n  public reject: number;\n  public approved: number;\n  public in_review: number;\n\n  constructor() {\n    this.my = 0;\n    this.reject = 0;\n    this.approved = 0;\n    this.in_review = 0;\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { News, Ticker, TickersNews } from './../../news/models/news';\n\nexport const GET_A_NEWS = '[News] GET_A_NEWS';\nexport const GET_A_NEWS_SUCCESS = '[News] GET_A_NEWS_SUCCESS';\nexport const GET_A_NEWS_ERROR = '[News] GET_A_NEWS_ERROR';\n\nexport const GET_MY_NEWS = '[News] GET_MY_NEWS';\nexport const GET_MY_NEWS_SUCCESS = '[News] GET_MY_NEWS_SUCCESS';\nexport const GET_MY_NEWS_ERROR = '[News] GET_MY_NEWS_ERROR';\n\nexport const GET_TRASH_NEWS = '[News] GET_TRASH_NEWS';\nexport const GET_TRASH_NEWS_SUCCESS = '[News] GET_TRASH_NEWS_SUCCESS';\nexport const GET_TRASH_NEWS_ERROR = '[News] GET_TRASH_NEWS_ERROR';\n\nexport const DELETE_NEWS = '[News] DELETE_NEWS';\nexport const DELETE_NEWS_SUCCESS = '[News] DELETE_NEWS_SUCCESS';\nexport const DELETE_NEWS_ERROR = '[News] DELETE_NEWS_ERROR';\n\nexport const RESTORE_NEWS = '[News] RESTORE_NEWS';\nexport const RESTORE_NEWS_SUCCESS = '[News] RESTORE_NEWS_SUCCESS';\nexport const RESTORE_NEWS_ERROR = '[News] RESTORE_NEWS_ERROR';\n\nexport const CHANGE_NEWS_LOADED = '[News] CHANGE_NEWS_LOADED';\nexport const CHANGE_MY_NEWS_LOADED = '[News] CHANGE_MY_NEWS_LOADED';\nexport const CHANGE_TRASH_NEWS_LOADED = '[News] CHANGE_TRASH_NEWS_LOADED';\n\nexport const DESTROY_NEWS = '[News] DESTROY_NEWS';\nexport const DESTROY_NEWS_SUCCESS = '[News] DESTROY_NEWS_SUCCESS';\nexport const DESTROY_NEWS_ERROR = '[News] DESTROY_NEWS_ERROR';\n\nexport const GET_TICKERS = '[News] GET_TICKERS';\nexport const GET_TICKERS_SUCCESS = '[News] GET_TICKERS_SUCCESS';\nexport const GET_TICKERS_ERROR = '[News] GET_TICKERS_ERROR';\n\nexport const ADD_TICKER_NEWS = '[News] ADD_TICKER_NEWS';\nexport const ADD_TICKER_NEWS_SUCCESS = '[News] ADD_TICKER_NEWS_SUCCESS';\nexport const ADD_TICKER_NEWS_ERROR = '[News] ADD_TICKER_NEWS_ERROR';\n\nexport const APPROVE_TICKER_NEWS = '[News] APPROVE_TICKER_NEWS';\nexport const APPROVE_TICKER_NEWS_SUCCESS = '[News] APPROVE_TICKER_NEWS_SUCCESS';\nexport const APPROVE_TICKER_NEWS_ERROR = '[News] APPROVE_TICKER_NEWS_ERROR';\n\nexport const DISAPPROVE_TICKER_NEWS = '[News] DISAPPROVE_TICKER_NEWS';\nexport const DISAPPROVE_TICKER_NEWS_SUCCESS = '[News] DISAPPROVE_TICKER_NEWS_SUCCESS';\nexport const DISAPPROVE_TICKER_NEWS_ERROR = '[News] DISAPPROVE_TICKER_NEWS_ERROR';\n\nexport const DELETE_TICKER_NEWS = '[News] DELETE_TICKER_NEWS';\nexport const DELETE_TICKER_NEWS_SUCCESS = '[News] DELETE_TICKER_NEWS_SUCCESS';\nexport const DELETE_TICKER_NEWS_ERROR = '[News] DELETE_TICKER_NEWS_ERROR';\n\nexport const ADD_TICKER = '[News] ADD_TICKER';\nexport const ADD_TICKER_SUCCESS = '[News] ADD_TICKER_SUCCESS';\nexport const ADD_TICKER_ERROR = '[News] ADD_TICKER_ERROR';\n\nexport const LOGOUT_NEWS_STATE = '[News] LOGOUT_NEWS_STATE'; // clears news state when user logout is called\n\n\n/** -------------------------------------------------->MY NEWS LOADING ACTIONS */\nexport class GetMyNews implements Action {\n  readonly type = GET_MY_NEWS;\n  constructor(public payload: { perPage?: any, currentPage?: number }) {}\n}\n\nexport class GetMyNewsSuccess implements Action {\n  readonly type = GET_MY_NEWS_SUCCESS;\n  constructor(public payload: any) {}\n}\n\nexport class GetMyNewsError implements Action {\n  readonly type = GET_MY_NEWS_ERROR;\n}\n\n\n/** -------------------------------------------------->TRASH NEWS LOADING ACTIONS */\nexport class GetTrashNews implements Action {\n  readonly type = GET_TRASH_NEWS;\n  constructor(public payload: { perPage?: any, currentPage?: number }) {}\n}\n\nexport class GetTrashNewsSuccess implements Action {\n  readonly type = GET_TRASH_NEWS_SUCCESS;\n  constructor(public payload: any) {}\n}\n\nexport class GetTrashNewsError implements Action {\n  readonly type = GET_TRASH_NEWS_ERROR;\n}\n\n\n/**\n * -------------------------------------------------->GET ONE NEWS FROM STORE\n * --------------------------------------------------//TODO - remove later\n * */\nexport class GetNews implements Action {\n  readonly type = GET_A_NEWS;\n  constructor(public payload: string) {}\n}\n\nexport class GetNewsSuccess implements Action {\n  readonly type = GET_A_NEWS_SUCCESS;\n  constructor(public payload: News) {}\n}\n\nexport class GetNewsError implements Action {\n  readonly type = GET_A_NEWS_ERROR;\n}\n\n\n/**\n * -------------------------------------------------->NEWS DELETING (TRASHING) ACTIONS,\n * -------------------------------------------------->sets news status to deleted\n*/\nexport class DeleteNews implements Action {\n  readonly type = DELETE_NEWS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class DeleteNewsSuccess implements Action {\n  readonly type = DELETE_NEWS_SUCCESS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class DeleteNewsError implements Action {\n  readonly type = DELETE_NEWS_ERROR;\n}\n\n\n/** -------------------------------------------------->NEWS RESTORING ACTIONS */\nexport class RestoreNews implements Action {\n  readonly type = RESTORE_NEWS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class RestoreNewsSuccess implements Action {\n  readonly type = RESTORE_NEWS_SUCCESS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class RestoreNewsError implements Action {\n  readonly type = RESTORE_NEWS_ERROR;\n}\n\n\n/**\n * -------------------------------------------------->ACTIONS TO SET LOADING FLAGS\n * -------------------------------------------------->inorder for the controllers to load new news from api\n */\nexport class UpdateNewsLoaded implements Action {\n  readonly type = CHANGE_NEWS_LOADED;\n  constructor(public payload: { isLoaded: boolean }) {}\n}\nexport class UpdateMyNewsLoaded implements Action {\n  readonly type = CHANGE_MY_NEWS_LOADED;\n  constructor(public payload: { isMyNewsLoaded: boolean }) {}\n}\nexport class UpdateTrashNewsLoaded implements Action {\n  readonly type = CHANGE_TRASH_NEWS_LOADED;\n  constructor(public payload: { isTrashNewsLoaded: boolean }) {}\n}\n\n\n/**\n * -------------------------------------------------->ACTIONS FOR REMOVING NEWS FROM DATABASE\n * -------------------------------------------------->compleatly destroy them\n */\nexport class DestroyNews implements Action {\n  readonly type = DESTROY_NEWS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class DestroyNewsSuccess implements Action {\n  readonly type = DESTROY_NEWS_SUCCESS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class DestroyNewsError implements Action {\n  readonly type = DESTROY_NEWS_ERROR;\n}\n\n\n/**\n * -------------------------------------------------->TICKER ACTIONS\n * -------------------------------------------------->users cannot remove, disable or enable ticker or ticker news\n * -------------------------------------------------->users can add ticker news, but the added news is marked unpublished (an editor have to publish the news)\n */\n/**\n * -------------------------------------------------->GET TICKERS\n */\nexport class GetTickers implements Action {\n  readonly type = GET_TICKERS;\n}\n\nexport class GetTickersSuccess implements Action {\n  readonly type = GET_TICKERS_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class GetTickersError implements Action {\n  readonly type = GET_TICKERS_ERROR;\n}\n\n/**\n * -------------------------------------------------->ADD TICKER NEWS\n */\nexport class AddTickerNews implements Action {\n  readonly type = ADD_TICKER_NEWS;\n  constructor(public payload: TickersNews) {}\n}\n\nexport class AddTickerNewsSuccess implements Action {\n  readonly type = ADD_TICKER_NEWS_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class AddTickerNewsError implements Action {\n  readonly type = ADD_TICKER_NEWS_ERROR;\n}\n\n/**\n * -------------------------------------------------->APPROVE TICKER NEWS\n */\nexport class ApproveTickerNews implements Action {\n  readonly type = APPROVE_TICKER_NEWS;\n  constructor(public payload: { ticker_news_id: number }) {}\n}\n\nexport class ApproveTickerNewsSuccess implements Action {\n  readonly type = APPROVE_TICKER_NEWS_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class ApproveTickerNewsError implements Action {\n  readonly type = APPROVE_TICKER_NEWS_ERROR;\n}\n\n/**\n * -------------------------------------------------->DISAPPROVE TICKER NEWS\n */\nexport class DisApproveTickerNews implements Action {\n  readonly type = DISAPPROVE_TICKER_NEWS;\n  constructor(public payload: { ticker_news_id: number }) {}\n}\n\nexport class DisApproveTickerNewsSuccess implements Action {\n  readonly type = DISAPPROVE_TICKER_NEWS_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class DisApproveTickerNewsError implements Action {\n  readonly type = DISAPPROVE_TICKER_NEWS_ERROR;\n}\n\n/**\n * -------------------------------------------------->DELETE TICKER NEWS\n */\nexport class DeleteTickerNews implements Action {\n  readonly type = DELETE_TICKER_NEWS;\n  constructor(public payload: { ticker_news_id: number }) {}\n}\n\nexport class DeleteTickerNewsSuccess implements Action {\n  readonly type = DELETE_TICKER_NEWS_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class DeleteTickerNewsError implements Action {\n  readonly type = DELETE_TICKER_NEWS_ERROR;\n}\n\n/**\n * -------------------------------------------------->ADD A TICKER\n */\nexport class AddTicker implements Action {\n  readonly type = ADD_TICKER;\n  constructor(public payload: Ticker) {}\n}\n\nexport class AddTickerSuccess implements Action {\n  readonly type = ADD_TICKER_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class AddTickerError implements Action {\n  readonly type = ADD_TICKER_ERROR;\n}\n\n\n\n\n\n/** action called when user logs out of the system to clear the \"NewsState\" */\nexport class LogoutNewsState implements Action {\n  readonly type = LOGOUT_NEWS_STATE;\n}\n\nexport type All = GetNews | GetNewsSuccess | GetNewsError |\n                  GetMyNews | GetMyNewsSuccess | GetMyNewsError |\n                  DeleteNews | DeleteNewsSuccess | DeleteNewsError |\n                  DestroyNews | DestroyNewsSuccess | DestroyNewsError |\n                  UpdateNewsLoaded | UpdateMyNewsLoaded | UpdateTrashNewsLoaded |\n                  LogoutNewsState;\n","import { News } from './../models/news';\nimport { Action, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as NewsActions from './news.actions';\nimport { NewsState } from '../../store/app.state';\n\n\n\n\n\nexport const initialState: NewsState = {\n    myNews: [],\n    myNewsPageState: {currentPage: null, perPage: null, lastPages: null, totalResults: null},\n    trashNews: [],\n    trashNewsPageState: {currentPage: null, perPage: null, lastPages: null, totalResults: null},\n    isLoaded: false,\n    isMyNewsLoaded: false,\n    isTrashLoaded: false,\n    tickers: null,\n  };\n\nexport type Actions = NewsActions.All;\nexport interface ActionWithPayload<T> extends Action {\n  payload: T;\n}\n\nexport function reducer(state = initialState, action: ActionWithPayload<any>): NewsState {\n  console.log(state, action);\n  console.log('News REDUCER Call!')\n\n  switch (action.type) {\n\n    case NewsActions.GET_MY_NEWS: {\n      return {\n        ...state,\n        myNewsPageState: {\n          currentPage: action.payload.currentPage,\n          perPage: action.payload.perPage,\n        },\n        isMyNewsLoaded: false,\n        isLoaded: false\n      };\n    }\n\n    case NewsActions.GET_MY_NEWS_SUCCESS: {\n      return {\n        ...state,\n        myNews: action.payload.data,\n        myNewsPageState: {\n          currentPage: action.payload.current_page,\n          perPage: Number(action.payload.per_page),\n          lastPages: action.payload.last_page,\n          totalResults: action.payload.total,\n        },\n        isMyNewsLoaded: true,\n        isLoaded: true\n      };\n    }\n\n    case NewsActions.GET_TRASH_NEWS: {\n      return {\n        ...state,\n        trashNewsPageState: {\n          currentPage: action.payload.currentPage,\n          perPage: action.payload.perPage,\n        },\n        isTrashLoaded: false,\n        isLoaded: false\n      };\n    }\n\n    case NewsActions.GET_TRASH_NEWS_SUCCESS: {\n      return {\n        ...state,\n        trashNews: action.payload.data,\n        trashNewsPageState: {\n          currentPage: action.payload.current_page,\n          perPage: Number(action.payload.per_page),\n          lastPages: action.payload.last_page,\n          totalResults: action.payload.total,\n        },\n        isTrashLoaded: true,\n        isLoaded: true\n      };\n    }\n\n    case NewsActions.DELETE_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n\n    case NewsActions.DELETE_NEWS_SUCCESS: {\n      return {\n        ...state,\n        myNews: state.myNews.filter( (news) => news.id !== action.payload.id ),\n        trashNews: [\n          ...state.trashNews,\n          ...Object.assign(state.myNews.filter((news) => news.id === action.payload.id), { newsstatus: { status: 'deleted' } })\n        ],\n        isLoaded: true,\n        isMyNewsLoaded: false,\n        isTrashLoaded: false\n      };\n    }\n\n    case NewsActions.RESTORE_NEWS_SUCCESS: {\n      return {\n        ...state,\n        myNews: [\n          ...state.myNews,\n          ...(state.trashNews.filter( (news) => news.id === action.payload.id ))\n        ],\n        trashNews: state.trashNews.filter( (news) => news.id !== action.payload.id ),\n        isLoaded: false,\n        isMyNewsLoaded: false,\n        isTrashLoaded: false\n      };\n    }\n\n    /**\n     * ----------------------------------------------------------------------------------\n     * ---------------------------------------------------------------------> Ticker News\n     * ----------------------------------------------------------------------------------\n     */\n    /**\n     * ---------------------------------------------------------------------> GET TICKERS\n     */\n    case NewsActions.GET_TICKERS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.GET_TICKERS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.GET_TICKERS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------> ADD TICKER NEWS\n     */\n    case NewsActions.ADD_TICKER_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.ADD_TICKER_NEWS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.ADD_TICKER_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------> APPROVE TICKER NEWS\n     */\n    case NewsActions.APPROVE_TICKER_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.APPROVE_TICKER_NEWS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.APPROVE_TICKER_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------> DISAPPROVE TICKER NEWS\n     */\n    case NewsActions.DISAPPROVE_TICKER_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.DISAPPROVE_TICKER_NEWS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.DISAPPROVE_TICKER_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------> DELETE TICKER NEWS\n     */\n    case NewsActions.DELETE_TICKER_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.DELETE_TICKER_NEWS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.DELETE_TICKER_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------> ADD TICKER\n     */\n    case NewsActions.ADD_TICKER: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.ADD_TICKER_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.ADD_TICKER_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n\n\n    // when set to false myNews will be fetched from api\n    case NewsActions.CHANGE_NEWS_LOADED: {\n      return {\n        ...state,\n        isLoaded: action.payload.isLoaded\n      };\n    }\n    case NewsActions.CHANGE_MY_NEWS_LOADED: {\n      return {\n        ...state,\n        isMyNewsLoaded: action.payload.isMyNewsLoaded\n      };\n    }\n    case NewsActions.CHANGE_TRASH_NEWS_LOADED: {\n      return {\n        ...state,\n        isTrashLoaded: action.payload.isTrashNewsLoaded\n      };\n    }\n\n    case NewsActions.DESTROY_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n\n    case NewsActions.DESTROY_NEWS_SUCCESS: {\n      return {\n        ...state,\n        trashNews: state.trashNews.filter( (news) => news.id !== action.payload.id ),\n        isLoaded: true\n      };\n    }\n\n    case NewsActions.LOGOUT_NEWS_STATE: {\n      // return {\n      //   myNews: [],\n      //   myNewsPageState: {currentPage: null, perPage: null, lastPages: null, totalResults: null},\n      //   trashNews: [],\n      //   trashNewsPageState: {currentPage: null, perPage: null, lastPages: null, totalResults: null},\n      //   isLoaded: false,\n      //   isMyNewsLoaded: false,\n      //   isTrashLoaded: false\n      // };\n      return initialState;\n    }\n\n    default: {\n      return state;\n    }\n\n  }\n}\n\nexport const getNewsState = createFeatureSelector<NewsState>('NewsState');\n\nexport const getMyNews = createSelector(\n  getNewsState,\n  (state: NewsState) => state.myNews\n);\n\nexport const getNewsById = (newsBox, id) => createSelector(getNewsState, (allItems) => {\n  if (allItems) {\n    return allItems[newsBox].find(item => {\n      return item.id === id;\n    });\n  } else {\n    return {};\n  }\n});\n\nexport const getMyNewsByStatus = (status) =>\n  createSelector(getNewsState, state => state.myNews.filter(x => x.newsstatus.status === status));\n\n","\nimport {filter} from 'rxjs/operators';\nimport { Directive, OnInit, AfterViewInit, AfterContentChecked } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\n\n@Directive({\n  selector: '[appAccordion]',\n})\nexport class AccordionDirective implements AfterContentChecked {\n\n  protected navlinks: Array<AccordionLinkDirective> = [];\n\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link !== selectedLink) {\n        link.selected = false;\n      }\n    });\n  }\n\n  addLink(link: AccordionLinkDirective): void {\n    this.navlinks.push(link);\n  }\n\n  removeGroup(link: AccordionLinkDirective): void {\n    const index = this.navlinks.indexOf(link);\n    if (index !== -1) {\n      this.navlinks.splice(index, 1);\n    }\n  }\n\n  checkOpenLinks() {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link.group) {\n        const routeUrl = this.router.url;\n        const currentUrl = routeUrl.split('/');\n        if (currentUrl.indexOf( link.group ) > 0) {\n          link.selected = true;\n          this.closeOtherLinks(link);\n        }\n      }\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(e => this.checkOpenLinks());\n  }\n\n  constructor( private router: Router) {\n    setTimeout(() => this.checkOpenLinks());\n  }\n}\n","import { Directive, HostListener, Inject } from '@angular/core';\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\n\n@Directive({\n  selector: '[appAccordionToggle]'\n})\nexport class AccordionAnchorDirective {\n\n  protected navlink: AccordionLinkDirective;\n\n  constructor( @Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\n    this.navlink = navlink;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(e: any) {\n    this.navlink.toggle();\n  }\n}\n","import {\n  Directive, HostBinding, Inject, Input, OnInit, OnDestroy\n} from '@angular/core';\n\nimport { AccordionDirective } from './accordion.directive';\n\n@Directive({\n  selector: '[appAccordionLink]'\n})\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\n\n  @Input() public group: any;\n\n  @HostBinding('class.selected')\n  @Input()\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  set selected(value: boolean) {\n    this._selected = value;\n    if (value) {\n      this.nav.closeOtherLinks(this);\n    }\n  }\n\n  protected _selected: boolean;\n  protected nav: AccordionDirective;\n\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\n    this.nav = nav;\n  }\n\n  ngOnInit(): any {\n    this.nav.addLink(this);\n\n  }\n\n  ngOnDestroy(): any {\n    this.nav.removeGroup(this);\n  }\n\n  toggle(): any {\n    this.selected = !this.selected;\n  }\n}\n","export * from './accordionanchor.directive';\nexport * from './accordionlink.directive';\nexport * from './accordion.directive';\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { TickersNews } from '../../../news/models/news';\n\nimport { Store } from '@ngrx/store';\nimport * as newsActions from '../../../news/store/news.actions';\n\n@Component({\n  selector: 'app-add-ticker-news-dialog',\n  templateUrl: './add-ticker-news-dialog.component.html'\n})\nexport class AddTickerNewsDialogComponent implements OnInit {\n  onAdd = new EventEmitter();\n\n  tickerNews = new TickersNews();\n  @Input() public dhivehiEnabled = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddTickerNewsDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: TickersNews,\n    private store: Store<any>,\n  ) { }\n\n  ngOnInit() {\n    this.tickerNews.language.language_code = 'Dhv';\n    this.tickerNews.ticker_id = this.data.id;\n    this.tickerNews.enabled   = 0; // ticker news are disabled when added\n  }\n\n\n  changeLanguage() {\n    if (this.dhivehiEnabled) {\n      this.tickerNews.language.language_code = 'Dhv';\n    } else {\n      this.tickerNews.language.language_code = 'Eng';\n    }\n  }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n  doAdd(id?: number) {\n    this.closeDialog(true);\n    //this.onAdd.emit(this.tickerNews);\n    this.store.dispatch(new newsActions.AddTickerNews(this.tickerNews));\n    this.onAdd.emit();\n  }\n\n}\n","<!-- <h3 mat-dialog-title>Add News to {{data.name}}</h3> -->\n\n<mat-toolbar color=\"secondary\" class=\"no-shadow\">\n    <mat-toolbar-row>\n        <span fxFlex fxShow=\"false\" fxShow.gt-xs>Add News to {{data.name}}</span>\n        <div fxShow=\"false\" fxShow.gt-xs>\n            <mat-slide-toggle labelPosition=\"after\" color=\"secondary\" [(ngModel)]=\"dhivehiEnabled\" (ngModelChange)=\"changeLanguage()\">{{tickerNews.language.language_code}}</mat-slide-toggle>\n        </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n\n<div mat-dialog-content>\n  <!-- <div fxLayout=\"row\" fxLayoutWrap=\"wrap\"> -->\n      <!-- title column -->\n      <!-- <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n          Add News to {{data.name}}\n      </div> -->\n      <!-- hr column -->\n      <!-- <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n        <mat-divider></mat-divider>\n      </div> -->\n      <!-- column -->\n  <!-- </div> -->\n\n  <div style=\"margin-top:20px;\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Ticker News</mat-label>\n          <textarea matInput mat-autosize matAutosizeMinRows=\"5\" #dhvInput required\n            [appDnrmsThaana]=\"dhivehiEnabled\"\n            [(ngModel)]=\"tickerNews.news\"\n            name=\"dhvInput\"></textarea>\n        </mat-form-field>\n      </div>\n  </div>\n\n  <!-- <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n          <code>{{tickerNews|json}}</code>\n      </div>\n  </div> -->\n\n</div>\n<!-- actions column -->\n<div align=\"end\" mat-dialog-actions align=\"end\">\n  <button mat-button color=\"basic\" (click)=\"closeDialog(true)\">Cancel</button>\n  <button mat-raised-button color=\"primary\" (click)=\"doAdd(data.id)\">Add</button>\n\n  <!-- <button mat-button color=\"basic\" *ngIf=\"data.newsstatus.status != 'published' && data.newsstatus.status != 'deleted'\" routerLink=\"/news/{{data.id}}\" (click)=\"closeDialog(true)\">Edit</button> -->\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html'\n})\nexport class ConfirmDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n}\n","<h1 mat-dialog-title>{{data.title}}</h1>\n<div mat-dialog-content>\n  <p>{{data.message}}</p>\n</div>\n<div mat-dialog-actions align=\"end\">\n  <button mat-button (click)=\"closeDialog(false)\" tabindex=\"2\">No</button>\n  <button mat-button (click)=\"closeDialog(true)\" tabindex=\"-1\">Yes</button>\n</div>\n","import { Component, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {News} from \"../../../news/models/news\";\n\n@Component({\n  selector: 'app-view-news-dialog',\n  templateUrl: './view-news-dialog.component.html'\n})\nexport class ViewNewsDialogComponent {\n  onDelete = new EventEmitter();\n  onUndo = new EventEmitter();\n\n  constructor(\n    public dialogRef: MatDialogRef<ViewNewsDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: News\n  ) { }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n  doDelete(id) {\n    this.closeDialog(false);\n    this.onDelete.emit(id);\n  }\n\n  doUndo(id) {\n    this.closeDialog(false);\n    this.onUndo.emit(id);\n  }\n\n}\n","<h3 mat-dialog-title>{{data.news_name}}</h3>\n<div mat-dialog-content>\n  <div fxLayout=\"column\" fxLayoutWrap=\"wrap\">\n      <!-- title column -->\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" [class.dhv-title]=\"data.language.language_code == 'Dhv'\">\n          {{data.heading}}\n      </div>\n      <!-- hr column -->\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n        <mat-divider></mat-divider>\n      </div>\n      <!-- news body column -->\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n          <div [innerHTML]=\"data.body\" style=\"white-space: pre-wrap\" [class.dhv]=\"data.language.language_code == 'Dhv'\"></div>\n      </div>\n      <!-- hr column -->\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n        <mat-divider></mat-divider>\n      </div>\n      <!-- news bars column -->\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n          <mat-card>\n              <mat-card-content>\n                  <mat-card-title>News Bar(s)</mat-card-title>\n              </mat-card-content>\n              <mat-tab-group>\n                  <mat-tab *ngFor=\"let bar of data.newsbar; let i = index\" label=\"Bar {{i+1}}\">\n                    <mat-card-content>\n                      <p [class]=\"data.language.language_code == 'Dhv' ? 'dhv' : '' \">{{bar.title}}</p>\n                      <p [class]=\"data.language.language_code == 'Dhv' ? 'dhv m-t-20' : '' \">{{bar.detail}}</p>\n                    </mat-card-content>\n                  </mat-tab>\n              </mat-tab-group>\n          </mat-card>\n      </div>\n  </div>\n</div>\n<!-- actions column -->\n<div align=\"end\" mat-dialog-actions align=\"end\">\n  <button mat-button color=\"warn\" *ngIf=\"data.newsstatus.status != 'published'\" (click)=\"doDelete(data.id)\">Delete</button>\n  <button mat-button color=\"basic\" *ngIf=\"data.newsstatus.status != 'published' && data.newsstatus.status != 'deleted'\" routerLink=\"/news/{{data.id}}\" (click)=\"closeDialog(true)\">Edit</button>\n  <button mat-raised-button color=\"primary\" *ngIf=\"data.newsstatus.status === 'deleted'\" (click)=\"doUndo(data.id)\">Restore</button>\n</div>\n","import {\n  Directive,\n  ElementRef,\n  AfterViewInit,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  Renderer2\n  } from '@angular/core';\nimport { NgModel, NgControl } from '@angular/forms';\n\n@Directive({\n  selector: '[appDnrmsThaana]',\n  // providers: [NgModel],\n    host: {\n      '(input)': 'translate($event)',\n  }\n})\n// '[value]': 'appDnrmsThaana',\n// '(ngModelChange)': 'keyupEvent()'\nexport class ThaanaDirective implements AfterViewInit, OnInit {\n\n  @Input() appDnrmsThaana = true;\n  new_text: string;\n  firstChar = true;\n  selStart: number;\n  selEnd: number;\n  model_value: string;\n\n  @Output() ngModelChange = new EventEmitter();\n\n  _transFrom  = 'qwertyuiop[]\\\\asdfghjkl;\\'zxcvbnm,./QWERTYUIOP{}|ASDFGHJKL:\\\"ZXCVBNM<>?()';\n  _transToKbd = {\n    'phonetic': 'ްއެރތޔުިޮޕ][\\\\ަސދފގހޖކލ؛\\'ޒ×ޗވބނމ،./ޤޢޭޜޓޠޫީޯ÷}{|ާށޑﷲޣޙޛޚޅ:\\\"ޡޘޝޥޞޏޟ><؟)(',\n    'phonetic-hh': 'ޤަެރތޔުިޮޕ][\\\\އސދފގހޖކލ؛\\'ޒޝްވބނމ،./ﷲާޭޜޓޠޫީޯޕ}{|ޢށޑޟޣޙޛޚޅ:\\\"ޡޘޗޥޞޏމ><؟)(',\n    'typewriter': 'ޫޮާީޭގރމތހލ[]ިުްަެވއނކފﷲޒޑސޔޅދބށޓޯ×’“/:ޤޜޣޠޙ÷{}<>.،\\\"ޥޢޘޚޡ؛ޖޕޏޗޟޛޝ\\\\ޞ؟)('\n  };\n\n  constructor(\n    private elem: ElementRef,\n    private _model: NgModel,\n    private control: NgControl,\n    private renderer: Renderer2,\n  ) {\n  }\n\n  ngOnInit() {\n    this.selStart = this.elem.nativeElement.selectionStart;\n    this.selEnd   = this.elem.nativeElement.selectionEnd;\n  }\n\n  ngAfterViewInit(): void {\n    this.applyDhivehiStyles(this.appDnrmsThaana);\n  }\n\n applyDhivehiStyles(apply: boolean) {\n   if (apply) {\n    this.elem.nativeElement.style.color = '#2d2b2d';\n    this.elem.nativeElement.style.fontSize = '20px';\n    this.elem.nativeElement.style.textAlign = 'right';\n    this.elem.nativeElement.style.direction = 'rtl';\n    this.elem.nativeElement.style.lineHeight = '38px';\n    this.elem.nativeElement.style.fontFamily = 'MV Faseyha';\n    this.renderer.addClass(this.elem.nativeElement, 'dhv');\n    // this.elem.nativeElement.style.unicodeBidi = 'bidi-override';\n  }else {\n    this.elem.nativeElement.style.color = '#2d2b2d';\n    this.elem.nativeElement.style.fontSize = '16px';\n    this.elem.nativeElement.style.textAlign = 'left';\n    this.elem.nativeElement.style.direction = 'ltr';\n    this.elem.nativeElement.style.unicodeBidi = '';\n    this.elem.nativeElement.style.lineHeight = '28px';\n    this.elem.nativeElement.style.fontFamily = 'Poppins';\n    this.renderer.removeClass(this.elem.nativeElement, 'dhv');\n  }\n }\n\n//  @HostListener('ngModelChange', ['$event'])\n//   onEvent(event) {\n\n//     if (!this.appDnrmsThaana) {\n//       this.applyDhivehiStyles(false);\n//       return;\n//     } else {\n//       this.applyDhivehiStyles(true);\n//     }\n\n//     const nElm = this.elem.nativeElement;\n\n//     const _inputValue = nElm.value; // nElm.value;\n//     let _key = event.key;\n//     let _keyChar = '';\n//     let ctrl: any;\n\n\n//     if (_inputValue.length === 0) {\n//       return true;\n//     } else if (_inputValue.length <= 1) {\n//       // _keyChar = this.elem.nativeElement.value;\n//       _keyChar = _inputValue;\n//     } else {\n//       // _keyChar = this.elem.nativeElement.value.substr(this.elem.nativeElement.selectionStart - 1, 1);\n//       // _keyChar = _inputValue.substr(nElm.selectionStart - 1, 1);\n//       _keyChar = _inputValue.substr(_inputValue.length - 1, 1);\n//     }\n\n//     if (event.which == null) {\n//       // IE:\n//       _key = event.key;\n//     }else if (event.which > 0) {\n//       // Non-IE printable chars:\n//       _key = event.which;\n\n//       // Handle special keys misfire in Opera\n//       if ([45, 46, 35, 36].indexOf(event.key) === 1) {\n//         return true;\n//       }\n//     }else {\n//       // Ignore special keys\n//       return true;\n//     }\n//     // Check for CTRL modifier key\n//     if (event.modifier) {\n//       ctrl = event.modifiers && event.CONTROL_MASK;\n//     }else if (typeof(event.ctrlKey) !== 'undefined') {\n//       ctrl = event.ctrlKey;\n//     }\n//     const selOld: number = nElm.selectionEnd;\n\n//     try {\n//       const transIndex = this._transFrom.indexOf(_keyChar);\n\n//       if (transIndex === -1 || ctrl) {\n//         return true;\n//       }\n\n//       const tChar = this._transToKbd['phonetic'].substr(transIndex, 1);\n\n//       if (this.firstChar) {\n//         // this.new_text  = tChar;\n//         this.firstChar = false;\n\n//         this.new_text = _inputValue.substring(0, nElm.selectionStart - 1)\n//                       + tChar\n//                       + _inputValue.substring(nElm.selectionEnd, _inputValue.length);\n//       } else {\n//         this.new_text = _inputValue.substring(0, nElm.selectionStart - 1)\n//                       + tChar\n//                       + _inputValue.substring(nElm.selectionEnd, _inputValue.length);\n\n//       }\n\n//         this.elem.nativeElement.value = this.new_text;\n//         // this._model.valueAccessor.writeValue(this.new_text);\n//         this.ngModelChange.emit(this.new_text);\n\n//         // console.log(this.new_text);\n//         // console.log(nElm.value);\n//         // this.render.setElementProperty(this.elem.nativeElement, 'value', this.new_text);\n//       }catch (error) {\n//         console.error(error);\n//       }\n//       nElm.setSelectionRange(selOld, selOld);\n//       nElm.focus();\n//   }\n\n// @HostListener('focus', ['$event'])\n//   onFocus(event) {\n\n    // const nElm = this.elem.nativeElement;\n    // const _inputValue = nElm.value;\n\n    // nElm.setSelectionRange(nElm.selectionStart, nElm.selectionStart);\n    // nElm.focus();\n\n    // this.model_value = _inputValue;\n    // this.selStart = nElm.selectionStart;\n    // this.selEnd   = nElm.selectionEnd;\n//  }\n\n\n  translate(event) {\n\n    if (!this.appDnrmsThaana) {\n      this.applyDhivehiStyles(false);\n      return;\n    } else {\n      this.applyDhivehiStyles(true);\n    }\n\n    const nElm = this.elem.nativeElement;\n\n    const _inputValue = nElm.value; // nElm.value;\n    let _key = event.key;\n    let _keyChar = '';\n    let ctrl: any;\n\n    if (_inputValue.length === 0) {\n      return true;\n    } else if (_inputValue.length <= 1) {\n      // _keyChar = this.elem.nativeElement.value;\n      _keyChar = _inputValue;\n    } else {\n      // _keyChar = this.elem.nativeElement.value.substr(this.elem.nativeElement.selectionStart - 1, 1);\n      _keyChar = _inputValue.substr(nElm.selectionStart - 1, 1);\n      // _keyChar = _inputValue.substr(_inputValue.length - 1, 1);\n    }\n\n    if (event.which == null) {\n      // IE:\n      _key = event.key;\n    }else if (event.which > 0) {\n      // Non-IE printable chars:\n      _key = event.which;\n\n      // Handle special keys misfire in Opera\n      if ([45, 46, 35, 36].indexOf(event.key) === 1) {\n        return true;\n      }\n    }else {\n      // Ignore special keys\n      // return true;\n    }\n\n    // Check for CTRL modifier key\n    if (event.modifier) {\n      ctrl = event.modifiers && event.CONTROL_MASK;\n    }else if (typeof(event.ctrlKey) !== 'undefined') {\n      ctrl = event.ctrlKey;\n    }\n\n    const selOld: number = nElm.selectionEnd;\n    this.selEnd = nElm.selectionEnd;\n    this.selStart = nElm.selectionStart;\n\n    try {\n      const transIndex = this._transFrom.indexOf(_keyChar);\n\n      if (transIndex === -1 || ctrl) {\n        return true;\n      }\n\n      const tChar = this._transToKbd['phonetic'].substr(transIndex, 1);\n\n      if (this.firstChar) {\n        // this.new_text  = tChar;\n        this.firstChar = false;\n\n        this.new_text = _inputValue.substring(0, nElm.selectionStart - 1)\n                      + tChar\n                      + _inputValue.substring(nElm.selectionEnd, _inputValue.length);\n      } else {\n        this.new_text = _inputValue.substring(0, nElm.selectionStart - 1)\n                      + tChar\n                      + _inputValue.substring(nElm.selectionEnd, _inputValue.length);\n\n      }\n\n        this.ngModelChange.emit(this.new_text);\n        this._model.valueAccessor.writeValue(this.new_text);\n\n    }catch (error) {\n      console.error(error);\n    }\n\n    this.setCursor();\n  }\n\n\n  setCursor() {\n    // console.log('SELECTION: '+this.selStart+'||||'+this.selEnd)\n    this.elem.nativeElement.focus();\n    this.elem.nativeElement.setSelectionRange(this.selStart, this.selEnd);\n  }\n\n}\n","import { Injectable, OnInit } from '@angular/core';\n\nexport interface BadgeItem {\n  type: string;\n  value: string;\n}\nexport interface Saperator {\n  name: string;\n  type?: string;\n}\nexport interface ChildrenItems {\n  state: string;\n  name: string;\n  type?: string;\n  badge?: BadgeItem[];\n}\n\nexport interface Menu {\n  state: string;\n  name: string;\n  type: string;\n  icon: string;\n  role?: string;\n  badge?: BadgeItem[];\n  saperator?: Saperator[];\n  children?: ChildrenItems[];\n}\n\nconst MENUITEMS = [\n  /*{ state: '',\n    name: 'Personal',\n    type: 'saperator',\n    icon: 'av_timer'\n  }, {\n    state: 'dashboards',\n    name: 'Dashboards',\n    type: 'sub',\n    icon: 'av_timer',\n    children: [\n      {state: 'dashboard1', name: 'Dashboard 1'},\n      {state: 'dashboard2', name: 'Dashboard 2'},\n    ]\n  },\n    {\n    state: 'material',\n    name: 'Material Ui',\n    type: 'sub',\n    icon: 'bubble_chart',\n    badge: [\n      {type: 'red', value: '17'}\n    ],\n    children: [\n      {state: 'button', name: 'Buttons'},\n      {state: 'cards', name: 'Cards'},\n      {state: 'grid', name: 'Grid List'},\n      {state: 'lists', name: 'Lists'},\n      {state: 'menu', name: 'Menu'},\n      {state: 'tabs', name: 'Tabs'},\n      {state: 'stepper', name: 'Stepper'},\n      {state: 'expansion', name: 'Expansion Panel'},\n      {state: 'chips', name: 'Chips'},\n      {state: 'toolbar', name: 'Toolbar'},\n      {state: 'progress-snipper', name: 'Progress snipper'},\n      {state: 'progress', name: 'Progress Bar'},\n      {state: 'dialog', name: 'Dialog'},\n      {state: 'tooltip', name: 'Tooltip'},\n      {state: 'snackbar', name: 'Snackbar'},\n      {state: 'slider', name: 'Slider'},\n      {state: 'slide-toggle', name: 'Slide Toggle'}\n    ]\n  },\n  {\n    state: 'apps',\n    name: 'Apps',\n    type: 'sub',\n    icon: 'apps',\n    children: [\n      {state: 'calendar', name: 'Calendar'},\n      {state: 'messages', name: 'Mail box'},\n      {state: 'chat', name: 'Chat'},\n      {state: 'taskboard', name: 'Taskboard'}\n    ]\n  },\n    {\n    state: '',\n    name: 'Forms, Table & Widgets',\n    type: 'saperator',\n    icon: 'av_timer'\n  }, {\n    state: 'forms',\n    name: 'Forms',\n    type: 'sub',\n    icon: 'insert_drive_file',\n\n    children: [\n\n      {state: 'form-layout', name: 'Form-Layout'},\n      {state: 'autocomplete', name: 'Autocomplete'},\n      {state: 'checkbox', name: 'Checkbox'},\n      {state: 'datepicker', name: 'Datepicker'},\n      {state: 'editor', name: 'Editor'},\n      {state: 'form-validation', name: 'Form Validation'},\n      {state: 'file-upload', name: 'File Upload'},\n      {state: 'wizard', name: 'Wizard'}\n\n    ]\n  }, {\n    state: 'tables',\n    name: 'Tables',\n    type: 'sub',\n    icon: 'web',\n\n    children: [\n\n      {state: 'basictable', name: 'Basic Table'},\n      {state: 'filterable', name: 'Filterable Table'},\n      {state: 'pagination', name: 'Pagination Table'},\n      {state: 'sortable', name: 'Sortable Table'},\n      {state: 'mix', name: 'Mix Table'},\n      {state: 'smarttable', name: 'Smart Table'}\n\n    ]\n  }, {\n    state: 'datatables',\n    name: 'Data Tables',\n    type: 'sub',\n    icon: 'border_all',\n\n    children: [\n      {state: 'basicdatatable', name: 'Basic Data Table'},\n      {state: 'filter', name: 'Filterable'},\n      {state: 'editing', name: 'Editing'},\n    ]\n  }, {\n    state: 'widgets',\n    name: 'Widgets',\n    type: 'link',\n    icon: 'widgets'\n  }, {\n    state: '',\n    name: 'Extra Component',\n    type: 'saperator',\n    icon: 'av_timer'\n  },\n    {\n    state: 'authentication',\n    name: 'Authentication',\n    type: 'sub',\n    icon: 'perm_contact_calendar',\n\n    children: [\n      {state: 'login', name: 'Login'},\n      {state: 'register', name: 'Register'},\n      {state: 'forgot', name: 'Forgot'},\n      {state: 'lockscreen', name: 'Lockscreen'},\n      {state: '404', name: 'Error'}\n\n    ]\n  }, {\n    state: 'charts',\n    name: 'Charts',\n    type: 'sub',\n    icon: 'insert_chart',\n\n    children: [\n      {state: 'chartjs', name: 'Chart Js'},\n      {state: 'chartistjs', name: 'Chartist Js'},\n      {state: 'ngxchart', name: 'Ngx Charts'}\n\n    ]\n  }, {\n    state: 'pages',\n    name: 'Pages',\n    type: 'sub',\n    icon: 'content_copy',\n\n    children: [\n      {state: 'icons', name: 'Material Icons'},\n      {state: 'timeline', name: 'Timeline'},\n      {state: 'invoice', name: 'Invoice'},\n      {state: 'pricing', name: 'Pricing'},\n      {state: 'helper', name: 'Helper Classes'}\n    ]\n  }*/\n\n  {\n    state: 'admin',\n    name: 'App Management',\n    role: 'admin',\n    type: 'sub',\n    icon: 'vpn_key',\n    children: [\n      { state: 'admin-dashboard', name: 'Dashboard', type: 'link' },\n      { state: 'user-console', name: 'User Console', type: 'link' },\n\n      {\n        state: 'news-settings',\n        name: 'News Settings',\n        type: 'subchild',\n        subchildren: [\n          {\n            state: 'list',\n            name: 'News Lists',\n            type: 'link'\n          },\n          {\n            state: 'breakers',\n            name: 'News Breakers',\n            type: 'link'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    state: 'user',\n    name: 'Dashboard',\n    role: 'user',\n    type: 'sub',\n    icon: 'av_timer',\n    children: [\n      {state: 'profile', name: 'User Dashboard', type: 'link'},\n      {state: 'chat', name: 'Message Board', type: 'link'}\n    ]\n  },\n  {\n    state: 'editor',\n    name: 'News Editor',\n    role: 'news-editor',\n    type: 'sub',\n    icon: 'featured_play_list',\n    children: [\n      {state: 'dashboard', name: 'Dashboard', type: 'link'},\n      {state: 'review', name: 'Review News', type: 'link'},\n      {state: 'list', name: 'News List', type: 'link'},\n    ]\n  },\n  {\n    state: 'news',\n    name: 'News',\n    role: 'journalist',\n    type: 'sub',\n    icon: 'view_headline',\n    children: [\n      {state: 'dashboard', name: 'News Dashboard', type: 'link'},\n      {state: 'write', name: 'Write News', type: 'link'},\n      {\n        state: 'my',\n        name: 'My News', type: 'link'\n        // badge: [\n        //   {type: 'primary', value: '17'}\n        // ],\n      },\n      {state: 'ticker', name: 'Ticker News', type: 'link'},\n      {\n        state: 'trash',\n        name: 'Trash', type: 'link'\n        // badge: [\n        //   {type: 'red', value: '17'}\n        // ],\n      }\n    ]\n  },\n  {\n    state: 'control',\n    name: 'Controller',\n    role: 'control',\n    type: 'sub',\n    icon: 'traffic',\n    children: [\n      {state: 'news-cg', name: 'News CG', type: 'link'},\n      {state: 'ticker', name: 'Tickers', type: 'link'},\n      /*{state: 'ticker', name: 'Tickers', type: 'link'},\n      {state: 'cg-text', name: 'CG Text', type: 'link'},*/\n      {state: 'on-air', name: 'On Air', type: 'link'},\n      // {state: 'sms', name: 'SMS', type: 'link'},\n    ]\n  }\n\n];\n\n@Injectable()\n\nexport class MenuItems {\n  trash = 2;\n\n  OnInit() {\n    // get user array\n  }\n\n  getMenuitem(): Menu[] {\n    return MENUITEMS;\n  }\n\n}\n","export class User {\n  id?: string;\n  email?: string;\n  password?: string;\n  token?: Token;\n  name?: string;\n  roles_a?: any;\n  roles?: Role[];\n  profile?: Profile;\n\n  constructor() {\n    this.id = null;\n  }\n}\n\nexport class Token {\n  token?: string;\n}\n\nexport class Role {\n  role: string;\n  display_name: string;\n  permissions: string[];\n}\n\nexport class Profile{\n  id?: string;\n  user_id?: string;\n  dob?: string;\n  gender?: string;\n  fb?: string;\n  insta?: string;\n  twitter?: string;\n  email?: string;\n  phone?: string;\n  profilepic?: string;\n  coverimage?: string;\n\n  constructor(){\n    this.user_id    = null;\n    this.dob        = null;\n    this.gender     = null;\n    this.fb         = null;\n    this.insta      = null;\n    this.twitter    = null;\n    this.email      = null;\n    this.phone      = null;\n    this.profilepic = '';\n    this.coverimage = '';\n\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable, Subscription ,  Subject } from 'rxjs';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from './auth.service';\nimport { RouteRoleService } from './route-role.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, OnDestroy {\n  loggedInSub: Subscription;\n  destroySubject$: Subject<void> = new Subject();\n\n  constructor(\n      private auth: AuthService,\n      private router: Router,\n      private role: RouteRoleService\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n    this.loggedInSub = this.auth.loggedIn$.pipe(takeUntil(this.destroySubject$)).subscribe(\n        loggedIn => {\n          if (!loggedIn ) {\n            this.router.navigate(['/authentication/login']);\n          }\n          this.role.initialize();\n        }\n    );\n\n    return true;\n  }\n\n  ngOnDestroy() {\n    this.destroySubject$.next();\n  }\n}\n","import { User } from '../models/user';\nimport { Injectable } from '@angular/core';\nimport { SessionService } from './session.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\n/*import { NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR } from '@angular/core/src/view/provider';*/\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private API_URL = environment.apiUrl;\n\n  // Create a stream of logged in status to communicate throughout app\n  loggedIn: boolean = false;\n  loggedIn$ = new BehaviorSubject<boolean>(this.loggedIn);\n\n  constructor(\n      private session: SessionService,\n      private http: HttpClient\n  ) {\n    if (this.session.getSession('dnms_token')) {\n      this.loggedIn$.next(true);\n      this.loggedIn = true;\n    }\n  }\n\n  public isSignedIn() {\n    return !!this.session.getSession('dnms_token');\n  }\n\n  public doSignOut() {\n    console.log('sign out');\n    this.loggedIn$.next(false);\n    this.loggedIn = false;\n    this.session.destroy();\n  }\n\n  public signIn(email: string, password: string) {\n    return this.http.post<any>(this.API_URL + 'authenticate/', { email, password });\n  }\n\n  // public doSignIn(accessToken: string, name: string, email: string, roles: string, roles_all: any[]) {\n  public doSignIn(loginUser: User) {\n    if ((!loginUser.token) || (!loginUser.name)) {\n      return;\n    }\n\n    this.loggedIn$.next(true);\n    this.loggedIn = true;\n\n    this.session.saveSession(loginUser);\n  }\n\n  public refreshToken(token) {\n    /**\n     *    token refresh is not working from api\n     *     //TODO need to fix token refreshing from API\n      */\n    // const headers = new HttpHeaders({'Authorization': 'Bearer ' + token});\n\n    /*const ttoken = '{token: \\'' + token + '\\'}';\n    const post_token = JSON.parse(JSON.stringify(ttoken));\n    console.log(post_token);*/\n\n    return this.http.post<any>(this.API_URL + 'refresh/?token=' + token , null);\n  }\n\n  public getUserSettings() {\n    return this.session.getUserSetting;\n  }\n\n}\n","import { Injectable } from '@angular/core';\ndeclare var deepstream:any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DsService {\n  private ds;\n  public dsInstance;\n\n  constructor() {\n     this.ds = this.dsInstance = deepstream('192.168.1.70:6020');\n  }\n\n  login (credentials?, loginHandler?) {\n    // {username: 'chris', password:'password'}\n    this.ds.login(credentials, loginHandler);\n  }\n\n  getRecord(name) {\n    return this.ds.record.getRecord(name);\n  }\n\n  getList(name){\n    return this.ds.record.getList(name);\n  }\n}\n","import { Observable ,  BehaviorSubject, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nimport { SessionService } from './session.service';\nimport { AuthService } from './auth.service';\n\nimport { map, filter, tap ,  catchError, finalize } from 'rxjs/operators';\n\n\n\n\n\nimport * as userReducer from '../../authentication/store/user.reducer';\nimport * as userActions from '../../authentication/store/user.actions';\nimport { UserState } from '../../store/app.state';\nimport { Store } from '@ngrx/store';\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n  isRefreshingToken = false;\n  tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n\n    constructor(\n      private sessonService: SessionService,\n      private authService: AuthService,\n      public snackBar: MatSnackBar,\n      private store: Store<any>,\n    ) {}\n\n    addToken(req: HttpRequest<any>, token: string): HttpRequest<any> {\n      return req.clone({ setHeaders: { Authorization: 'Bearer ' + token }});\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n      return next.handle(this.addToken(request, this.sessonService.getSession('dnms_token')))\n      .pipe(\n        tap(event => {\n          if (event instanceof HttpResponse) {\n            // console.log(`Request for ${request.urlWithParams} with method ${request.method}`);\n            if (event.status === 200) { // OK\n              // this.snackBar.open(event.statusText, 'dismiss', {duration: 1000});\n            }else if (event.status === 201) { // created\n              this.snackBar.open(event.statusText, 'dismiss', {duration: 1000});\n            }else if (event.status === 202) { // accepted\n              this.snackBar.open(event.statusText, 'dismiss', {duration: 1000});\n            }else if (event.status === 204) { // no content (delete)\n              this.snackBar.open(event.statusText, 'dismiss', {duration: 1000});\n            }\n          }\n        }, error => {\n          // console.error('NICE ERROR', error);\n          switch (error.status) {\n            case 400:\n                return this.handle400Error(error);\n            case 401:\n              return this.handle401Error(request, next);\n            case 403:\n              return this.snackBar.open(error.error, 'dismiss');\n            case 500:\n              return this.snackBar.open('Server Error!', 'dismiss');\n          }\n        })\n      );\n      /*try {\n\n        return next.handle(this.addToken(request, this.sessonService.getSession('dnms_token')));\n\n      } catch (error) {\n        if (error instanceof HttpErrorResponse) {\n\n          switch ((<HttpErrorResponse>error).status) {\n              case 400:\n                  // return this.handle400Error(error);\n              case 401:\n                  this.handle401Error(request, next);\n          }\n        } else {\n            return Observable.throw(error);\n        }\n      }*/\n    }\n\n\n\n    handle401Error(req: HttpRequest<any>, next: HttpHandler) {\n\n    // logged_inthis.store.dispatch(new User401());\n      console.log('signing out from interceptor');\n      this.store.dispatch(new userActions.User401());\n      // return this.authService.doSignOut();\n\n      /*if (!this.isRefreshingToken) {\n        console.log('handling 401');\n          this.isRefreshingToken = true;\n\n          // Reset here so that the following requests wait until the token\n          // comes back from the refreshToken call.\n          this.tokenSubject.next(null);\n\n          return this.authService.refreshToken(this.sessonService.getSession('dnms_token'))\n              .map((newToken: string) => {\n                  if (newToken) {\n                      this.tokenSubject.next(newToken);\n                      console.log(newToken);\n                      return next.handle(this.addToken(req, newToken));\n                  }\n\n                  // If we don't get a new token, we are in trouble so logout.\n                  return this.authService.doSignOut();\n              })\n              .subscribe(error => {\n                  // If there is an exception calling 'refreshToken', bad news so logout.\n                  return this.authService.doSignOut();\n              })\n              .finally(() => {\n                  this.isRefreshingToken = false;\n              });\n      } else {\n          return this.tokenSubject\n              .filter(token => token != null)\n              // .take(1)\n              .map(token => {\n                  return next.handle(this.addToken(req, token));\n              });\n      }*/\n  }\n\n    handle400Error(error) {\n      this.store.dispatch(new userActions.User401());\n        // if (error && error.status === 400 && error.error && error.error.error === 'invalid_grant') {\n        //     // If we get a 400 and the error message is 'invalid_grant', the token is no longer valid so logout.\n        //     return this.authService.doSignOut();\n        // }\n\n        // return Observable.throw(error);\n    }\n}\n/*\nexport class HTTPStatus {\n  private requestInFlight$: BehaviorSubject<boolean>;\n  constructor() {\n    this.requestInFlight$ = new BehaviorSubject(false);\n  }\n\n  setHttpStatus(inFlight: boolean) {\n    this.requestInFlight$.next(inFlight);\n  }\n\n  getHttpStatus(): Observable<boolean> {\n    return this.requestInFlight$.asObservable();\n  }\n}\n\n@Injectable()\nexport class HTTPListener implements HttpInterceptor {\n  constructor(private status: HTTPStatus) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      map(event => {\n        console.log(event)\n        return event;\n      }),\n      catchError(error => {\n        return Observable.throw(error);\n      }),\n      finalize(() => {\n        this.status.setHttpStatus(false);\n      })\n    );\n  }\n}\n*/\n","import { Store } from '@ngrx/store';\nimport { Router, ActivatedRoute, RoutesRecognized, NavigationEnd } from '@angular/router';\nimport { SessionService } from './session.service';\nimport { Injectable, OnInit, OnDestroy } from '@angular/core';\n\nimport * as userActions from '../../authentication/store/user.actions';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteRoleService implements OnInit, OnDestroy {\n\n  routeObserver$: any;\n  roleSubscription$: any;\n\n  destroySubject$: Subject<void> = new Subject();\n\n  constructor(\n    private session: SessionService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private store: Store<any>\n  ) { }\n\n  ngOnInit() {\n  }\n\n  initialize() {\n    this.routeObserver$ = this.router.events\n      .pipe(takeUntil(this.destroySubject$))\n      .subscribe(event => {\n        if (event instanceof RoutesRecognized) {\n          this.guardRoute(event);\n        } /*else if (event instanceof NavigationEnd) {\n          this.checkRole(event);\n        }*/\n      });\n  }\n\n  private guardRoute(event: RoutesRecognized): void {\n    if (this.isPublic(event)) {\n      return;\n    }\n\n    if (!this.callCheckToken(event)) {\n      return;\n    }\n  }\n\n  private callCheckToken(event: RoutesRecognized) {\n    // const token_date = new Date(this.session.getSession('expiry'));\n    // const now_date   = new Date().getTime();\n\n    // if (token_date.getTime() < now_date) {\n    //   this.store.dispatch(new userActions.UserLogout());\n    //   //this.routeObserver$.unsubscribe();\n    //   return false;\n    // }\n\n    return true;\n  }\n\n  private isPublic(event: RoutesRecognized) {\n    return event.state.root.firstChild.data.isPublic;\n  }\n\n  private checkRole(event) {\n    let roles_  = false;\n\n    const sRoutes = event.url.split('/');\n    this.roleSubscription$ = this.store.select(RootStore => RootStore.UserState.user.roles)\n      .pipe(takeUntil(this.destroySubject$))\n      .subscribe(roles => {\n\n        if (sRoutes.includes('authentication') || sRoutes.includes('dashboard')) {\n          roles_ = true;\n        }\n\n        if (roles) {\n          Object.keys(roles).forEach(function(key) {\n            Object.keys(roles[key].permissions).forEach(function(role_key) {\n              // console.log(sRoutes);\n              // console.log('PERM= ' + roles[key].permissions[role_key].permission);\n              if (sRoutes.includes(roles[key].permissions[role_key].permission)) {\n                roles_ = true;\n              }\n            });\n        });\n        }\n      });\n\n    // user have permission to this route\n    if (roles_) {\n      return;\n    }\n    // the user does not have the required permission\n    if (!roles_) {\n      this.router.navigate(['/authentication/401']);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroySubject$.next();\n    // this.routeObserver$.unsubscribe();\n    // this.roleSubscription$.unsubscribe();\n  }\n\n}\n","import { BehaviorSubject ,  Observable ,  SubscriptionLike as ISubscription ,  Subject } from 'rxjs';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { User, Role } from '../models/user';\nimport { Store } from '@ngrx/store';\nimport { UserState } from '../../store/app.state';\n\nimport * as userActions from '../../authentication/store/user.actions';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService implements OnDestroy {\n\n  private sessionExpiryTime: number = 1; //token expiry time local\n  private checkSessionExpiry: boolean = false;\n\n  public accessToken: string;\n  public id = '';\n  public name = 'Guest';\n  public email = '';\n  public roles: string;\n  public roles_all: string;\n  private subscription: ISubscription;\n\n  destroySubject$: Subject<void> = new Subject();\n\n  constructor(\n    private store: Store<any>,\n    private http: HttpClient\n  ) {}\n\n  public destroy(): void {\n    sessionStorage.clear();\n\n    this.accessToken = null;\n    this.name = 'Guest';\n    this.email = '';\n    this.roles = '';\n    this.roles_all = '';\n  }\n\n  public saveSession(loginUser: User) {\n    // set token expiry time\n    const date = new Date();\n    date.setFullYear(date.getFullYear() + this.sessionExpiryTime);\n\n    sessionStorage.setItem('id',         loginUser.id);\n    sessionStorage.setItem('name',       loginUser.name);\n    sessionStorage.setItem('email',      loginUser.email);\n    if(loginUser.token){\n      sessionStorage.setItem('dnms_token', loginUser.token.token);\n    }\n    sessionStorage.setItem('roles',      JSON.stringify(loginUser.roles));\n    sessionStorage.setItem('expiry',     date.toJSON());\n    //sessionStorage.setItem('roles_all', JSON.stringify(loginUser.roles_a));\n\n    //profile\n    sessionStorage.setItem('profile',JSON.stringify(loginUser.profile));\n\n    this.id          = this.getSession('id');\n    this.name        = this.getSession('name');\n    this.email       = this.getSession('email');\n    this.accessToken = this.getSession('dnms_token.token');\n    this.roles       = this.getSession('roles');\n    this.roles_all   = this.getSession('roles_all');\n\n    return true;\n  }\n\n  /**\n   * pass user data as an observable (from session storage)\n   * called when page is refreshed for user state to update\n   */\n  public getUserSetting() {\n    if (!this.getSession('dnms_token')) {\n      return this.getUserLogoutSetting();\n      // return false;\n    }\n\n    return new Observable(observer => {\n      let profile = JSON.parse(this.getSession('profile'));\n      console.log(profile)\n      const user = {\n        id:      this.getSession('id'),\n        email:   this.getSession('email'),\n        name:    this.getSession('name'),\n        token:   { token: this.getSession('dnms_token') },\n        roles:   JSON.parse(this.getSession('roles')),\n        roles_a: JSON.parse(this.getSession('roles_all')),\n        profile: {\n          'id':          profile.id,\n          'user_id':     profile.user_id,\n          'dob':         profile.dob,\n          'gender':      profile.gender,\n          'insta':       profile.insta,\n          'fb':          profile.fb,\n          'twitter':     profile.twitter,\n          'email':       profile.email,\n          'phone':       profile.phone,\n          'profilepic':  profile.profilepic,\n          'coverimage':  profile.coverimage,\n        }\n      };\n        observer.next(user);\n        observer.complete();\n    });\n\n  }\n\n  /**\n   *  update user data from server\n   *  called when user updates their profile\n   */\n  public updateUserSettings() {\n    return this.http.get<any>(environment.apiUrl + 'userdata/all');\n  }\n\n  /**\n   * Check Expiry\n   * experiment to check if users token has expired\n   *\n   * year, month, day\n   * hour,min, sec\n   */\n  checkExpiry() {\n    if(this.checkSessionExpiry) {\n      let nowDate = new Date();\n      //nowDate.setMinutes(nowDate.getMinutes() + this.sessionExpiryTime);\n\n      let sessionDate = new Date(sessionStorage.getItem('expiry'));\n      // console.log(nowDate)\n      // console.log(new Date(sessionDate))\n\n      if(nowDate.getFullYear() > sessionDate.getFullYear()) {\n        console.log('this!!!!');\n        this.CallLogoutState();\n        return false;\n      }else if(nowDate.getMonth() > sessionDate.getMonth()) {\n        console.log('this!!!!');\n        this.CallLogoutState();\n        return false;\n      }else if(nowDate.getDay() > sessionDate.getDay()) {\n        console.log('this!!!!');\n        this.CallLogoutState();\n        return false;\n      }\n\n      let nowTime     = nowDate.getHours()+':'+nowDate.getMinutes()+':'+nowDate.getSeconds();\n      let sessionTime = sessionDate.getHours()+':'+sessionDate.getMinutes()+':'+sessionDate.getSeconds();\n      //if(nowTime > sessionTime) {\n      var regExp = /(\\d{1,2})\\:(\\d{1,2})\\:(\\d{1,2})/;\n      if (parseInt(nowTime.replace(regExp, \"$1$2$3\")) > parseInt(sessionTime .replace(regExp, \"$1$2$3\"))){\n        console.log('this!!!!', nowTime, sessionTime );\n        this.CallLogoutState();\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  CallLogoutState(){\n    this.destroySubject$.next();\n    //this.subscription.unsubscribe();\n    this.store.dispatch(new userActions.UserLogout());\n  }\n\n  /**\n   * pass null user data as an observable\n   * called when user logs out\n   */\n  public getUserLogoutSetting() {\n\n    return new Observable(observer => {\n      const user = {\n        email: null,\n        name: null,\n        token: { token: null },\n        roles: null,\n        roles_a: null\n      };\n      observer.next(user); // This method same as resolve() method from Angular 1\n      // console.log('am done');\n      observer.complete(); // to show we are done with our processing\n      // observer.error(new Error(\"error message\"));\n    });\n\n  }\n\n  //get a key from session storage\n  public getSession(key: string) {\n    return sessionStorage.getItem(key);\n  }\n\n  /**\n   *  Check if the logged in user have a given role or permission\n   */\n  public checkRole(role: string) {\n    let found = false;\n\n    if (this.checkExpiry()) {\n\n      this.store.select(state => state.UserState.user.roles)\n      .pipe(takeUntil(this.destroySubject$))\n      .subscribe(list => {\n        if(list){\n        //if(Object.keys(list).length > 0){\n            list.forEach((user_role: Role) => {\n              if (user_role.role === role) {\n                found = true;\n              }\n            });\n        }\n      });\n\n    }else{\n      //this.subscription.unsubscribe();\n    }\n\n    return found;\n  }\n\n  ngOnDestroy() {\n    //this.subscription.unsubscribe();\n    this.destroySubject$.next();\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { MenuItems } from './menu-items/menu-items';\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\nimport { ThaanaDirective } from './directives/thaana.directive';\n\n\n@NgModule({\n  declarations: [\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective,\n    ThaanaDirective\n  ],\n  exports: [\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective,\n    ThaanaDirective\n   ],\n  providers: [ MenuItems ]\n})\nexport class SharedModule { }\n","import {Component, Input, OnDestroy, Inject, ViewEncapsulation} from '@angular/core';\nimport {Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError} from '@angular/router';\nimport {DOCUMENT} from '@angular/common';\n\n@Component({\n    selector: 'app-spinner',\n    template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\n        <div class=\"spinner\">\n          <div class=\"double-bounce1\"></div>\n          <div class=\"double-bounce2\"></div>\n        </div>\n    </div>`,\n    encapsulation: ViewEncapsulation.None\n})\nexport class SpinnerComponent implements OnDestroy {\n    public isSpinnerVisible = true;\n\n    @Input() public backgroundColor = 'rgba(0, 115, 170, 0.69)';\n\n    constructor(private router: Router, @Inject(DOCUMENT) private document: Document) {\n      this.router.events.subscribe(event => {\n          if (event instanceof NavigationStart) {\n              this.isSpinnerVisible = true;\n          } else if ( event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\n              this.isSpinnerVisible = false;\n          }\n      }, () => {\n          this.isSpinnerVisible = false;\n      });\n    }\n\n    ngOnDestroy(): void {\n        this.isSpinnerVisible = false;\n    }\n}\n","import { ActionReducerMap, ActionReducer, MetaReducer } from '@ngrx/store';\nimport { AppState } from './app.state';\nimport { environment } from '../../environments/environment';\n\nimport * as userAction from '../authentication/store/user.actions';\n\nimport * as userReducer from '../authentication/store/user.reducer';\nimport * as newsReducer from '../news/store/news.reducer';\nimport * as reviewNewsReducer from '../editor/store/news-editor.reducer';\n\nexport const reducers: ActionReducerMap<AppState> = {\n  UserState: userReducer.reducer,\n  NewsState: newsReducer.reducer,\n  ReviewNews: reviewNewsReducer.reducer,\n};\n\nexport function logger(reducer: ActionReducer<AppState>): ActionReducer<AppState> {\n  return function(state: AppState, action: any): AppState {\n    console.log('state', state);\n    console.log('action', action);\n\n\n    // if (action.type === userAction.USER_LOGOUT_SUCCESS) {\n    //   console.log('x-x ROOT REDUCER LOGOUT x-x');\n    //   // state = { UserState: { user: { email: null, name: null, token: {token: null}, roles: null, roles_a: null } }, NewsState: {myNews: null, myNewsPageState: { currentPage: null, perPage: null, lastPages: null, totalResults: null }, trashNewsPageState: null, trashNews: null} };\n    //   state = undefined;\n    //   this.router.navigate(['/authentication/login']);\n    // }\n\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<AppState>[] = !environment.production\n  ? [logger]\n  : [];\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n\n  /*apiUrl: 'http://192.168.18.18/nrs/api/',\n  storageUrl: 'http://192.168.18.18/nrs/storage/',*/\n\n  apiUrl: 'http://203.104.25.202:84/api/',\n  storageUrl: 'http://203.104.25.202:84/nrs/storage/',\n  pusher: {\n    key: '5289e5ee971f625d85fa',\n    cluster: 'ap2',\n  },\n\n  firebaseConfig: {\n    apiKey: \"AIzaSyAIGm6zOh3hIyxjPgnMk49I3GKGOemtJz8\",\n    authDomain: \"dnrs-rtv.firebaseapp.com\",\n    projectId: \"dnrs-rtv\",\n    storageBucket: \"dnrs-rtv.appspot.com\",\n    messagingSenderId: \"1020243579171\",\n    appId: \"1:1020243579171:web:5c846ab2199fbc4dcf7c96\",\n    measurementId: \"G-DCPJM2FPR0\"\n  }\n};\n","import '@angular/compiler';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///"}