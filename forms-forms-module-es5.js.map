{"version":3,"sources":["webpack:///node_modules/ng2-file-upload/__ivy_ngcc__/fesm2015/ng2-file-upload.js","webpack:///src/app/forms/file-upload/upload.component.ts","webpack:///src/app/forms/file-upload/upload.component.html","webpack:///src/app/forms/checkbox/checkbox.component.ts","webpack:///src/app/forms/checkbox/checkbox.component.html","webpack:///src/app/forms/forms.module.ts","webpack:///src/app/forms/forms.routing.ts","webpack:///src/app/forms/form-layouts/form-layout.component.ts","webpack:///src/app/forms/form-layouts/form-layout.component.html","webpack:///src/app/forms/editor/editor.component.ts","webpack:///src/app/forms/editor/editor.component.html","webpack:///src/app/forms/autocomplete/autocomplete.component.ts","webpack:///src/app/forms/autocomplete/autocomplete.component.html","webpack:///src/app/forms/wizard/wizard.component.ts","webpack:///src/app/forms/wizard/wizard.component.html","webpack:///src/app/forms/form-validation/form-validation.component.ts","webpack:///src/app/forms/form-validation/form-validation.component.html","webpack:///src/app/forms/datepicker/datepicker.component.ts","webpack:///src/app/forms/datepicker/datepicker.component.html"],"names":["isElement","node","nodeName","prop","attr","find","FileLikeObject","fileOrInput","rawFile","isInput","fakePathOrObject","value","postfix","method","path","lastModifiedDate","size","type","slice","lastIndexOf","toLowerCase","name","object","FileItem","uploader","some","options","url","headers","withCredentials","formData","isReady","isUploading","isUploaded","isSuccess","isCancel","isError","progress","index","file","_file","alias","itemAlias","uploadItem","e","_onCompleteItem","_onErrorItem","cancelItem","removeFromQueue","form","response","status","onBeforeUpload","onBuildForm","onProgress","onSuccess","onError","onCancel","onComplete","removeAfterUpload","remove","_nextIndex","FileType","mimeClass","mime_psd","indexOf","match","mime_compress","mime_doc","mime_xsl","mime_ppt","fileTypeDetection","inputFilename","types","chunks","split","length","extension","undefined","isFile","File","Headers","FileUploaderOptions","FileUploader","queue","autoUpload","isHTML5","filters","disableMultipart","formatDataFunction","item","formatDataFunctionIsAsync","setOptions","Object","assign","authToken","authTokenHeader","unshift","fn","_queueLimitFilter","maxFileSize","_fileSizeFilter","allowedFileType","_fileTypeFilter","allowedMimeType","_mimeTypeFilter","i","files","list","push","arrayOfFilters","_getFilters","count","addedFileItems","map","temp","_isValidFile","fileItem","_onAfterAddingFile","filter","_failFilterIndex","_onWhenAddingFileFailed","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","getIndexOfItem","cancel","splice","transport","_prepareToUploading","_xhr","_form","abort","items","getNotUploadedItems","upload","sort","item1","item2","fileItems","getMimeClass","_onError","onErrorItem","_onComplete","onCompleteItem","nextItem","getReadyItems","onCompleteAll","parsedHeaders","that","xhr","XMLHttpRequest","sendable","_onBeforeUploadItem","TypeError","FormData","_onBuildItemForm","appendFile","append","parametersBeforeFiles","additionalParameter","keys","forEach","key","paramVal","replace","onprogress","event","Math","round","lengthComputable","loaded","total","_onProgressItem","onload","_parseHeaders","getAllResponseHeaders","_transformResponse","gist","_isSuccessCode","onerror","onabort","_onCancelItem","open","header","setRequestHeader","onreadystatechange","readyState","DONE","emit","responseText","then","result","send","JSON","stringify","notUploaded","uploaded","ratio","current","Array","isArray","names","queueLimit","every","call","parsed","val","line","trim","onWhenAddingFileFailed","onAfterAddingFile","onAfterAddingAll","_onBeforeUpload","onBeforeUploadItem","_onBuildForm","onBuildItemForm","_onProgress","onProgressItem","onProgressAll","_onSuccess","onSuccessItem","_onCancel","onCancelItem","FileSelectDirective","element","onFileSelected","nativeElement","attributes","multiple","getOptions","getFilters","addToQueue","isEmptyAfterSelection","ɵfac","FileSelectDirective_Factory","t","ɵdir","selectors","hostBindings","FileSelectDirective_HostBindings","rf","ctx","FileSelectDirective_change_HostBindingHandler","onChange","inputs","outputs","ctorParameters","propDecorators","args","selector","FileDropDirective","fileOver","onFileDrop","transfer","_getTransfer","_preventAndStop","_haveFiles","dropEffect","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","contains","FileDropDirective_Factory","FileDropDirective_HostBindings","FileDropDirective_drop_HostBindingHandler","$event","onDrop","FileDropDirective_dragover_HostBindingHandler","onDragOver","FileDropDirective_dragleave_HostBindingHandler","onDragLeave","FileUploadModule","ɵmod","ɵinj","factory","FileUploadModule_Factory","imports","ngJitMode","declarations","exports","URL","UploadComponent","hasBaseDropZoneOver","hasAnotherDropZoneOver","fileOverBase","fileOverAnother","templateUrl","changeDetection","OnPush","styleUrls","CheckboxComponent","checked","indeterminate","align","disabled","FormModule","forChild","FormRoutes","children","component","FormLayoutComponent","fb","email","required","hide","group","hideRequired","floatLabel","hasError","EditorComponent","subtitle","State","population","flag","AutocompleteComponent","states","stateCtrl","filteredStates","valueChanges","pipe","state","filterStates","WizardComponent","_formBuilder","isLinear","firstFormGroup","firstCtrl","secondFormGroup","secondCtrl","password","confirmPassword","equalTo","FormValidationComponent","fname","compose","minLength","maxLength","range","date","phone","gender","DatepickerComponent","startDate","Date","serializedDate","toISOString","events","addEvent"],"mappings":"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","file":"forms-forms-module-es5.js","sourcesContent":["import { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} node\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction isElement(node) {\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\nclass FileLikeObject {\n    /**\n     * @param {?} fileOrInput\n     */\n    constructor(fileOrInput) {\n        this.rawFile = fileOrInput;\n        /** @type {?} */\n        let isInput = isElement(fileOrInput);\n        /** @type {?} */\n        let fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n        /** @type {?} */\n        let postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        /** @type {?} */\n        let method = '_createFrom' + postfix;\n        ((/** @type {?} */ (this)))[method](fakePathOrObject);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    _createFromFakePath(path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n    /**\n     * @param {?} object\n     * @return {?}\n     */\n    _createFromObject(object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileLikeObject.prototype.lastModifiedDate;\n    /** @type {?} */\n    FileLikeObject.prototype.size;\n    /** @type {?} */\n    FileLikeObject.prototype.type;\n    /** @type {?} */\n    FileLikeObject.prototype.name;\n    /** @type {?} */\n    FileLikeObject.prototype.rawFile;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileItem {\n    /**\n     * @param {?} uploader\n     * @param {?} some\n     * @param {?} options\n     */\n    constructor(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    /**\n     * @return {?}\n     */\n    upload() {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    }\n    /**\n     * @return {?}\n     */\n    cancel() {\n        this.uploader.cancelItem(this);\n    }\n    /**\n     * @return {?}\n     */\n    remove() {\n        this.uploader.removeFromQueue(this);\n    }\n    /**\n     * @return {?}\n     */\n    onBeforeUpload() {\n        return void 0;\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildForm(form) {\n        return { form };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgress(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccess(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onError(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancel(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onComplete(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    _onBeforeUpload() {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildForm(form) {\n        this.onBuildForm(form);\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgress(progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccess(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = void 0;\n        this.onSuccess(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onError(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = void 0;\n        this.onError(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancel(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.onCancel(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onComplete(response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _prepareToUploading() {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileItem.prototype.file;\n    /** @type {?} */\n    FileItem.prototype._file;\n    /** @type {?} */\n    FileItem.prototype.alias;\n    /** @type {?} */\n    FileItem.prototype.url;\n    /** @type {?} */\n    FileItem.prototype.method;\n    /** @type {?} */\n    FileItem.prototype.headers;\n    /** @type {?} */\n    FileItem.prototype.withCredentials;\n    /** @type {?} */\n    FileItem.prototype.formData;\n    /** @type {?} */\n    FileItem.prototype.isReady;\n    /** @type {?} */\n    FileItem.prototype.isUploading;\n    /** @type {?} */\n    FileItem.prototype.isUploaded;\n    /** @type {?} */\n    FileItem.prototype.isSuccess;\n    /** @type {?} */\n    FileItem.prototype.isCancel;\n    /** @type {?} */\n    FileItem.prototype.isError;\n    /** @type {?} */\n    FileItem.prototype.progress;\n    /** @type {?} */\n    FileItem.prototype.index;\n    /** @type {?} */\n    FileItem.prototype._xhr;\n    /** @type {?} */\n    FileItem.prototype._form;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.uploader;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.some;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileType {\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    static getMimeClass(file) {\n        /** @type {?} */\n        let mimeClass = 'application';\n        if (this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file.type.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application') {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    }\n    /**\n     * @param {?} inputFilename\n     * @return {?}\n     */\n    static fileTypeDetection(inputFilename) {\n        /** @type {?} */\n        let types = {\n            'jpg': 'image',\n            'jpeg': 'image',\n            'tif': 'image',\n            'psd': 'image',\n            'bmp': 'image',\n            'png': 'image',\n            'nef': 'image',\n            'tiff': 'image',\n            'cr2': 'image',\n            'dwg': 'image',\n            'cdr': 'image',\n            'ai': 'image',\n            'indd': 'image',\n            'pin': 'image',\n            'cdp': 'image',\n            'skp': 'image',\n            'stp': 'image',\n            '3dm': 'image',\n            'mp3': 'audio',\n            'wav': 'audio',\n            'wma': 'audio',\n            'mod': 'audio',\n            'm4a': 'audio',\n            'compress': 'compress',\n            'zip': 'compress',\n            'rar': 'compress',\n            '7z': 'compress',\n            'lz': 'compress',\n            'z01': 'compress',\n            'bz2': 'compress',\n            'gz': 'compress',\n            'pdf': 'pdf',\n            'xls': 'xls',\n            'xlsx': 'xls',\n            'ods': 'xls',\n            'mp4': 'video',\n            'avi': 'video',\n            'wmv': 'video',\n            'mpg': 'video',\n            'mts': 'video',\n            'flv': 'video',\n            '3gp': 'video',\n            'vob': 'video',\n            'm4v': 'video',\n            'mpeg': 'video',\n            'm2ts': 'video',\n            'mov': 'video',\n            'doc': 'doc',\n            'docx': 'doc',\n            'eps': 'doc',\n            'txt': 'doc',\n            'odt': 'doc',\n            'rtf': 'doc',\n            'ppt': 'ppt',\n            'pptx': 'ppt',\n            'pps': 'ppt',\n            'ppsx': 'ppt',\n            'odp': 'ppt'\n        };\n        /** @type {?} */\n        let chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        /** @type {?} */\n        let extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    }\n}\n/*  MS office  */\nFileType.mime_doc = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n];\nFileType.mime_xsl = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n];\nFileType.mime_ppt = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n];\n/* PSD */\nFileType.mime_psd = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n];\n/* Compressed files */\nFileType.mime_compress = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream',\n    'application/x-zip-compressed',\n    'application/zip-compressed',\n    'application/x-7z-compressed',\n    'application/gzip',\n    'application/x-bzip2'\n];\nif (false) {\n    /** @type {?} */\n    FileType.mime_doc;\n    /** @type {?} */\n    FileType.mime_xsl;\n    /** @type {?} */\n    FileType.mime_ppt;\n    /** @type {?} */\n    FileType.mime_psd;\n    /** @type {?} */\n    FileType.mime_compress;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\n/**\n * @record\n */\nfunction Headers() { }\nif (false) {\n    /** @type {?} */\n    Headers.prototype.name;\n    /** @type {?} */\n    Headers.prototype.value;\n}\n/**\n * @record\n */\nfunction FileUploaderOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedMimeType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedFileType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.autoUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.isHTML5;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.filters;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.headers;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.method;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authToken;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.maxFileSize;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.queueLimit;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.removeAfterUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.url;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.disableMultipart;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.itemAlias;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authTokenHeader;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.additionalParameter;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.parametersBeforeFiles;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunction;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunctionIsAsync;\n}\nclass FileUploader {\n    /**\n     * @param {?} options\n     */\n    constructor(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: (/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => item._file),\n            formatDataFunctionIsAsync: false\n        };\n        this.setOptions(options);\n        this.response = new EventEmitter();\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    setOptions(options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (let i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    }\n    /**\n     * @param {?} files\n     * @param {?=} options\n     * @param {?=} filters\n     * @return {?}\n     */\n    addToQueue(files, options, filters) {\n        /** @type {?} */\n        let list = [];\n        for (let file of files) {\n            list.push(file);\n        }\n        /** @type {?} */\n        let arrayOfFilters = this._getFilters(filters);\n        /** @type {?} */\n        let count = this.queue.length;\n        /** @type {?} */\n        let addedFileItems = [];\n        list.map((/**\n         * @param {?} some\n         * @return {?}\n         */\n        (some) => {\n            if (!options) {\n                options = this.options;\n            }\n            /** @type {?} */\n            let temp = new FileLikeObject(some);\n            if (this._isValidFile(temp, arrayOfFilters, options)) {\n                /** @type {?} */\n                let fileItem = new FileItem(this, some, options);\n                addedFileItems.push(fileItem);\n                this.queue.push(fileItem);\n                this._onAfterAddingFile(fileItem);\n            }\n            else {\n                /** @type {?} */\n                let filter = arrayOfFilters[this._failFilterIndex];\n                this._onWhenAddingFileFailed(temp, filter, options);\n            }\n        }));\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    removeFromQueue(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    }\n    /**\n     * @return {?}\n     */\n    clearQueue() {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    uploadItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        ((/** @type {?} */ (this)))[transport](item);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    cancelItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    uploadAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems().filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploading));\n        if (!items.length) {\n            return;\n        }\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._prepareToUploading()));\n        items[0].upload();\n    }\n    /**\n     * @return {?}\n     */\n    cancelAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems();\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.cancel()));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFile(value) {\n        return isFile(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFileLikeObject(value) {\n        return value instanceof FileLikeObject;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getIndexOfItem(value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    }\n    /**\n     * @return {?}\n     */\n    getNotUploadedItems() {\n        return this.queue.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploaded));\n    }\n    /**\n     * @return {?}\n     */\n    getReadyItems() {\n        return this.queue\n            .filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => (item.isReady && !item.isUploading)))\n            .sort((/**\n         * @param {?} item1\n         * @param {?} item2\n         * @return {?}\n         */\n        (item1, item2) => item1.index - item2.index));\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        return void 0;\n    }\n    /**\n     * @param {?} fileItems\n     * @return {?}\n     */\n    onAfterAddingAll(fileItems) {\n        return { fileItems };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildItemForm(fileItem, form) {\n        return { fileItem, form };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onAfterAddingFile(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    onWhenAddingFileFailed(item, filter, options) {\n        return { item, filter, options };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onBeforeUploadItem(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressItem(fileItem, progress) {\n        return { fileItem, progress };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressAll(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccessItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onErrorItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancelItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCompleteItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    onCompleteAll() {\n        return void 0;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _mimeTypeFilter(item) {\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileSizeFilter(item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileTypeFilter(item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onErrorItem(item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCompleteItem(item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        /** @type {?} */\n        let nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} parsedHeaders\n     * @return {?}\n     */\n    _headersGetter(parsedHeaders) {\n        return (/**\n         * @param {?} name\n         * @return {?}\n         */\n        (name) => {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || void 0;\n            }\n            return parsedHeaders;\n        });\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _xhrTransport(item) {\n        /** @type {?} */\n        let that = this;\n        /** @type {?} */\n        let xhr = item._xhr = new XMLHttpRequest();\n        /** @type {?} */\n        let sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            /** @type {?} */\n            const appendFile = (/**\n             * @return {?}\n             */\n            () => sendable.append(item.alias, item._file, item.file.name));\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                (key) => {\n                    /** @type {?} */\n                    let paramVal = this.options.additionalParameter[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                }));\n            }\n            if (this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            sendable = this.options.formatDataFunction(item);\n        }\n        xhr.upload.onprogress = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            let progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            this._onProgressItem(item, progress);\n        });\n        xhr.onload = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            /** @type {?} */\n            let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            /** @type {?} */\n            let method = '_on' + gist + 'Item';\n            ((/** @type {?} */ (this)))[method](item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onerror = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onErrorItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onabort = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onCancelItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.open(item.method, item.url, true);\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (let header of this.options.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (let header of item.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = (/**\n         * @return {?}\n         */\n        function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        });\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => xhr.send(JSON.stringify(result))));\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n    _getTotalProgress(value = 0) {\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        /** @type {?} */\n        let notUploaded = this.getNotUploadedItems().length;\n        /** @type {?} */\n        let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        /** @type {?} */\n        let ratio = 100 / this.queue.length;\n        /** @type {?} */\n        let current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    }\n    /**\n     * @protected\n     * @param {?} filters\n     * @return {?}\n     */\n    _getFilters(filters) {\n        if (!filters) {\n            return this.options.filters;\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            /** @type {?} */\n            let names = filters.match(/[^\\s,]+/g);\n            return this.options.filters\n                .filter((/**\n             * @param {?} filter\n             * @return {?}\n             */\n            (filter) => names.indexOf(filter.name) !== -1));\n        }\n        return this.options.filters;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _render() {\n        return void 0;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _queueLimitFilter() {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    }\n    /**\n     * @protected\n     * @param {?} file\n     * @param {?} filters\n     * @param {?} options\n     * @return {?}\n     */\n    _isValidFile(file, filters, options) {\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every((/**\n         * @param {?} filter\n         * @return {?}\n         */\n        (filter) => {\n            this._failFilterIndex++;\n            return filter.fn.call(this, file, options);\n        }));\n    }\n    /**\n     * @protected\n     * @param {?} status\n     * @return {?}\n     */\n    _isSuccessCode(status) {\n        return (status >= 200 && status < 300) || status === 304;\n    }\n    /**\n     * @protected\n     * @param {?} response\n     * @param {?} headers\n     * @return {?}\n     */\n    _transformResponse(response, headers) {\n        return response;\n    }\n    /**\n     * @protected\n     * @param {?} headers\n     * @return {?}\n     */\n    _parseHeaders(headers) {\n        /** @type {?} */\n        let parsed = {};\n        /** @type {?} */\n        let key;\n        /** @type {?} */\n        let val;\n        /** @type {?} */\n        let i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map((/**\n         * @param {?} line\n         * @return {?}\n         */\n        (line) => {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        }));\n        return parsed;\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    _onWhenAddingFileFailed(item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onAfterAddingFile(item) {\n        this.onAfterAddingFile(item);\n    }\n    /**\n     * @protected\n     * @param {?} items\n     * @return {?}\n     */\n    _onAfterAddingAll(items) {\n        this.onAfterAddingAll(items);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onBeforeUploadItem(item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildItemForm(item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgressItem(item, progress) {\n        /** @type {?} */\n        let total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccessItem(item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancelItem(item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileUploader.prototype.authToken;\n    /** @type {?} */\n    FileUploader.prototype.isUploading;\n    /** @type {?} */\n    FileUploader.prototype.queue;\n    /** @type {?} */\n    FileUploader.prototype.progress;\n    /** @type {?} */\n    FileUploader.prototype._nextIndex;\n    /** @type {?} */\n    FileUploader.prototype.autoUpload;\n    /** @type {?} */\n    FileUploader.prototype.authTokenHeader;\n    /** @type {?} */\n    FileUploader.prototype.response;\n    /** @type {?} */\n    FileUploader.prototype.options;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileUploader.prototype._failFilterIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileSelectDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.onFileSelected = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @return {?}\n     */\n    isEmptyAfterSelection() {\n        return !!this.element.nativeElement.attributes.multiple;\n    }\n    /**\n     * @return {?}\n     */\n    onChange() {\n        /** @type {?} */\n        let files = this.element.nativeElement.files;\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this.uploader.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    }\n}\nFileSelectDirective.ɵfac = function FileSelectDirective_Factory(t) { return new (t || FileSelectDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFileSelectDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FileSelectDirective, selectors: [[\"\", \"ng2FileSelect\", \"\"]], hostBindings: function FileSelectDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function FileSelectDirective_change_HostBindingHandler() { return ctx.onChange(); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { onFileSelected: \"onFileSelected\" } });\n/** @nocollapse */\nFileSelectDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileSelectDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    onFileSelected: [{ type: Output }],\n    onChange: [{ type: HostListener, args: ['change',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileSelectDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileSelect]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { onFileSelected: [{\n            type: Output\n        }], \n    /**\n     * @return {?}\n     */\n    onChange: [{\n            type: HostListener,\n            args: ['change']\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileSelectDirective.prototype.uploader;\n    /** @type {?} */\n    FileSelectDirective.prototype.onFileSelected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileSelectDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileDropDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.fileOver = new EventEmitter();\n        this.onFileDrop = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this._preventAndStop(event);\n        this.uploader.addToQueue(transfer.files, options, filters);\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave(event) {\n        if (((/** @type {?} */ (this))).element) {\n            if (event.currentTarget === ((/** @type {?} */ (this))).element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _getTransfer(event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _preventAndStop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * @protected\n     * @param {?} types\n     * @return {?}\n     */\n    _haveFiles(types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    }\n}\nFileDropDirective.ɵfac = function FileDropDirective_Factory(t) { return new (t || FileDropDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFileDropDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FileDropDirective, selectors: [[\"\", \"ng2FileDrop\", \"\"]], hostBindings: function FileDropDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"drop\", function FileDropDirective_drop_HostBindingHandler($event) { return ctx.onDrop($event); })(\"dragover\", function FileDropDirective_dragover_HostBindingHandler($event) { return ctx.onDragOver($event); })(\"dragleave\", function FileDropDirective_dragleave_HostBindingHandler($event) { return ctx.onDragLeave($event); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { fileOver: \"fileOver\", onFileDrop: \"onFileDrop\" } });\n/** @nocollapse */\nFileDropDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileDropDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    fileOver: [{ type: Output }],\n    onFileDrop: [{ type: Output }],\n    onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],\n    onDragOver: [{ type: HostListener, args: ['dragover', ['$event'],] }],\n    onDragLeave: [{ type: HostListener, args: ['dragleave', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileDropDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileDrop]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { fileOver: [{\n            type: Output\n        }], onFileDrop: [{\n            type: Output\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop: [{\n            type: HostListener,\n            args: ['drop', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver: [{\n            type: HostListener,\n            args: ['dragover', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave: [{\n            type: HostListener,\n            args: ['dragleave', ['$event']]\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileDropDirective.prototype.uploader;\n    /** @type {?} */\n    FileDropDirective.prototype.fileOver;\n    /** @type {?} */\n    FileDropDirective.prototype.onFileDrop;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileDropDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileUploadModule {\n}\nFileUploadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FileUploadModule });\nFileUploadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FileUploadModule_Factory(t) { return new (t || FileUploadModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FileUploadModule, { declarations: function () { return [FileDropDirective, FileSelectDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [FileDropDirective, FileSelectDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileUploadModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [FileDropDirective, FileSelectDirective],\n                exports: [FileDropDirective, FileSelectDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };\n\n//# sourceMappingURL=ng2-file-upload.js.map","import { Component, ChangeDetectionStrategy } from '@angular/core';\n/*import { FileUploader } from 'ng2-file-upload/ng2-file-upload';*/\nimport { FileUploader, FileItem, FileUploaderOptions } from 'ng2-file-upload';\n\nconst URL = 'https://evening-anchorage-3159.herokuapp.com/api/';\n\n@Component({\n  templateUrl: './upload.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['./upload.scss']\n})\nexport class UploadComponent {\n\n  uploader: FileUploader = new FileUploader({\n    url: URL,\n    isHTML5: true\n    });\n    hasBaseDropZoneOver = false;\n    hasAnotherDropZoneOver = false;\n\n    // Angular2 File Upload\n    fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n    }\n\n    fileOverAnother(e: any): void {\n    this.hasAnotherDropZoneOver = e;\n    }\n}\n","<mat-card>\n    <mat-card-content>\n        <mat-card-title>Angular2 File Upload</mat-card-title>\n        <section id=\"file-upload\">\n                    \n                        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" class=\"row\">\n                            <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" class=\"p-10\">\n                            <div ng2FileDrop [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\" (fileOver)=\"fileOverBase($event)\" [uploader]=\"uploader\" class=\"py-5 mb-3 text-center font-medium-5 text-uppercase grey my-drop-zone\">\n                                Base dropzone\n                            </div>\n                            </div>\n                            <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" class=\"p-10\">\n                            <div ng2FileDrop [ngClass]=\"{'another-file-over-class': hasAnotherDropZoneOver}\" (fileOver)=\"fileOverAnother($event)\" [uploader]=\"uploader\" class=\"py-5 mb-3 text-center font-medium-5 text-uppercase grey my-drop-zone\">\n                                Another dropzone\n                            </div>\n                            </div>\n                        </div>\n                        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n                            <div fxFlex.gt-sm=\"25\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n                            <h4>Select files</h4>\n                            <div>Multiple</div>\n                            <label class=\"custom-file\">\n                                <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple class=\"custom-file-input\">\n                                <span class=\"custom-file-control\"></span>\n                            </label>\n\n                            <div  class=\"m-t-30\">Single</div>\n                            <label class=\"custom-file\">\n                                <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" class=\"custom-file-input\">\n                                <span class=\"custom-file-control\"></span>\n                            </label>\n                            </div>\n\n                            <div fxFlex.gt-sm=\"75\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n                            <h4>Upload queue</h4>\n                            <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n                            <table class=\"table\">\n                                <thead>\n                                <tr>\n                                    <th width=\"50%\">Name</th>\n                                    <th>Size</th>\n                                    <th>Progress</th>\n                                    <th>Status</th>\n                                    <th>Actions</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                <tr *ngFor=\"let item of uploader.queue\">\n                                <td><strong>{{ item?.file?.name }}</strong></td>\n                                <td *ngIf=\"uploader.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n                                <td *ngIf=\"uploader.isHTML5\">\n                                    <div class=\"progress\" style=\"margin-bottom: 0;\">\n                                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': item.progress + '%' }\"></div>\n                                    </div>\n                                </td>\n                                <td class=\"text-center\">\n                                    <span *ngIf=\"item.isSuccess\"><i class=\"fa fa-ok\"></i></span>\n                                    <span *ngIf=\"item.isCancel\"><i class=\"fa fa-ban\"></i></span>\n                                    <span *ngIf=\"item.isError\"><i class=\"fa fa-remove\"></i></span>\n                                </td>\n                                <td nowrap>\n                                    <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"item.upload()\" [disabled]=\"item.isReady || item.isUploading || item.isSuccess\">\n                                    <span class=\"fa fa-upload\"></span> Upload\n                                    </button>\n                                    <button type=\"button\" mat-raised-button color=\"accent\" (click)=\"item.cancel()\" [disabled]=\"!item.isUploading\">\n                                    <span class=\"fa fa-ban\"></span> Cancel\n                                    </button>\n                                    <button type=\"button\" mat-raised-button color=\"warn\" (click)=\"item.remove()\">\n                                    <span class=\"fa fa-trash\"></span> Remove\n                                    </button>\n                                </td>\n                                </tr>\n                                </tbody>\n                            </table>\n\n                            <div>\n                                <p>Queue progress: <mat-progress-bar mode=\"determinate\" [value]=\"uploader.progress\" class=\"m-t-10\"></mat-progress-bar></p>\n                                <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n                                <span class=\"fa fa-upload\"></span> Upload all\n                                </button>\n                                <button type=\"button\" mat-raised-button color=\"accent\" (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n                                <span class=\"fa fa-ban\"></span> Cancel all\n                                </button>\n                                <button type=\"button\" mat-raised-button color=\"warn\" (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n                                <span class=\"fa fa-trash\"></span> Remove all\n                                </button>\n                            </div>\n                            </div>\n                        </div>\n                        \n                    </section> \n    </mat-card-content>\n</mat-card>\n        \n                                \n           \n    ","import { Component, OnInit } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent {\nchecked = false;\n  indeterminate = false;\n  align = 'start';\n  disabled = false;\n  labelPosition;\n}\n","<mat-card>\n  <mat-card-content>\n    <h3 class=\"example-h2\">Checkbox configuration</h3>\n\n    <section class=\"example-section\">\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\">Checked</mat-checkbox>\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"indeterminate\">Indeterminate</mat-checkbox>\n    </section>\n\n    <section class=\"example-section\">\n      <label class=\"example-margin\">Align:</label>\n      <mat-radio-group [(ngModel)]=\"labelPosition\">\n        <mat-radio-button class=\"example-margin\" value=\"after\">After</mat-radio-button>\n        <mat-radio-button class=\"example-margin\" value=\"before\">Before</mat-radio-button>\n      </mat-radio-group>\n    </section>\n\n    <section class=\"example-section\">\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"disabled\">Disabled</mat-checkbox>\n    </section>\n  </mat-card-content>\n</mat-card>\n\n<mat-card class=\"result\">\n  <mat-card-content>\n    <h2 class=\"example-h2\">Result</h2>\n\n    <section class=\"example-section\">\n      <mat-checkbox\n          class=\"example-margin\"\n          [(ngModel)]=\"checked\"\n          [(indeterminate)]=\"indeterminate\"\n          [labelPosition]=\"labelPosition\"\n          [disabled]=\"disabled\">\n        I'm a checkbox\n      </mat-checkbox>\n    </section>\n  </mat-card-content>\n</mat-card>\n","\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { DemoMaterialModule} from '../demo-material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormRoutes } from './forms.routing';\nimport { QuillModule } from 'ngx-quill';\nimport { FileUploadModule } from \"ng2-file-upload\";\n\n\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { DatepickerComponent } from './datepicker/datepicker.component';\nimport { FormLayoutComponent } from './form-layouts/form-layout.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { FormValidationComponent } from './form-validation/form-validation.component';\nimport { UploadComponent } from './file-upload/upload.component';\nimport { WizardComponent } from './wizard/wizard.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(FormRoutes),\n    DemoMaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    QuillModule,\n    ReactiveFormsModule,\n    FileUploadModule\n   ],\n  declarations: [\n    AutocompleteComponent,\n    CheckboxComponent,\n    DatepickerComponent,\n    FormLayoutComponent,\n    EditorComponent,\n    FormValidationComponent,\n    UploadComponent,\n    WizardComponent\n  ],\n})\n\nexport class FormModule {}\n","import { Routes } from '@angular/router';\n\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { DatepickerComponent } from './datepicker/datepicker.component';\nimport { FormLayoutComponent } from './form-layouts/form-layout.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { FormValidationComponent } from './form-validation/form-validation.component';\nimport { UploadComponent } from './file-upload/upload.component';\nimport { WizardComponent } from './wizard/wizard.component';\n\nexport const FormRoutes: Routes = [\n  {\n    path: '',\n    children: [{\n      path: 'autocomplete',\n      component: AutocompleteComponent\n    }, {\n      path: 'checkbox',\n      component: CheckboxComponent\n    }, {\n      path: 'datepicker',\n      component: DatepickerComponent\n    }, {\n      path: 'form-layout',\n      component: FormLayoutComponent\n    }, {\n      path: 'editor',\n      component: EditorComponent\n    }, {\n      path: 'form-validation',\n      component: FormValidationComponent\n    }, {\n      path: 'file-upload',\n      component: UploadComponent\n    }, {\n      path: 'wizard',\n      component: WizardComponent\n    }]\n  }\n];\n","import { Component} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {FormControl, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-formlayout',\n  templateUrl: './form-layout.component.html',\n  styleUrls: ['./form-layout.component.scss']\n})\nexport class FormLayoutComponent {\n  options: FormGroup;\n\n  constructor(fb: FormBuilder) {\n    this.options = fb.group({\n      hideRequired: false,\n      floatLabel: 'auto'\n    });\n  }\n  // For form validator\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  // Sufix and prefix\n  hide = true;\n\n  getErrorMessage() {\n    return this.email.hasError('required')\n      ? 'You must enter a value'\n      : this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n}\n","<!-- ============================================================== -->\n<!-- Card Grid-->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n                <mat-card-title>Form Basic Layouts</mat-card-title>\n                <!-- ============================================================== -->\n                <!-- column -->\n                <!-- ============================================================== -->\n                <form class=\"basic-form\">\n                <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n                    <!-- column -->\n                    <div fxFlex.gt-md=\"100\" fxFlex=\"100\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"Some text value\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"EmailId\" type=\"email\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"Password\" type=\"password\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n                        <mat-label>Both a label and a placeholder</mat-label>\n                        <input matInput placeholder=\"Simple placeholder\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <mat-form-field hintLabel=\"Max 10 characters\">\n                        <input matInput #input maxlength=\"10\" placeholder=\"Enter some input\">\n                        <mat-hint align=\"end\">{{input.value?.length || 0}}/10</mat-hint>\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <mat-form-field>\n                        <mat-select placeholder=\"Select\">\n                          <mat-option value=\"option\">Option</mat-option>\n                          <mat-option value=\"option\">Option2</mat-option>\n                          <mat-option value=\"option\">Option3</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-b-20\">\n                      <input class=\"form-control b-b\" placeholder=\"file\" type=\"file\">\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <mat-form-field\n                          [hideRequiredMarker]=\"options.value.hideRequired\"\n                          [floatLabel]=\"options.value.floatLabel\">\n                        <mat-select required>\n                          <mat-option>-- None --</mat-option>\n                          <mat-option value=\"option\">Option</mat-option>\n                        </mat-select>\n                        <mat-placeholder><mat-icon>favorite</mat-icon> <b> Fancy</b> <i> placeholder</i></mat-placeholder>\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-10 m-b-10\">\n                        <mat-checkbox color=\"primary\"  class=\"m-r-10\">Checkbox</mat-checkbox>\n                        <mat-checkbox  color=\"warn\" class=\"m-r-10\">Checkbox</mat-checkbox>\n                        <mat-checkbox  color=\"accent\">Checkbox</mat-checkbox>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20 m-b-20\">\n                      <mat-radio-group>\n                        <mat-radio-button color=\"primary\" value=\"auto\" class=\"m-r-10\">Auto</mat-radio-button>\n                        <mat-radio-button color=\"warn\" value=\"always\" class=\"m-r-10\">Always</mat-radio-button>\n                        <mat-radio-button color=\"accent\" value=\"never\">Never</mat-radio-button>\n                      </mat-radio-group>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <mat-form-field>\n                        <textarea matInput placeholder=\"Textarea\"></textarea>\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <button mat-raised-button color=\"primary\">Submit</button>\n                    </div>\n                </div>\n                </form>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n                <mat-card-title>Form field with error messages</mat-card-title>\n                <mat-form-field>\n                    <input matInput placeholder=\"Enter your email\" [formControl]=\"email\" required>\n                    <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\n                </mat-form-field>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n                <mat-card-title>Form field with prefix &amp; suffix</mat-card-title>\n                <mat-form-field>\n                <input matInput placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\">\n                <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\n              </mat-form-field>\n\n              <mat-form-field>\n                <input matInput placeholder=\"Amount\" type=\"number\" class=\"example-right-align\">\n                <span matPrefix>$&nbsp;</span>\n                <span matSuffix>.00</span>\n              </mat-form-field>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n<!-- ============================================================== -->\n<!-- Card Grid-->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n                <mat-card-title>Form with grid</mat-card-title>\n                <mat-card-subtitle>use this class <code>.row</code> to the fxLayout=\"row\" and <code>p-10</code> to the fxFlex div</mat-card-subtitle>\n                <!-- ============================================================== -->\n                <!-- column -->\n                <!-- ============================================================== -->\n                <form class=\"basic-form\">\n                <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" fxFlexAlign=\"center\" class=\"row\">\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"25\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 25\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"25\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 25\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"25\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 25\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"25\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 25\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"33.33\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 33.33\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"33.33\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 33.33\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"33.33\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 33.33\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"50\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 50\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"50\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 50\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 100\">\n                      </mat-form-field>\n                    </div>\n                </div>\n                </form>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n","import { Component} from '@angular/core';\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.scss']\n})\nexport class EditorComponent {\n\n  subtitle: string;\n\n  constructor() {\n    this.subtitle = 'This is some text within a card block.';\n  }\n}\n","\n<mat-card>\n    <mat-card-content>\n    <mat-card-title>Default Editor</mat-card-title>\n    <mat-card-subtitle>quill editor with angular and TypeScript. ngx-quill is the new angular 2 and beyond implementation of ngQuill. <a href=\"https://github.com/KillerCodeMonkey/ngx-quill\" target=\"_blank\">Official website</a></mat-card-subtitle>\n    <quill-editor [style]=\"{height: '200px'}\"></quill-editor> \n    </mat-card-content>    \n</mat-card>\n<mat-card>\n    <mat-card-content>\n    <mat-card-title>Bubble Editor</mat-card-title>\n        <quill-editor theme=\"bubble\" placeholder=\"Bubble editor\" bounds=\".mat-drawer-content\" [style]=\"{border: '1px solid #dadada'}\"></quill-editor> \n    </mat-card-content>    \n</mat-card>\n\n","import { Component, ViewChild } from '@angular/core';\nimport { FormControl, NgModel } from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {startWith, map} from 'rxjs/operators';\n\nexport class State {\n  constructor(public name: string, public population: string, public flag: string) { }\n}\n\n@Component({\n  selector: 'app-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss']\n})\nexport class AutocompleteComponent {\n    // state autocomplate\n    stateCtrl: FormControl;\n    filteredStates: Observable<any[]>;\n\n  states: State[] = [\n    {\n      name: 'Arkansas',\n      population: '2.978M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\n    },\n    {\n      name: 'California',\n      population: '39.14M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\n    },\n    {\n      name: 'Florida',\n      population: '20.27M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\n    },\n    {\n      name: 'Texas',\n      population: '27.47M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\n    }\n  ];\n\n  constructor() {\n    this.stateCtrl = new FormControl();\n    this.filteredStates = this.stateCtrl.valueChanges\n      .pipe(\n        startWith(''),\n        map(state => state ? this.filterStates(state) : this.states.slice())\n      );\n  }\n\n  filterStates(name: string) {\n    return this.states.filter(state =>\n      state.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\n  }\n}\n","<!-- ============================================================== -->\n<!-- Card Grid-->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n                <mat-card-title>Autocomplete Example</mat-card-title>\n                <!-- ============================================================== -->\n                <!-- column -->\n                <!-- ============================================================== -->\n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                        <input matInput placeholder=\"State\" aria-label=\"State\" [matAutocomplete]=\"auto\" [formControl]=\"stateCtrl\">\n                        <mat-autocomplete #auto=\"matAutocomplete\">\n                            <mat-option *ngFor=\"let state of filteredStates | async\" [value]=\"state.name\"> <img style=\"vertical-align:middle;\" aria-hidden src=\"{{state.flag}}\" height=\"25\" /> <span>{{ state.name }}</span> | <small>Population: {{state.population}}</small> </mat-option>\n                        </mat-autocomplete>\n                    </mat-form-field>\n                    <br />\n                    <mat-slide-toggle [checked]=\"stateCtrl.disabled\" (change)=\"stateCtrl.disabled ? stateCtrl.enable() : stateCtrl.disable()\"> Disable Input? </mat-slide-toggle>\n                </form>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-wizard',\n  templateUrl: './wizard.component.html',\n  styleUrls: ['./wizard.component.scss']\n})\nexport class WizardComponent implements OnInit {\n  isLinear = false;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n\n  constructor(private _formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n\n  }\n}\n","<!-- ============================================================== -->\n<!-- row -->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <!-- Card column -->\n    <div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n                <mat-card-title>Horizontal wizard</mat-card-title>\n                <button mat-raised-button (click)=\"isLinear = true\" id=\"toggle-linear\">Enable linear mode</button>\n                <mat-horizontal-stepper [linear]=\"isLinear\">\n                  <mat-step [stepControl]=\"firstFormGroup\">\n                    <form [formGroup]=\"firstFormGroup\">\n                      <ng-template matStepLabel>Fill out your name</ng-template>\n                      <mat-form-field>\n                        <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\n                      </mat-form-field>\n                      <div>\n                        <button mat-raised-button color=\"warn\" matStepperNext>Next</button>\n                      </div>\n                    </form>\n                  </mat-step>\n                  <mat-step [stepControl]=\"secondFormGroup\">\n                    <form [formGroup]=\"secondFormGroup\">\n                      <ng-template matStepLabel>Fill out your address</ng-template>\n                      <mat-form-field>\n                        <input matInput placeholder=\"Address\" formControlName=\"secondCtrl\" required>\n                      </mat-form-field>\n                      <div>\n                        <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\n                        <button mat-raised-button color=\"warn\" matStepperNext>Next</button>\n                      </div>\n                    </form>\n                  </mat-step>\n                  <mat-step>\n                    <ng-template matStepLabel>Done</ng-template>\n                    You are now done.\n                    <div>\n                      <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\n                    </div>\n                  </mat-step>\n                </mat-horizontal-stepper>\n            \n            </mat-card-content>\n             \n        </mat-card>    \n    </div>\n</div> \n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <!-- Card column -->\n    <div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n                <mat-card-title>Vertical wizard</mat-card-title>\n                <button mat-raised-button (click)=\"isLinear = true\" id=\"toggle-linear\">Enable linear mode</button>\n                <mat-vertical-stepper [linear]=\"isLinear\">\n                  <mat-step [stepControl]=\"firstFormGroup\">\n                    <form [formGroup]=\"firstFormGroup\">\n                      <ng-template matStepLabel>Fill out your name</ng-template>\n                      <mat-form-field>\n                        <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\n                      </mat-form-field>\n                      <div>\n                        <button mat-raised-button color=\"warn\" matStepperNext>Next</button>\n                      </div>\n                    </form>\n                  </mat-step>\n                  <mat-step [stepControl]=\"secondFormGroup\">\n                    <form [formGroup]=\"secondFormGroup\">\n                      <ng-template matStepLabel>Fill out your address</ng-template>\n                      <mat-form-field>\n                        <input matInput placeholder=\"Address\" formControlName=\"secondCtrl\" required>\n                      </mat-form-field>\n                      <div>\n                        <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\n                        <button mat-raised-button color=\"warn\" matStepperNext>Next</button>\n                      </div>\n                    </form>\n                  </mat-step>\n                  <mat-step>\n                    <ng-template matStepLabel>Done</ng-template>\n                    You are now done.\n                    <div>\n                      <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\n                    </div>\n                  </mat-step>\n                </mat-vertical-stepper>\n            \n            </mat-card-content>\n             \n        </mat-card>    \n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\nconst password = new FormControl('', Validators.required);\nconst confirmPassword = new FormControl('', CustomValidators.equalTo(password));\n\n@Component({\n  selector: 'app-form-validation',\n  templateUrl: './form-validation.component.html',\n  styleUrls: ['./form-validation.component.scss']\n})\nexport class FormValidationComponent implements OnInit {\n\n  public form: FormGroup;\n\n  constructor(private fb: FormBuilder) {}\n  ngOnInit() {\n    this.form = this.fb.group({\n      fname: [null, Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(10)])],\n      email: [null, Validators.compose([Validators.required, CustomValidators.email])],\n      range: [null, Validators.compose([Validators.required, CustomValidators.range([5, 9])])],\n      url: [null, Validators.compose([Validators.required, CustomValidators.url])],\n      date: [null, Validators.compose([Validators.required, CustomValidators.date])],\n      phone: [null, Validators.compose([Validators.required, CustomValidators.phone('IN')])],\n      gender: [null, Validators.required],\n      password: password,\n      confirmPassword: confirmPassword\n    });\n  }\n}\n","\n<mat-card>\n  <mat-card-content>\n  <mat-card-title>Form validation</mat-card-title>\n  <mat-card-subtitle>Angular2 custom validation here is the  <a href=\"https://github.com/yuyang041060120/ng2-validation\" target=\"_blank\">official site</a></mat-card-subtitle>\n  <form [formGroup]=\"form\">\n     \n      <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" class=\"row\">\n        <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n          <mat-form-field>\n            <input matInput placeholder=\"First name\" [formControl]=\"form.controls['fname']\">\n          </mat-form-field>\n            <mat-hint *ngIf=\"form.controls['fname'].hasError('required') && form.controls['fname'].touched\" class=\"text-danger font-14\">You must include a first name.</mat-hint>\n            <mat-hint *ngIf=\"form.controls['fname'].hasError('minlength') && form.controls['fname'].touched\" class=\"text-danger font-14\">Your first name must be at least 5 characters long.</mat-hint>\n            <mat-hint *ngIf=\"form.controls['fname'].hasError('maxlength') && form.controls['fname'].touched\" class=\"text-danger font-14\">Your first name cannot exceed 10 characters.</mat-hint>\n        </div>\n      \n\n      <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n        <mat-form-field >\n          <input matInput placeholder=\"Email Id\" [formControl]=\"form.controls['email']\" type=\"email\">\n        </mat-form-field>\n        <small *ngIf=\"form.controls['email'].hasError('required') && form.controls['email'].touched\" class=\"text-danger font-14\">You must include an email address.</small>\n        <small *ngIf=\"form.controls['email'].errors?.email && form.controls['email'].touched\" class=\"text-danger font-14\">You must include a valid email address.</small>\n      </div>\n\n      <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n        <mat-form-field>\n          <input matInput placeholder=\"Website\" [formControl]=\"form.controls['url']\" type=\"url\">\n        </mat-form-field>\n        <small *ngIf=\"form.controls['url'].hasError('required') && form.controls['url'].touched\" class=\"text-danger font-14\">You must include a web address.</small>\n        <small *ngIf=\"form.controls['url'].errors?.url && form.controls['url'].touched\" class=\"text-danger font-14\">You must include a valid web address.</small>\n      </div>\n\n      <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n        <mat-form-field>\n              <input matInput [matDatepicker]=\"picker\" [formControl]=\"form.controls['date']\" placeholder=\"Choose a date\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>  \n          <mat-hint *ngIf=\"form.controls['date'].hasError('required') && form.controls['date'].touched\" class=\"text-danger font-14\">You must include a date.</mat-hint>\n          <mat-hint *ngIf=\"form.controls['date'].errors?.date && form.controls['date'].touched\" class=\"text-danger font-14\">You must include a valid date.</mat-hint>\n      </div>\n\n      <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n        <mat-form-field>\n          <input matInput placeholder=\"Number range (between 5 and 9)\" [formControl]=\"form.controls['range']\">\n        </mat-form-field>\n        <small *ngIf=\"form.controls['range'].hasError('required') && form.controls['range'].touched\" class=\"text-danger font-14\">You must enter a number.</small>\n        <small *ngIf=\"form.controls['range'].errors?.range && form.controls['range'].touched\" class=\"text-danger font-14\">Number should be between 5 and 9.</small>\n      </div>\n     <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n        <mat-form-field>\n          <input matInput placeholder=\"Phone number\" [formControl]=\"form.controls['phone']\" type=\"text\">\n        </mat-form-field>\n        <small *ngIf=\"form.controls['phone'].hasError('required') && form.controls['phone'].touched\" class=\"text-danger font-14\">You must include phone number.</small>\n        <small *ngIf=\"form.controls['phone'].errors?.phone && form.controls['phone'].touched\" class=\"text-danger font-14\">You must include a valid phone number.</small>\n      </div>\n\n    \t<div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n        <mat-form-field>\n          <input matInput placeholder=\"Password\" [formControl]=\"form.controls['password']\" type=\"password\">\n        </mat-form-field>\n    \t\t<small *ngIf=\"form.controls['password'].hasError('required') && form.controls['password'].touched\" class=\"text-danger font-14\">You must include password.</small>\n      </div>\n\n      <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n        <mat-form-field>\n          <input matInput placeholder=\"Confirm Password\" [formControl]=\"form.controls['confirmPassword']\" type=\"password\">\n        </mat-form-field>\n    \t\t<small *ngIf=\"form.controls['confirmPassword'].hasError('required') && form.controls['confirmPassword'].touched\" class=\"text-danger font-14\">You must include confirm password.</small>\n    \t\t<small *ngIf=\"form.controls['confirmPassword'].errors?.equalTo\" class=\"text-danger font-14\">Passwords do not math.</small>\n    \t</div>\n\n      <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n        <label class=\"m-r-20\">Gender :</label>\n    \t  <mat-radio-group [formControl]=\"form.controls['gender']\">\n      \t  <mat-radio-button value=\"male\" class=\"m-r-10\">Male</mat-radio-button>\n      \t  <mat-radio-button value=\"female\">Female</mat-radio-button>\n      \t</mat-radio-group>\n        <small *ngIf=\"!form.controls['gender'].valid && form.controls['gender'].touched\" class=\"mat-text-warn\">You must select a gender.</small>\n      </div>\n    </div>\n    \n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!form.valid\">Submit</button>\n    </mat-card-actions>\n  </form>\n    </mat-card-content>    \n</mat-card>","import { Component } from '@angular/core';\nimport { DateAdapter } from '@angular/material/core';\nimport {FormControl} from '@angular/forms';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\n\n\n@Component({\n  selector: 'app-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss']\n\n})\nexport class DatepickerComponent {\n    // this is for the start date\n    startDate = new Date(1990, 0, 1);\n\n    // Datepicker selected value\n    date = new FormControl(new Date());\n    serializedDate = new FormControl((new Date()).toISOString());\n\n    // Datepicker input and change event\n\n    events: string[] = [];\n\n    addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n        this.events.push(`${type}: ${event.value}`);\n    }\n\n\n}\n","<!-- ============================================================== -->\n<!-- Fixed height Card Grid-->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n    <mat-card>\n        <mat-card-content>\n            <mat-card-title>Basic Datepicker</mat-card-title>\n            <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\n            <mat-form-field>\n              <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n\n        </mat-card-content>\n\n    </mat-card>\n    </div>\n    <!-- Grid-->\n    <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\" >\n    <mat-card>\n        <mat-card-content>\n            <mat-card-title>Datepicker start date</mat-card-title>\n            <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\n           <mat-form-field>\n              <input matInput [matDatepicker]=\"picker2\" placeholder=\"Choose a date\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n              <mat-datepicker #picker2 startView=\"year\" [startAt]=\"startDate\"></mat-datepicker>\n            </mat-form-field>\n\n        </mat-card-content>\n\n    </mat-card>\n    </div>\n     <!-- Grid-->\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" >\n    <mat-card>\n        <mat-card-content>\n            <mat-card-title>Datepicker selected value</mat-card-title>\n            <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\n           <mat-form-field>\n              <input matInput [matDatepicker]=\"picker3\" placeholder=\"Angular forms\" [formControl]=\"date\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\n              <mat-datepicker #picker3></mat-datepicker>\n            </mat-form-field>\n\n            <mat-form-field>\n              <input matInput [matDatepicker]=\"picker4\" placeholder=\"Angular forms (w/ deserialization)\"\n                     [formControl]=\"serializedDate\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker4\"></mat-datepicker-toggle>\n              <mat-datepicker #picker4></mat-datepicker>\n            </mat-form-field>\n\n            <mat-form-field>\n              <input matInput [matDatepicker]=\"picker5\" placeholder=\"Value binding\" [value]=\"date.value\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker5\"></mat-datepicker-toggle>\n              <mat-datepicker #picker5></mat-datepicker>\n            </mat-form-field>\n\n        </mat-card-content>\n\n    </mat-card>\n    </div>\n    <!-- Grid-->\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" >\n    <mat-card>\n        <mat-card-content>\n            <mat-card-title>Datepicker input and change events</mat-card-title>\n            <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\n           <mat-form-field>\n              <input matInput [matDatepicker]=\"picker6\" placeholder=\"Input & change events\"\n                     (dateInput)=\"addEvent('input', $event)\" (dateChange)=\"addEvent('change', $event)\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker6\"></mat-datepicker-toggle>\n              <mat-datepicker #picker6></mat-datepicker>\n            </mat-form-field>\n\n            <div class=\"b-all p-20\">\n              <div *ngFor=\"let e of events\">{{e}}</div>\n            </div>\n\n        </mat-card-content>\n\n    </mat-card>\n    </div>\n    <!-- Grid-->\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" >\n    <mat-card>\n        <mat-card-content>\n            <mat-card-title>Disabled datepicker</mat-card-title>\n            <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\n           <p>\n              <mat-form-field>\n                <input matInput [matDatepicker]=\"dp1\" placeholder=\"Completely disabled\" disabled>\n                <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\n                <mat-datepicker #dp1></mat-datepicker>\n              </mat-form-field>\n            </p>\n\n            <p>\n              <mat-form-field>\n                <input matInput [matDatepicker]=\"dp2\" placeholder=\"Popup disabled\">\n                <mat-datepicker-toggle matSuffix [for]=\"dp2\" disabled></mat-datepicker-toggle>\n                <mat-datepicker #dp2></mat-datepicker>\n              </mat-form-field>\n            </p>\n\n            <p>\n              <mat-form-field>\n                <input matInput [matDatepicker]=\"dp3\" placeholder=\"Input disabled\" disabled>\n                <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\n                <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\n              </mat-form-field>\n            </p>\n\n        </mat-card-content>\n\n    </mat-card>\n    </div>\n    <!-- Grid-->\n    <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" >\n    <mat-card>\n        <mat-card-content>\n            <mat-card-title>Datepicker touch UI</mat-card-title>\n            <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\n           <mat-form-field class=\"example-full-width\">\n              <input matInput [matDatepicker]=\"picker7\" placeholder=\"Choose a date\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker7\"></mat-datepicker-toggle>\n              <mat-datepicker touchUi=\"true\" #picker7></mat-datepicker>\n            </mat-form-field>\n\n        </mat-card-content>\n    </mat-card>\n    </div>\n    <!-- Grid-->\n    <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" >\n    <mat-card>\n        <mat-card-content>\n            <mat-card-title>Datepicker open method</mat-card-title>\n            <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\n           <mat-form-field class=\"example-full-width\">\n              <input matInput [matDatepicker]=\"picker8\" placeholder=\"Choose a date\">\n              <mat-datepicker #picker8></mat-datepicker>\n            </mat-form-field>\n            <button mat-raised-button (click)=\"picker8.open()\">Open</button>\n        </mat-card-content>\n    </mat-card>\n    </div>\n    <!-- Grid-->\n    \n</div>    "]}