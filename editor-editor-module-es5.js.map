{"version":3,"sources":["webpack:///src/app/editor/store/news-editor.effects.ts","webpack:///src/app/editor/editor.module.ts","webpack:///node_modules/rxjs-compat/add/observable/of.js","webpack:///src/app/editor/list/list.component.ts","webpack:///src/app/editor/list/list.component.html","webpack:///src/app/editor/review/review.component.ts","webpack:///src/app/editor/review/review.component.html","webpack:///src/app/editor/add-to-list-dialog/add-to-list-dialog.component.ts","webpack:///src/app/editor/add-to-list-dialog/add-to-list-dialog.component.html","webpack:///src/app/editor/notes-dialog/notes-dialog.component.ts","webpack:///src/app/editor/notes-dialog/notes-dialog.component.html","webpack:///src/app/editor/edit/edit.component.ts","webpack:///src/app/editor/edit/edit.component.html","webpack:///node_modules/rxjs/add/observable/of.js","webpack:///src/app/editor/editor-dashboard/editor-dashboard.component.ts","webpack:///src/app/editor/editor-dashboard/editor-dashboard.component.html","webpack:///src/app/editor/editor.routing.ts","webpack:///src/app/editor/services/editor-news.service.ts"],"names":["NewsEditorEffects","actions$","newsService","GetMyNews$","pipe","action","getReviewNews","data","console","log","ApproveNews$","approveNews","payload","id","RejectNews$","reJectNews","getLists$","getNewsLists","getListsByDate$","getNewsListsByDate","date","AddToList$","addNewsToList","list_id","news_id","RemoveFromList$","removeNewsFromList","UpdateListOrder$","orderList","GetSelectedList$","getSelectedList","UpdateSelectedList$","updateSelectedList","EditorModule","forChild","forRoot","forFeature","imports","declarations","entryComponents","Object","defineProperty","exports","value","rxjs_1","Observable","of","ListComponent","dialog","store","router","updates$","overlay","dragulaService","displayedColumns","displayedColumnsPublished","sidePanelOpened","sidePanelOpened_noNews","show_list_date","Date","show_list_date_f","destroy$","subs","add","dropModel","subscribe","sourceModel","targetModel","item","post_str","forEach","news","index","selectedList","dispatch","sub","select","news_store","ReviewNews","lists","list","element","dataSource","NewsListDataSource","list_news","val","settings_selected_list","dialogRef","open","width","afterClosed","result","height","maxHeight","componentInstance","onAdd","_list_id","sidenav","toggle","window","matchMedia","matches","next","event","loadDateList","sideBarToggle","selector","templateUrl","styleUrls","paginator","staticData","ReviewComponent","review_news_count","init_news$","isLoaded","keys","length","reviewList","selectedNews","toApprove","onReject","url","navigateByUrl","skipLocationChange","onEdit","rejectNews","AddToListDialogComponent","apiService","onDelete","onUndo","displayedColumnsBreaker","getTodaysNews","newsData","loadDataSource","news_data","checkIfInList","dataSource1","dataSource2","dataSource3","dataSource4","dataSource5","dataSource6","dataSourceBreakers","emit","news_re","i_index","found","list_index","confirmation","close","closeDialog","NotesDialogComponent","editorNotes","RejectNotes","tmpNote","noteInp","addNote","doReject","newsId","notes","containNotes","note","push","EditComponent","snackBar","aRoute","location","news_bar","ticker_news","edit_id","snapshot","params","tickerEnabled","submitted","loaded","loaded2","loadEditNews","editNews","response","new_news","language","language_code","dhivehiEnabled","error","message","draft","updateNews","navigate","nBar","newsbar","barId","ticker","tickernews","tickerIndex","splice","JSON","stringify","e","ev","el","nativeElement","selectionStart","start","end","selectionEnd","substr","newBodyText","toString","body","selectionchange","basicMenu","EditorDashboardComponent","NewsEditorRoutes","path","children","component","role","EditorNewsService","http","apiUrl","get","post","reject","save_news","headers","newsstatus_id","parse","put","ordered_list","providedIn"],"mappings":"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ACA;;AAQJ;;AAIA;;AACA;;AACE;;AACA;;AAgBF;;AACA;;AAEA;;AACA;;AACF;;AACF;;AACJ;;AACF;;AAQA;;AACE;;AACI;;AACE;;AAKE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAIF;;AAGA;;AACI;;AACA;;AAQJ;;AAIA;;AACA;;AACE;;AACA;;AAgBF;;AACA;;AAEA;;AACA;;AACF;;AACF;;AACJ;;AACF;;AASA;;AACE;;AACI;;AACE;;AAKE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAIF;;AAGA;;AACI;;AACA;;AAQJ;;AAIA;;AACA;;AACE;;AACA;;AAgBF;;AACA;;AAEA;;AACA;;AACF;;AACF;;AACJ;;AACF;;AASA;;AACE;;AACI;;AACE;;AAKE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAIF;;AAGA;;AACI;;AACA;;AAQJ;;AAIA;;AACA;;AACE;;AACA;;AAgBF;;AACA;;AAEA;;AACA;;AACF;;AACF;;AACJ;;AACF;;AASA;;AACE;;AACI;;AACE;;AAKE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAIF;;AAGA;;AACI;;AACA;;AAQJ;;AAIA;;AACA;;AACE;;AACA;;AAgBF;;AACA;;AAEA;;AACA;;AACF;;AACF;;AACJ;;AACF;;AASA;;AACE;;AACI;;AACE;;AAKE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAIF;;AAGA;;AACI;;AACA;;AAQJ;;AAIA;;AACA;;AACE;;AACA;;AAgBF;;AACA;;AAEA;;AACA;;AACF;;AACF;;AACJ;;AACF;;AASA;;AACE;;AACI;;AACE;;AAKE;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AACF;;AAGA;;AACE;;AACA;;AAIF;;AAGA;;AACI;;AACA;;AAQJ;;AAIA;;AACA;;AACE;;AACA;;AAgBF;;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","file":"editor-editor-module-es5.js","sourcesContent":["\nimport {catchError, mergeMap,  map } from 'rxjs/operators';\nimport { EditorNewsService } from './../services/editor-news.service';\nimport { Injectable } from '@angular/core';\nimport { Observable ,  of } from 'rxjs';\nimport { Action } from '@ngrx/store';\n\n\n\n\nimport {Actions, Effect, ofType} from '@ngrx/effects';\n\nimport * as NewsActions from './news-editor.actions';\nimport { News } from '../../news/models/news';\n\n@Injectable()\nexport class NewsEditorEffects {\n\n  constructor(\n    private actions$: Actions,\n    private newsService: EditorNewsService,\n  ) { }\n\n  @Effect()\n  GetMyNews$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.GetReviewNews>(NewsActions.GET_REVIEW_NEWS),\n      mergeMap(action =>\n        this.newsService.getReviewNews().pipe(\n        map((data) => {\n          console.log(data);\n          return new NewsActions.GetReviewNewsSuccess(data);\n        }),\n        catchError(() => of(new NewsActions.GetReviewNewsError())),)\n      )\n    );\n\n  @Effect()\n  ApproveNews$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.ApproveNews>(NewsActions.APPROVE_NEWS),\n      mergeMap(action =>\n        this.newsService.approveNews(action.payload.id).pipe(\n        map((data) => {\n          console.log(data);\n          return new NewsActions.ApproveNewsSuccess({ id: action.payload.id });\n        }),\n        catchError(() => of(new NewsActions.ApproveNewsError())),)\n      )\n    );\n\n  @Effect()\n  RejectNews$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.RejectNews>(NewsActions.REJECT_NEWS),\n      mergeMap(action =>\n        this.newsService.reJectNews(action.payload).pipe(\n        map((data) => {\n          console.log(data);\n          return new NewsActions.RejectNewsSuccess(action.payload);\n        }),\n        catchError(() => of(new NewsActions.RejectNewsError())),)\n      )\n    );\n\n  // @Effect()\n  // GetTrashNews$: Observable<Action> = this.actions$.\n  //   ofType<NewsActions.GetReviewNews>(NewsActions.GET_REVIEW_NEWS)\n  //   .mergeMap(action =>\n  //     this.newsService.trashNews(action.payload.perPage, action.payload.currentPage)\n  //     .map((data) => {\n  //       return new NewsActions.GetReviewNewsSuccess(data);\n  //     })\n  //     .catch(() => of(new NewsActions.GetReviewNewsError()))\n  //   );\n\n  @Effect()\n  getLists$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.GetLists>(NewsActions.GET_LISTS),\n      mergeMap(action =>\n        this.newsService.getNewsLists().pipe(\n        map((data) => {\n          console.log(data);\n          // new NewsActions.GetSelectedList(); //load selected list\n          return new NewsActions.GetListsSuccess(data);\n        }),\n        catchError(() => of(new NewsActions.GetListsError())),)\n      )\n    );\n\n\n  @Effect()\n  getListsByDate$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.GetListsByDate>(NewsActions.GET_LISTS_BY_DATE),\n      mergeMap(action =>\n        this.newsService.getNewsListsByDate(action.payload.date).pipe(\n        map((data) => {\n          console.log(data);\n          // new NewsActions.GetSelectedList(); //load selected list\n          return new NewsActions.GetListsByDateSuccess(data);\n        }),\n        catchError(() => of(new NewsActions.GetListsByDateError())),)\n      )\n    );\n\n\n  @Effect()\n  AddToList$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.AddToList>(NewsActions.ADD_TO_LIST),\n      mergeMap(action =>\n        this.newsService.addNewsToList({ list_id: action.payload.list_id, news_id: action.payload.news_id }).pipe(\n        map((data) => {\n          console.log(data);\n          return new NewsActions.AddToListSuccess(data);\n        }),\n        catchError(() => of(new NewsActions.AddToListError())),)\n      )\n    );\n\n\n  @Effect()\n  RemoveFromList$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.RemoveFromList>(NewsActions.REMOVE_FROM_LIST),\n      mergeMap(action =>\n        this.newsService.removeNewsFromList(action.payload.id).pipe(\n        map((data) => {\n          //console.log(data);\n          return new NewsActions.RemoveFromListSuccess(data);\n        }),\n        catchError(() => of(new NewsActions.RemoveFromListError())),)\n      )\n    );\n\n\n  @Effect()\n  UpdateListOrder$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.UpdateListOrder>(NewsActions.UPDATE_LIST_ORDER),\n      mergeMap(action =>\n        this.newsService.orderList(action.payload).pipe(\n        map((data) => {\n          //console.log(data);\n          return new NewsActions.UpdateListOrderSuccess(data);\n        }),\n        catchError(() => of(new NewsActions.UpdateListOrderError())),)\n      )\n    );\n\n\n  @Effect()\n  GetSelectedList$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.GetSelectedList>(NewsActions.GET_SELECTED_LIST),\n      mergeMap(action =>\n        this.newsService.getSelectedList().pipe(\n        map((data) => {\n          //console.log(data);\n          return new NewsActions.GetSelectedListSuccess({ list_id: data });\n        }),\n        catchError(() => of(new NewsActions.GetSelectedListError())),)\n      )\n    );\n\n  @Effect()\n  UpdateSelectedList$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<NewsActions.UpdateSelectedList>(NewsActions.UPDATE_SELECTED_LIST),\n      mergeMap(action =>\n        this.newsService.updateSelectedList(action.payload.list_id).pipe(\n        map((data) => {\n          //console.log(data);\n          return new NewsActions.UpdateSelectedListSuccess({ list_id: data });\n        }),\n        catchError(() => of(new NewsActions.UpdateSelectedListError())),)\n      )\n    );\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { NewsEditorRoutes } from './editor.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\n/*import { DragulaModule } from 'ng2-dragula/ng2-dragula';*/\nimport { DragulaModule } from 'ng2-dragula';\n\nimport { EditorDashboardComponent } from './editor-dashboard/editor-dashboard.component';\nimport { ReviewComponent } from './review/review.component';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { NewsEditorEffects } from './store/news-editor.effects';\nimport { reducer } from './store/news-editor.reducer';\nimport { NotesDialogComponent } from './notes-dialog/notes-dialog.component';\nimport { EditComponent } from './edit/edit.component';\n\nimport { SharedModule } from '../shared/shared.module';\nimport { ListComponent } from './list/list.component';\nimport { AddToListDialogComponent } from './add-to-list-dialog/add-to-list-dialog.component';\n\nimport { ContextMenuModule } from 'ngx-contextmenu';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(NewsEditorRoutes),\n    FormsModule,\n    DemoMaterialModule,\n    FlexLayoutModule,\n    PerfectScrollbarModule,\n    DragulaModule.forRoot(),\n    SharedModule,\n    StoreModule.forFeature('ReviewNews', reducer),\n    EffectsModule.forFeature([NewsEditorEffects]),\n    ContextMenuModule.forRoot(),\n  ],\n  declarations: [\n    EditorDashboardComponent,\n    ReviewComponent,\n    NotesDialogComponent,\n    AddToListDialogComponent,\n    EditComponent,\n    ListComponent,\n  ],\n  entryComponents: [NotesDialogComponent, AddToListDialogComponent]\n})\nexport class EditorModule { }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar rxjs_1 = require(\"rxjs\");\nrxjs_1.Observable.of = rxjs_1.of;\n//# sourceMappingURL=of.js.map","\nimport {takeUntil} from 'rxjs/operators';\nimport { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Router } from '@angular/router';\n\nimport { Store } from '@ngrx/store';\nimport { News, NewsList, ListNews, ListOrder } from './../../news/models/news';\nimport * as editorActions from '../store/news-editor.actions';\nimport {Actions, ofType} from '@ngrx/effects';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataSource } from '@angular/cdk/table';\nimport { Observable, Subject } from 'rxjs';\n\nimport { ViewNewsDialogComponent } from '../../shared/component/view-news-dialog/view-news-dialog.component';\nimport { AddToListDialogComponent } from '../add-to-list-dialog/add-to-list-dialog.component';\n\nimport {Overlay} from '@angular/cdk/overlay';\nimport { DragulaService } from 'ng2-dragula';\nimport { formatDate } from \"@angular/common\";\nimport {Subscription} from \"Rxjs\";\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit, OnDestroy {\n\n  displayedColumns = ['news_name', 'heading', 'date', 'status', 'actions'];\n  displayedColumnsPublished = ['news_name', 'heading', 'date', 'status'];\n  // dataSource = new NewsListDataSource(this.selectedList);\n  dataSource;\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n  pageEvent: PageEvent;\n\n  sidePanelOpened = true;\n  sidePanelOpened_noNews = true;\n\n  lists; // : NewsList[] = [];\n  selectedList: NewsList;\n  settings_selected_list: any;\n\n  view_dialog$: any;\n\n  // initializers\n  init_news$;\n\n  //date for selected dates lists\n  show_list_date = new Date();\n  show_list_date_f = formatDate(new Date(), 'dd/MM/yyyy', 'en-US');\n\n  @ViewChild('sidebar', {static: true}) sidenav: MatSidenav;\n\n  private destroy$ = new Subject();\n  subs = new Subscription();\n\n  constructor(\n    public dialog: MatDialog,\n    private store: Store<any>,\n    private router: Router,\n    private updates$: Actions,\n    private overlay: Overlay,\n    private dragulaService: DragulaService\n    ) {\n\n      this.subs.add(this.dragulaService.dropModel('news-list')\n        .subscribe(({ sourceModel, targetModel, item }) => {\n\n            let post_str: ListOrder[] = [];\n            targetModel.forEach((news, index) => {\n              post_str[index] = new ListOrder(this.selectedList.id, news.id, index + 1);\n              console.log(post_str)\n            });\n\n            //update order\n            this.store.dispatch(new editorActions.UpdateListOrder(post_str));\n\n            // update selected list selection\n            this.updates$\n              .pipe(ofType(editorActions.UPDATE_LIST_ORDER_SUCCESS))\n              .subscribe(() => {\n                let sub = this.store.select(news_store => news_store.ReviewNews.lists)\n                  .subscribe(list => {\n                    list.forEach((element: NewsList) => {\n                      if (element.id === this.selectedList.id) {\n                        this.selectedList = element\n                        this.dataSource = new NewsListDataSource(element.list_news);\n                        // sub.unsubscribe();\n                      }\n                    });\n                  });\n            });\n\n          }\n        )\n      );\n\n    }\n\n\n\n      /*this.dragulaService.dropModel('news-list').pipe(\n        takeUntil(this.destroy$)\n      ).subscribe((result) => {\n        let post_str: ListOrder[] = [];\n        this.selectedList.list_news.forEach((news, index) => {\n          post_str[index] = new ListOrder(this.selectedList.id, news.id, index + 1);\n          console.log(post_str)\n        });\n\n          //update order\n          this.store.dispatch(new editorActions.UpdateListOrder(post_str));\n\n          // update selected list selection\n          this.updates$\n          .pipe(ofType(editorActions.UPDATE_LIST_ORDER_SUCCESS))\n          .subscribe(() => {\n            let sub = this.store.select(news_store => news_store.ReviewNews.lists)\n            .subscribe(list => {\n              list.forEach((element: NewsList) => {\n                if (element.id === this.selectedList.id) {\n                  this.selectedList = element\n                  this.dataSource = new NewsListDataSource(element.list_news);\n                  // sub.unsubscribe();\n                }\n              });\n            });\n          });\n        }\n      );\n    }*/\n\n  ngOnInit() {\n    // this.init_news$ = this.store.select(store => store.ReviewNews.isListLoaded)\n    // .take(1)\n    // .subscribe(\n    //   (isLoaded) => {\n    //     if (!isLoaded) {\n    //       console.log('Loading News Lists!');\n    //       this.store.dispatch(new editorActions.GetLists());\n    //     } else {\n    //       this.lists = this.store.select(news_store => news_store.ReviewNews.lists);\n    //     }\n    //   }\n    // );\n    this.store.dispatch(new editorActions.GetLists());\n\n    //this.lists = this.store.select(news_store => news_store.ReviewNews.lists);\n\n    this.updates$\n      .pipe(ofType(editorActions.GET_LISTS_SUCCESS))\n      .subscribe(() => {\n        this.store.dispatch(new editorActions.GetSelectedList());\n      });\n    //this.store.dispatch(new editorActions.GetSelectedList());\n\n    this.updates$\n      .pipe(ofType(editorActions.GET_SELECTED_LIST_SUCCESS))\n      .subscribe(() => {\n        this.lists = this.store.select(news_store => news_store.ReviewNews.lists);\n\n        this.store.select(news_store => news_store.ReviewNews.selectedList)\n          .subscribe(val => {\n            this.settings_selected_list = val;\n          });\n\n      });\n  }\n\n  onSelectList(list: NewsList) {\n    if (this.selectedList && this.selectedList.id === list.id) {\n      this.selectedList = null;\n    }else {\n      this.selectedList = list;\n      this.dataSource = new NewsListDataSource(list.list_news);\n    }\n    console.log('LIST SELECTION')\n  }\n\n  viewNews(news: News) {\n    let dialogRef = this.dialog.open(ViewNewsDialogComponent, { width: '90%', data: news });\n\n    dialogRef.afterClosed().subscribe((result: string) => {\n      dialogRef = null;\n      if (result) {\n      }\n    });\n\n    return false;\n  }\n\n  addNewsToList(id: number) {\n    let dialogRef = this.dialog.open(AddToListDialogComponent, { width: '95%', height: '90%', maxHeight: '95%', data: { list: this.selectedList } });\n\n    dialogRef.componentInstance.onAdd.subscribe((result: any) => {\n      console.log(result);\n\n      this.updates$\n        .pipe(ofType(editorActions.ADD_TO_LIST_SUCCESS))\n        .subscribe(() => {\n\n          this.store.select(news_store => news_store.ReviewNews.lists)\n          .subscribe(list => {\n            list.forEach((element: NewsList) => {\n              if (element.id === result.list_id) {\n                this.selectedList = element\n                this.dataSource = new NewsListDataSource(element.list_news);\n              }\n            });\n          });\n\n        });\n    });\n\n    dialogRef.afterClosed().subscribe((result: string) => {\n      dialogRef = null;\n      if (result) {\n      }\n    });\n\n    return false;\n  }\n\n  deleteNews (news_id: number, list_id: number) {\n\n    this.store.dispatch(new editorActions.RemoveFromList({ id: news_id }));\n\n    this.updates$\n    .pipe(ofType(editorActions.REMOVE_FROM_LIST_SUCCESS))\n    .subscribe(() => {\n      this.store.select(news_store => news_store.ReviewNews.lists)\n      .subscribe(list => {\n        list.forEach((element: NewsList) => {\n          if (element.id === list_id) {\n            // console.log('LISTTTTTTTTTTT'+news_id)\n            this.selectedList = element\n            this.dataSource = new NewsListDataSource(element.list_news);\n          }\n        });\n      });\n\n    });\n  }\n\n  updateSelectedList(_list_id: number) {\n    console.log(_list_id)\n    this.store.dispatch(new editorActions.UpdateSelectedList({ list_id: _list_id }));\n  }\n\n  sideBarToggle() {\n    this.sidenav.toggle();\n  }\n\n  isOver(): boolean {\n    return window.matchMedia(`(max-width: 960px)`).matches;\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n  }\n\n  // Load Lists for selected date\n  loadDateList(event) {\n\n    this.show_list_date = new Date(event);\n    this.show_list_date_f = formatDate(event, 'yyyy-M-dd', 'en-US');\n    console.log(this.show_list_date_f);\n\n\n    //get selected date's lists\n    this.store.dispatch(new editorActions.GetListsByDate({ date: this.show_list_date_f }));\n\n    this.updates$\n      .pipe(ofType(editorActions.GET_LISTS_BY_DATE_SUCCESS))\n      .subscribe(() => {\n        this.store.dispatch(new editorActions.GetSelectedList());\n      });\n    //this.store.dispatch(new editorActions.GetSelectedList());\n\n    this.updates$\n      .pipe(ofType(editorActions.GET_SELECTED_LIST_SUCCESS))\n      .subscribe(() => {\n        this.lists = this.store.select(news_store => news_store.ReviewNews.lists);\n\n        this.store.select(news_store => news_store.ReviewNews.selectedList)\n          .subscribe(val => {\n            this.settings_selected_list = val;\n          });\n\n      });\n\n  }\n\n}\n\n\n\nexport class NewsListDataSource extends DataSource<ListNews> {\n  constructor(private staticData: ListNews[]) {\n    super();\n  }\n\n  connect(): Observable<ListNews[]> {\n    return Observable.of(this.staticData);\n  }\n\n  disconnect() {}\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center start\">\n  <div fxFlex.gt-md=\"100\" fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n    <mat-card class=\"mat-card-top\">\n      <mat-sidenav-container [ngClass]=\"{ 'side-panel-opened': sidePanelOpened, 'side-panel-closed': !sidePanelOpened }\">\n\n        <mat-sidenav #sidebar [mode]=\"isOver() ? 'over' : 'side'\" [opened]=\"!isOver()\" (open)=\"sidePanelOpened = true || sidePanelOpened_noNews == true\"\n        (close)=\"sidePanelOpened = false || sidePanelOpened_noNews == false\">\n          <mat-toolbar color=\"primary\" class=\"no-shadow\">\n            <div fxLayout=\"row\" fxFlex=\"100\" >\n              <span class=\"m-t-0 font-14\">\n                <!-- <button mat-icon-button class=\"mr-1\"><mat-icon>inbox</mat-icon></button> -->\n\n                <mat-form-field>\n                  <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"show_list_date\" (ngModelChange)=\"loadDateList($event)\">\n                  <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                  <mat-datepicker #picker></mat-datepicker>\n                </mat-form-field>\n\n              </span>\n            </div>\n          </mat-toolbar>\n\n          <mat-nav-list>\n            <mat-list-item (click)=\"onSelectList(list)\" *ngFor=\"let list of lists | async\" [style.background-color]=\"list==selectedList ? 'rgba(127, 255, 212, 0.6)' : 'rgba(255, 255, 255, 0)'\">\n              <mat-icon *ngIf=\"list==selectedList\" color=\"primary\">subdirectory_arrow_right</mat-icon>\n\n              <h3 matLine> {{list.name}} </h3>\n              <p matLine class=\"text-muted\"> {{list.list_news.length}} </p>\n\n              <mat-icon *ngIf=\"list.id == settings_selected_list\" color=\"warn\">offline_pin</mat-icon>\n\n              <button [matMenuTriggerFor]=\"them\" mat-icon-button class=\"ml-1\" *ngIf=\"list.id != settings_selected_list\">\n                <mat-icon>more_vert</mat-icon>\n              </button>\n              <mat-menu #them=\"matMenu\" x-position=\"before\">\n                <button mat-menu-item color=\"primary\" (click)=\"updateSelectedList(list.id)\">Set Selected</button>\n              </mat-menu>\n\n\n            </mat-list-item>\n          </mat-nav-list>\n        </mat-sidenav>\n\n        <mat-toolbar class=\"bg-success no-shadow chat-right-panel\" color=\"warn\">\n          <div fxLayout=\"row\" fxFlex=\"100\" fxLayoutAlign=\"center center\">\n            <button (click)=\"sideBarToggle()\" class=\"mr-1\" mat-icon-button>\n              <mat-icon>short_text</mat-icon>\n            </button>\n            <!-- <span class=\"top-avatar m-r-10\">\n              <img src=\"{{selectedMessage.photo}}\" class=\"img-circle\">\n            </span> -->\n            <div fxFlex>\n              <div class=\"font-14\" *ngIf=\"selectedList\">{{ selectedList.created_at | date }} {{ selectedList.name }}</div>\n            </div>\n            <div fxFlex>\n              <!--<div class=\"font-14\" *ngIf=\"selectedNews\">News</div>-->\n            </div>\n            <!-- <button [matMenuTriggerFor]=\"them\" mat-icon-button class=\"ml-1\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #them=\"matMenu\" x-position=\"before\">\n              <button mat-menu-item color=\"primary\" [disabled]=\"!selectedNews\">Approve</button>\n              <button mat-menu-item color=\"warn\" [disabled]=\"!selectedNews\">Reject</button>\n              <button mat-menu-item color=\"link\" [disabled]=\"!selectedNews\">Edit</button>\n            </mat-menu> -->\n          </div>\n        </mat-toolbar>\n\n        <mat-card-content class=\"chat-middle-box\" style=\"min-height:700px;\">\n          <!-- selected list -->\n          <div class=\"table-rasponsive\" *ngIf=\"selectedList\">\n\n            <div class=\"table\">\n              <div class=\"table-header\">\n                <div class=\"header__item column-news_name\">News Name</div>\n                <div class=\"header__item column-heading\">Heading</div>\n                <div class=\"header__item column-date\">Date</div>\n                <div class=\"header__item column-actions\">Actions</div>\n              </div>\n              <div class=\"table-content\" [dragula]=\"'news-list'\" [dragulaModel]=\"selectedList.list_news\">\n                <div class=\"table-row status_{{news.news.newsstatus.status}}\" *ngFor=\"let news of selectedList.list_news\" id=\"{{ news.news.id }}\">\n                  <div class=\"table-data column-news_name\">{{ news.news.news_name }}</div>\n\n                  <div class=\"table-data column-heading dhv\" *ngIf=\"news.news.language.language_code === 'Dhv'\">{{ news.news.heading }}</div>\n                  <div class=\"table-data column-heading\" *ngIf=\"news.news.language.language_code != 'Dhv'\">{{ news.news.heading }}</div>\n\n                  <div class=\"table-data column-date\" matTooltip=\"{{ news.news.created_at}}\" matTooltipPosition=\"below\">{{ news.news.created_at | date }}</div>\n                  <div class=\"table-data column-actions\">\n                      <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.news)\" *ngIf=\"news.news.newsstatus.status != 'breaker'\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                          <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                      </button>\n\n                      <button mat-icon-button color=\"warn\" (click)=\"deleteNews(news.id, selectedList.id)\" matTooltip=\"Remove News\" matTooltipPosition=\"below\">\n                        <mat-icon aria-label=\"Edit\">delete</mat-icon>\n                      </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </mat-card-content>\n\n        <mat-card-actions class=\"chat-footer\">\n            <div align=\"end\">\n              <button mat-raised-button color=\"primary\" [disabled]=\"!selectedList\" (click)=\"addNewsToList(selectedList.id)\">Add News To List</button>\n              <!-- <button mat-button color=\"basic\" [disabled]=\"!selectedNews\" (click)=\"onEdit()\">Edit</button>\n              <button mat-raised-button color=\"warn\" [disabled]=\"!selectedNews\" (click)=\"rejectNews()\">Reject</button>\n              <button mat-raised-button color=\"primary\" [disabled]=\"!selectedNews\" (click)=\"approveNews(selectedNews)\">Approve</button> -->\n            </div>\n          <!-- <div fxLayout=\"row\" layout-align=\"start center\">\n            <mat-form-field class=\"mr-1 ml-1\" fxFlex>\n              <input matInput placeholder=\"Send message\" >\n            </mat-form-field>\n            <button mat-fab color=\"warn\" >\n              <mat-icon>send</mat-icon>\n            </button>\n          </div> -->\n        </mat-card-actions>\n      </mat-sidenav-container>\n    </mat-card>\n  </div>\n</div>\n\n\n\n\n\n\n\n<!-- <mat-table #table [dataSource]=\"dataSource\">\n\n    <ng-container matColumnDef=\"news_name\">\n      <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n      <mat-cell *matCellDef=\"let listnews\"> {{ listnews.news.news_name | uppercase }} </mat-cell>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"heading\">\n      <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n      <mat-cell *matCellDef=\"let listnews\" [class.dhv_nosize]=\"listnews.news.language.language_code=='Dhv'\"> {{listnews.news.heading}} </mat-cell>\n    </ng-container>\n\n    <ng-container matColumnDef=\"date\">\n      <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n      <mat-cell *matCellDef=\"let listnews\" matTooltip=\"{{listnews.news.created_at | date:'medium'}}\" matTooltipPosition=\"below\"> {{listnews.news.created_at | date}} </mat-cell>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"status\">\n        <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n        <mat-cell *matCellDef=\"let listnews\">\n          <mat-chip-list>\n            <mat-chip selected=\"false\" *ngIf=\"listnews.news.newsstatus.status == 'draft'\">Draft</mat-chip>\n            <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"listnews.news.newsstatus.status == 'published'\">Approved</mat-chip>\n            <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"listnews.news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n            <mat-chip selected=\"true\" *ngIf=\"listnews.news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n          </mat-chip-list>\n      </mat-cell>\n    </ng-container>\n\n\n    <div>\n      <ng-container matColumnDef=\"actions\">\n        <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n        <mat-cell *matCellDef=\"let listnews\" style=\"display: flex; justify-content: flex-end;\">\n\n            <button mat-icon-button color=\"basic\" (click)=\"viewNews(listnews.news)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n            </button>\n\n            <button mat-icon-button color=\"warn\" (click)=\"deleteNews(listnews.id, selectedList.id)\" matTooltip=\"Remove News\" matTooltipPosition=\"below\">\n              <mat-icon aria-label=\"Edit\">delete</mat-icon>\n            </button>\n\n        </mat-cell>\n      </ng-container>\n    </div>\n\n    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n    <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\" [dragula]='\"task-group\"'></mat-row>\n  </mat-table> -->\n","import { Router } from '@angular/router';\nimport { ConfirmDialogComponent } from './../../shared/component/confirm-dialog/confirm-dialog.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\nimport { News } from './../../news/models/news';\nimport * as editorActions from '../store/news-editor.actions';\n\nimport { NotesDialogComponent, RejectNotes } from './../notes-dialog/notes-dialog.component';\n\n\n\n@Component({\n  selector: 'app-review',\n  templateUrl: './review.component.html',\n  styleUrls: ['./review.component.css']\n})\nexport class ReviewComponent implements OnInit {\n  them;\n  user;\n  sidePanelOpened = true;\n  sidePanelOpened_noNews = true;\n  review_news_count = null;\n\n  @ViewChild('sidebar', {static: true}) sidenav: MatSidenav;\n\n  // MESSAGE\n  selectedNews: News;\n  reviewList;\n\n  // initializers\n  init_news$;\n\n  constructor(\n    private store: Store<any>,\n    private dialog: MatDialog,\n    private router: Router\n  ) {\n    // this.selectedMessage = this.messages[1];\n  }\n\n  ngOnInit() {\n    // this.init_news$ = this.store.select(store => store.ReviewNews.isLoaded)\n    // .take(1)\n    // .subscribe(\n    //   (isLoaded) => {\n    //     if (!isLoaded) {\n    //       console.log('loading news for review');\n    //       this.store.dispatch(new editorActions.GetReviewNews());\n    //     }\n    //   }\n    // );\n    this.store.dispatch(new editorActions.GetReviewNews());\n\n    // no of news for approval count\n    this.init_news$ = this.store.select(store => store.ReviewNews)\n    .subscribe(\n      (ReviewNews) => {\n        if (ReviewNews.isLoaded) {\n          this.review_news_count = Object.keys(ReviewNews.news).length;\n          if (this.review_news_count <= 0) {\n            this.sideBarToggle();\n          }\n        }\n      }\n    );\n\n    this.reviewList = this.store.select(news_store => news_store.ReviewNews.news);\n  }\n\n  sideBarToggle() {\n    this.sidenav.toggle();\n  }\n\n  isOver(): boolean {\n    return window.matchMedia(`(max-width: 960px)`).matches;\n  }\n\n  onSelect(news: News): void {\n    if (this.selectedNews && this.selectedNews.id === news.id) {\n      this.selectedNews = null;\n    }else {\n      this.selectedNews = news;\n    }\n  }\n\n  approveNews(toApprove: News) {\n    this.store.dispatch(new editorActions.ApproveNews({ id: toApprove.id }));\n    this.selectedNews = null;\n  }\n\n  rejectNews() {\n\n    let dialogRef = this.dialog.open(NotesDialogComponent, { width: '50%', data: this.selectedNews });\n\n    dialogRef.afterClosed().subscribe((result: string) => {\n      dialogRef = null;\n      if (result) {\n      }\n    });\n    dialogRef.componentInstance.onReject.subscribe((result: RejectNotes) => {\n      this.store.dispatch(new editorActions.RejectNews(result));\n      this.selectedNews = null;\n    });\n\n    return false;\n  }\n\n  onEdit() {\n    if (this.selectedNews) {\n      const url = '/editor/edit/' + this.selectedNews.id;\n      this.router.navigateByUrl(url, { skipLocationChange: true });\n    }\n  }\n\n}\n","\n\n<div fxLayout=\"row\" fxLayoutAlign=\"center start\">\n  <div fxFlex.gt-md=\"100\" fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n    <mat-card class=\"mat-card-top\">\n      <mat-sidenav-container [ngClass]=\"{ 'side-panel-opened': sidePanelOpened, 'side-panel-closed': !sidePanelOpened }\">\n\n        <mat-sidenav #sidebar [mode]=\"isOver() ? 'over' : 'side'\" [opened]=\"!isOver()\" (open)=\"sidePanelOpened = true || sidePanelOpened_noNews == true\"\n        (close)=\"sidePanelOpened = false || sidePanelOpened_noNews == false\">\n          <mat-toolbar color=\"primary\" class=\"no-shadow\">\n            <div fxLayout=\"row\" fxFlex=\"100\" >\n              <span class=\"m-t-0 font-14\">\n                <button mat-icon-button class=\"mr-1\"><mat-icon>inbox</mat-icon></button>\n                News in Review\n              </span>\n            </div>\n          </mat-toolbar>\n\n          <mat-nav-list>\n            <mat-list-item (click)=\"onSelect(news)\" *ngFor=\"let news of reviewList | async\" [style.background-color]=\"news==selectedNews ? 'rgba(127, 255, 212, 0.6)' : 'rgba(255, 255, 255, 0)'\">\n              <!-- <img mat-list-avatar src=\"{{message.photo}}\" alt=\"\"> -->\n              <mat-icon *ngIf=\"news==selectedNews\" color=\"primary\">subdirectory_arrow_right</mat-icon>\n              <h3 matLine> {{news.news_name}} </h3>\n              <p matLine class=\"text-muted\"> {{news.user.name}} </p>\n            </mat-list-item>\n          </mat-nav-list>\n        </mat-sidenav>\n\n        <mat-toolbar class=\"bg-success no-shadow chat-right-panel\" color=\"warn\">\n          <div fxLayout=\"row\" fxFlex=\"100\" fxLayoutAlign=\"center center\">\n            <button (click)=\"sideBarToggle()\" class=\"mr-1\" mat-icon-button>\n              <mat-icon>short_text</mat-icon>\n            </button>\n            <!-- <span class=\"top-avatar m-r-10\">\n              <img src=\"{{selectedMessage.photo}}\" class=\"img-circle\">\n            </span> -->\n            <div fxFlex>\n              <div class=\"font-14\" *ngIf=\"selectedNews\">{{selectedNews.news_name}}</div>\n            </div>\n            <button [matMenuTriggerFor]=\"them\" mat-icon-button class=\"ml-1\">\n              <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #them=\"matMenu\" x-position=\"before\">\n              <button mat-menu-item color=\"primary\" [disabled]=\"!selectedNews\">Approve</button>\n              <button mat-menu-item color=\"warn\" [disabled]=\"!selectedNews\">Reject</button>\n              <button mat-menu-item color=\"link\" [disabled]=\"!selectedNews\">Edit</button>\n            </mat-menu>\n          </div>\n        </mat-toolbar>\n\n        <mat-card-content class=\"chat-middle-box\" style=\"min-height:700px;\">\n          <div  *ngIf=\"!selectedNews\">\n              <div class=\"login-register-box error-card text-center\" style=\"margin: 200px auto;\" *ngIf=\"review_news_count > 0\">\n                <img src=\"/assets/images/nothing-states/select_to_view.png\" style=\"width:auto; height:150px;\">\n                <p class=\"text-muted m-t-30 m-b-30\">Select a news from left sidebar to view</p>\n              </div>\n              <div class=\"login-register-box error-card text-center\" style=\"margin: 200px auto;\" *ngIf=\"review_news_count <= 0\">\n                <img src=\"/assets/images/nothing-states/nothing-to-approve.png\" style=\"width:auto; height:150px;\">\n                <h3 class=\"text-muted m-t-30 m-b-30\">No news to Approve !</h3>\n              </div>\n          </div>\n          <div *ngIf=\"selectedNews\">\n              <div fxLayout=\"column\" fxLayoutWrap=\"wrap\">\n                  <!-- title column -->\n                  <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" [class.dhv-title]=\"selectedNews.language.language_code == 'Dhv'\">\n                      {{selectedNews.heading}}\n                  </div>\n                  <!-- hr column -->\n                  <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n                    <mat-divider></mat-divider>\n                  </div>\n                  <!-- news body column -->\n                  <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n                      <div [innerHTML]=\"selectedNews.body\" style=\"white-space: pre-wrap\" [class.dhv]=\"selectedNews.language.language_code == 'Dhv'\"></div>\n                  </div>\n                  <!-- hr column -->\n                  <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n                    <mat-divider></mat-divider>\n                  </div>\n                  <!-- news bars column -->\n                  <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n                      <mat-card>\n                          <mat-card-content>\n                              <mat-card-title>News Bar(s)</mat-card-title>\n                          </mat-card-content>\n                          <mat-tab-group>\n                              <mat-tab *ngFor=\"let bar of selectedNews.newsbar; let i = index\" label=\"Bar {{i+1}}\">\n                                <mat-card-content>\n                                  <p [class]=\"selectedNews.language.language_code == 'Dhv' ? 'dhv' : '' \">{{bar.title}}</p>\n                                  <p [class]=\"selectedNews.language.language_code == 'Dhv' ? 'dhv m-t-20' : '' \">{{bar.detail}}</p>\n                                </mat-card-content>\n                              </mat-tab>\n                          </mat-tab-group>\n                      </mat-card>\n                  </div>\n              </div>\n          </div>\n        </mat-card-content>\n\n        <mat-card-actions class=\"chat-footer\">\n            <div align=\"end\">\n              <button mat-button color=\"basic\" [disabled]=\"!selectedNews\" (click)=\"onEdit()\">Edit</button>\n              <button mat-raised-button color=\"warn\" [disabled]=\"!selectedNews\" (click)=\"rejectNews()\">Reject</button>\n              <button mat-raised-button color=\"primary\" [disabled]=\"!selectedNews\" (click)=\"approveNews(selectedNews)\">Approve</button>\n            </div>\n          <!-- <div fxLayout=\"row\" layout-align=\"start center\">\n            <mat-form-field class=\"mr-1 ml-1\" fxFlex>\n              <input matInput placeholder=\"Send message\" >\n            </mat-form-field>\n            <button mat-fab color=\"warn\" >\n              <mat-icon>send</mat-icon>\n            </button>\n          </div> -->\n        </mat-card-actions>\n      </mat-sidenav-container>\n    </mat-card>\n  </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PageEvent } from '@angular/material/paginator';\nimport { EditorNewsService } from '../services/editor-news.service';\nimport { News, ListNews, NewsList } from '../../news/models/news';\nimport { DataSource } from '@angular/cdk/table';\nimport { Observable } from 'rxjs';\n\n// import { of } from 'rxjs';\nimport 'rxjs/add/observable/of';\n\nimport { Store } from '@ngrx/store';\nimport * as editorActions from '../store/news-editor.actions';\nimport * as newsActions from '../../news/store/news.actions';\n\nimport {Actions, ofType} from '@ngrx/effects';\n\n@Component({\n  selector: 'app-add-to-list-dialog',\n  templateUrl: './add-to-list-dialog.component.html',\n  styleUrls: ['./add-to-list-dialog.component.css']\n})\nexport class AddToListDialogComponent implements OnInit {\n  onDelete = new EventEmitter();\n  onAdd = new EventEmitter();\n  onUndo = new EventEmitter();\n\n  newsData: News[];\n\n  // mat table\n  displayedColumns = ['news_name', 'heading', 'date', 'actions'];\n  displayedColumnsBreaker = ['heading_br', 'actions_br'];\n  dataSource: DataSource<any>;\n  dataSource1: DataSource<any>;\n  dataSource2: DataSource<any>;\n  dataSource3: DataSource<any>;\n  dataSource4: DataSource<any>;\n  dataSource5: DataSource<any>;\n  dataSource6: DataSource<any>;\n  dataSource7: DataSource<any>;\n  dataSourceBreakers: DataSource<any>;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddToListDialogComponent>,\n    public apiService: EditorNewsService,\n    private store: Store<any>,\n    private updates$: Actions,\n    @Inject(MAT_DIALOG_DATA) public data: { list: NewsList }\n  ) { }\n\n  ngOnInit() {\n    // console.log(this.data)\n    this.apiService.getTodaysNews().subscribe((news: any) => {\n      this.newsData = news;\n      this.loadDataSource(this.newsData);\n    });\n  }\n\n  loadDataSource(news_data: News[]) {\n    this.dataSource  = new NewsListDataSource(this.checkIfInList(news_data[\"1\"][\"data\"]));\n    this.dataSource1 = new NewsListDataSource(this.checkIfInList(news_data[\"2\"][\"data\"]));\n    this.dataSource2 = new NewsListDataSource(this.checkIfInList(news_data[\"3\"][\"data\"]));\n    this.dataSource3 = new NewsListDataSource(this.checkIfInList(news_data[\"4\"][\"data\"]));\n    this.dataSource4 = new NewsListDataSource(this.checkIfInList(news_data[\"5\"][\"data\"]));\n    this.dataSource5 = new NewsListDataSource(this.checkIfInList(news_data[\"6\"][\"data\"]));\n    this.dataSource6 = new NewsListDataSource(this.checkIfInList(news_data[\"7\"][\"data\"]));\n    this.dataSourceBreakers = new NewsListDataSource(this.checkIfInList(news_data[\"breakers\"]));\n  }\n\n  addToList(id: number) {\n    console.log(id);\n    // this.store.dispatch(new newsActions.UpdateMyNewsLoaded({ isMyNewsLoaded: false }));\n    this.store.dispatch(new editorActions.AddToList({ list_id: this.data.list.id, news_id: id }));\n    this.onAdd.emit({ list_id: this.data.list.id, news_id: id });\n\n\n    this.updates$\n    .pipe(ofType(editorActions.ADD_TO_LIST_SUCCESS))\n    .subscribe(() => {\n      this.store.select(news_store => news_store.ReviewNews.lists)\n      .subscribe(list => {\n        list.forEach((element: NewsList) => {\n          if (element.id === this.data.list.id) {\n            // console.log(element)\n            this.data = { list: element };\n            this.loadDataSource(this.newsData);\n          }\n        });\n      });\n\n    });\n  }\n\n  checkIfInList(news_data: News[]) {\n    let news_re: News[] = [];\n    let i_index = 0;\n    news_data.forEach((news, index) => {\n      let found = false;\n\n      this.data.list.list_news.forEach((list_news, list_index) => {\n        if (news.id === list_news.news.id) {\n          found = true;\n        }\n      });\n\n      if(!found){\n        news_re[i_index] = news;\n        i_index = i_index + 1;\n      }\n\n    });\n    return news_re;\n  }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n  doDelete(id) {\n    this.closeDialog(false);\n    this.onDelete.emit(id);\n  }\n\n  doAdd(id) {\n    this.closeDialog(false);\n    this.onAdd.emit(id);\n  }\n\n  doUndo(id) {\n    this.closeDialog(false);\n    this.onUndo.emit(id);\n  }\n\n}\n\nexport class NewsListDataSource extends DataSource<News> {\n  constructor(private staticData: News[]) {\n    super();\n  }\n\n  connect(): Observable<News[]> {\n    return Observable.of(this.staticData);\n  }\n\n  disconnect() {}\n}\n","<h3 mat-dialog-title>Add News To: <i>{{data.list.name}}</i></h3>\n\n  <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n          <mat-card>\n              <!-- <mat-toolbar color=\"primary\" class=\"no-shadow\">\n                <div fxLayout=\"row\" fxFlex=\"100\" >\n                  <span class=\"m-t-0 font-14\">My News</span>\n                </div>\n              </mat-toolbar> -->\n              <mat-card-content>\n\n\n                <mat-tab-group>\n                  <!-- TODAYS -->\n                  <mat-tab label=\"Todays News\">\n                    <mat-card-content>\n                      <div class=\"table-rasponsive\">\n                        <mat-table #table [dataSource]=\"dataSource\">\n                            <!--- Note that these columns can be defined in any order.\n                                  The actual rendered columns are set as a property on the row definition\" -->\n\n                            <!-- Name Column -->\n                            <ng-container matColumnDef=\"news_name\">\n                              <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\"> {{ news.news_name | uppercase }} </mat-cell>\n                            </ng-container>\n\n                            <!-- Heading Column -->\n                            <ng-container matColumnDef=\"heading\">\n                              <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" [class.dhv_nosize]=\"news.language.language_code=='Dhv'\"> {{news.heading}} </mat-cell>\n                            </ng-container>\n\n                            <!-- Date Column -->\n                            <ng-container matColumnDef=\"date\">\n                              <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" matTooltip=\"{{news.created_at | date:'medium'}}\" matTooltipPosition=\"below\" [className]=\"(news.created_at|date) != (news.updated_at|date) ? 'nottodays' : 'todays'\">\n                                <span *ngIf=\"(news.created_at|date) === (news.updated_at|date)\">{{news.created_at | date}}</span>\n                                <mat-chip-list><mat-chip selected=\"true\" *ngIf=\"(news.created_at|date) != (news.updated_at|date)\" class=\"bg-warning\">{{news.created_at | date}}</mat-chip></mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Status Column -->\n                            <ng-container matColumnDef=\"status\">\n                                <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\">\n                                  <mat-chip-list>\n                                    <mat-chip selected=\"false\" *ngIf=\"news.newsstatus.status == 'draft'\">Draft</mat-chip>\n                                    <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'published'\">Approved</mat-chip>\n                                    <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n                                    <mat-chip selected=\"true\" *ngIf=\"news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n                                  </mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Actions Column -->\n                            <!--<div [hidden]=\"iii !=hoveredIndex\">-->\n                            <div>\n                            <ng-container matColumnDef=\"actions\">\n                              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" style=\"display: flex; justify-content: flex-end;\">\n                                  <!-- <button mat-button color=\"warn\" *ngIf=\"news.newsstatus.status != 'published'\" (click)=\"deleteNews(news.id)\">Delete</button> -->\n                                  <!-- <button mat-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\">Edit</button> -->\n\n                                  <button mat-icon-button color=\"warn\" (click)=\"addToList(news.id)\" matTooltip=\"Add to List\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">add</mat-icon>\n                                  </button>\n\n                                  <!-- <button mat-icon-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\" matTooltip=\"Edit News\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                                  </button>\n                                  <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.id)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                                  </button> -->\n\n                              </mat-cell>\n                            </ng-container>\n                            </div>\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></mat-row>\n                          </mat-table>\n                        </div>\n                    </mat-card-content>\n                  </mat-tab>\n\n\n\n\n\n\n                  <!-- DAY -1 -->\n                  <mat-tab label=\"{{newsData['2']['date']}}\">\n                    <mat-card-content>\n                        <div class=\"table-rasponsive\">\n                          <mat-table #table [dataSource]=\"dataSource1\">\n                            <!--- Note that these columns can be defined in any order.\n                                  The actual rendered columns are set as a property on the row definition\" -->\n\n                            <!-- Name Column -->\n                            <ng-container matColumnDef=\"news_name\">\n                              <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\"> {{ news.news_name | uppercase }} </mat-cell>\n                            </ng-container>\n\n                            <!-- Heading Column -->\n                            <ng-container matColumnDef=\"heading\">\n                              <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" [class.dhv_nosize]=\"news.language.language_code=='Dhv'\"> {{news.heading}} </mat-cell>\n                            </ng-container>\n\n                            <!-- Date Column -->\n                            <ng-container matColumnDef=\"date\">\n                              <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" matTooltip=\"{{news.created_at | date:'medium'}}\" matTooltipPosition=\"below\">\n                                  <span *ngIf=\"(news.created_at|date) === (news.updated_at|date)\">{{news.created_at | date}}</span>\n                                  <mat-chip-list><mat-chip selected=\"true\" *ngIf=\"(news.created_at|date) != (news.updated_at|date)\" class=\"bg-warning\">{{news.created_at | date}}</mat-chip></mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Status Column -->\n                            <ng-container matColumnDef=\"status\">\n                                <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\">\n                                  <mat-chip-list>\n                                    <mat-chip selected=\"false\" *ngIf=\"news.newsstatus.status == 'draft'\">Draft</mat-chip>\n                                    <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'published'\">Approved</mat-chip>\n                                    <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n                                    <mat-chip selected=\"true\" *ngIf=\"news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n                                  </mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Actions Column -->\n                            <!--<div [hidden]=\"iii!=hoveredIndex\">-->\n                            <div>\n                            <ng-container matColumnDef=\"actions\">\n                              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" style=\"display: flex; justify-content: flex-end;\">\n                                  <!-- <button mat-button color=\"warn\" *ngIf=\"news.newsstatus.status != 'published'\" (click)=\"deleteNews(news.id)\">Delete</button> -->\n                                  <!-- <button mat-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\">Edit</button> -->\n\n                                  <button mat-icon-button color=\"warn\" (click)=\"addToList(news.id)\" matTooltip=\"Add to List\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">add</mat-icon>\n                                  </button>\n\n                                  <!-- <button mat-icon-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\" matTooltip=\"Edit News\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                                  </button>\n                                  <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.id)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                                  </button> -->\n\n                              </mat-cell>\n                            </ng-container>\n                            </div>\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></mat-row>\n                          </mat-table>\n                        </div>\n                    </mat-card-content>\n                  </mat-tab>\n\n\n\n\n\n\n\n                  <!-- DAY -2 -->\n                  <mat-tab label=\"{{newsData['3']['date']}}\">\n                    <mat-card-content>\n                        <div class=\"table-rasponsive\">\n                          <mat-table #table [dataSource]=\"dataSource2\">\n                            <!--- Note that these columns can be defined in any order.\n                                  The actual rendered columns are set as a property on the row definition\" -->\n\n                            <!-- Name Column -->\n                            <ng-container matColumnDef=\"news_name\">\n                              <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\"> {{ news.news_name | uppercase }} </mat-cell>\n                            </ng-container>\n\n                            <!-- Heading Column -->\n                            <ng-container matColumnDef=\"heading\">\n                              <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" [class.dhv_nosize]=\"news.language.language_code=='Dhv'\"> {{news.heading}} </mat-cell>\n                            </ng-container>\n\n                            <!-- Date Column -->\n                            <ng-container matColumnDef=\"date\">\n                              <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" matTooltip=\"{{news.created_at | date:'medium'}}\" matTooltipPosition=\"below\">\n                                  <span *ngIf=\"(news.created_at|date) === (news.updated_at|date)\">{{news.created_at | date}}</span>\n                                  <mat-chip-list><mat-chip selected=\"true\" *ngIf=\"(news.created_at|date) != (news.updated_at|date)\" class=\"bg-warning\">{{news.created_at | date}}</mat-chip></mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Status Column -->\n                            <ng-container matColumnDef=\"status\">\n                                <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\">\n                                  <mat-chip-list>\n                                    <mat-chip selected=\"false\" *ngIf=\"news.newsstatus.status == 'draft'\">Draft</mat-chip>\n                                    <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'published'\">Approved</mat-chip>\n                                    <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n                                    <mat-chip selected=\"true\" *ngIf=\"news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n                                  </mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Actions Column -->\n                            <!--<div [hidden]=\"iii!=hoveredIndex\">-->\n                            <div>\n                            <ng-container matColumnDef=\"actions\">\n                              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" style=\"display: flex; justify-content: flex-end;\">\n                                  <!-- <button mat-button color=\"warn\" *ngIf=\"news.newsstatus.status != 'published'\" (click)=\"deleteNews(news.id)\">Delete</button> -->\n                                  <!-- <button mat-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\">Edit</button> -->\n\n                                  <button mat-icon-button color=\"warn\" (click)=\"addToList(news.id)\" matTooltip=\"Add to List\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">add</mat-icon>\n                                  </button>\n\n                                  <!-- <button mat-icon-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\" matTooltip=\"Edit News\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                                  </button>\n                                  <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.id)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                                  </button> -->\n\n                              </mat-cell>\n                            </ng-container>\n                            </div>\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></mat-row>\n                          </mat-table>\n                        </div>\n                    </mat-card-content>\n                  </mat-tab>\n\n\n\n\n\n\n\n                  <!-- DAY -3 -->\n                  <mat-tab label=\"{{newsData['4']['date']}}\">\n                    <mat-card-content>\n                        <div class=\"table-rasponsive\">\n                          <mat-table #table [dataSource]=\"dataSource3\">\n                            <!--- Note that these columns can be defined in any order.\n                                  The actual rendered columns are set as a property on the row definition\" -->\n\n                            <!-- Name Column -->\n                            <ng-container matColumnDef=\"news_name\">\n                              <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\"> {{ news.news_name | uppercase }} </mat-cell>\n                            </ng-container>\n\n                            <!-- Heading Column -->\n                            <ng-container matColumnDef=\"heading\">\n                              <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" [class.dhv_nosize]=\"news.language.language_code=='Dhv'\"> {{news.heading}} </mat-cell>\n                            </ng-container>\n\n                            <!-- Date Column -->\n                            <ng-container matColumnDef=\"date\">\n                              <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" matTooltip=\"{{news.created_at | date:'medium'}}\" matTooltipPosition=\"below\">\n                                  <span *ngIf=\"(news.created_at|date) === (news.updated_at|date)\">{{news.created_at | date}}</span>\n                                  <mat-chip-list><mat-chip selected=\"true\" *ngIf=\"(news.created_at|date) != (news.updated_at|date)\" class=\"bg-warning\">{{news.created_at | date}}</mat-chip></mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Status Column -->\n                            <ng-container matColumnDef=\"status\">\n                                <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\">\n                                  <mat-chip-list>\n                                    <mat-chip selected=\"false\" *ngIf=\"news.newsstatus.status == 'draft'\">Draft</mat-chip>\n                                    <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'published'\">Approved</mat-chip>\n                                    <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n                                    <mat-chip selected=\"true\" *ngIf=\"news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n                                  </mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Actions Column -->\n                            <!--<div [hidden]=\"iii!=hoveredIndex\">-->\n                            <div>\n                            <ng-container matColumnDef=\"actions\">\n                              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" style=\"display: flex; justify-content: flex-end;\">\n                                  <!-- <button mat-button color=\"warn\" *ngIf=\"news.newsstatus.status != 'published'\" (click)=\"deleteNews(news.id)\">Delete</button> -->\n                                  <!-- <button mat-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\">Edit</button> -->\n\n                                  <button mat-icon-button color=\"warn\" (click)=\"addToList(news.id)\" matTooltip=\"Add to List\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">add</mat-icon>\n                                  </button>\n\n                                  <!-- <button mat-icon-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\" matTooltip=\"Edit News\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                                  </button>\n                                  <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.id)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                                  </button> -->\n\n                              </mat-cell>\n                            </ng-container>\n                            </div>\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></mat-row>\n                          </mat-table>\n                        </div>\n                    </mat-card-content>\n                  </mat-tab>\n\n\n\n\n\n\n\n                  <!-- DAY -4 -->\n                  <mat-tab label=\"{{newsData['5']['date']}}\">\n                    <mat-card-content>\n                        <div class=\"table-rasponsive\">\n                          <mat-table #table [dataSource]=\"dataSource4\">\n                            <!--- Note that these columns can be defined in any order.\n                                  The actual rendered columns are set as a property on the row definition\" -->\n\n                            <!-- Name Column -->\n                            <ng-container matColumnDef=\"news_name\">\n                              <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\"> {{ news.news_name | uppercase }} </mat-cell>\n                            </ng-container>\n\n                            <!-- Heading Column -->\n                            <ng-container matColumnDef=\"heading\">\n                              <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" [class.dhv_nosize]=\"news.language.language_code=='Dhv'\"> {{news.heading}} </mat-cell>\n                            </ng-container>\n\n                            <!-- Date Column -->\n                            <ng-container matColumnDef=\"date\">\n                              <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" matTooltip=\"{{news.created_at | date:'medium'}}\" matTooltipPosition=\"below\">\n                                  <span *ngIf=\"(news.created_at|date) === (news.updated_at|date)\">{{news.created_at | date}}</span>\n                                  <mat-chip-list><mat-chip selected=\"true\" *ngIf=\"(news.created_at|date) != (news.updated_at|date)\" class=\"bg-warning\">{{news.created_at | date}}</mat-chip></mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Status Column -->\n                            <ng-container matColumnDef=\"status\">\n                                <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\">\n                                  <mat-chip-list>\n                                    <mat-chip selected=\"false\" *ngIf=\"news.newsstatus.status == 'draft'\">Draft</mat-chip>\n                                    <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'published'\">Approved</mat-chip>\n                                    <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n                                    <mat-chip selected=\"true\" *ngIf=\"news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n                                  </mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Actions Column -->\n                            <!--<div [hidden]=\"iii!=hoveredIndex\">-->\n                            <div>\n                            <ng-container matColumnDef=\"actions\">\n                              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" style=\"display: flex; justify-content: flex-end;\">\n                                  <!-- <button mat-button color=\"warn\" *ngIf=\"news.newsstatus.status != 'published'\" (click)=\"deleteNews(news.id)\">Delete</button> -->\n                                  <!-- <button mat-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\">Edit</button> -->\n\n                                  <button mat-icon-button color=\"warn\" (click)=\"addToList(news.id)\" matTooltip=\"Add to List\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">add</mat-icon>\n                                  </button>\n\n                                  <!-- <button mat-icon-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\" matTooltip=\"Edit News\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                                  </button>\n                                  <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.id)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                                  </button> -->\n\n                              </mat-cell>\n                            </ng-container>\n                            </div>\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></mat-row>\n                          </mat-table>\n                        </div>\n                    </mat-card-content>\n                  </mat-tab>\n\n\n\n\n\n\n\n                  <!-- DAY -5 -->\n                  <mat-tab label=\"{{newsData['6']['date']}}\">\n                    <mat-card-content>\n                        <div class=\"table-rasponsive\">\n                          <mat-table #table [dataSource]=\"dataSource5\">\n                            <!--- Note that these columns can be defined in any order.\n                                  The actual rendered columns are set as a property on the row definition\" -->\n\n                            <!-- Name Column -->\n                            <ng-container matColumnDef=\"news_name\">\n                              <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\"> {{ news.news_name | uppercase }} </mat-cell>\n                            </ng-container>\n\n                            <!-- Heading Column -->\n                            <ng-container matColumnDef=\"heading\">\n                              <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" [class.dhv_nosize]=\"news.language.language_code=='Dhv'\"> {{news.heading}} </mat-cell>\n                            </ng-container>\n\n                            <!-- Date Column -->\n                            <ng-container matColumnDef=\"date\">\n                              <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" matTooltip=\"{{news.created_at | date:'medium'}}\" matTooltipPosition=\"below\">\n                                  <span *ngIf=\"(news.created_at|date) === (news.updated_at|date)\">{{news.created_at | date}}</span>\n                                  <mat-chip-list><mat-chip selected=\"true\" *ngIf=\"(news.created_at|date) != (news.updated_at|date)\" class=\"bg-warning\">{{news.created_at | date}}</mat-chip></mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Status Column -->\n                            <ng-container matColumnDef=\"status\">\n                                <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\">\n                                  <mat-chip-list>\n                                    <mat-chip selected=\"false\" *ngIf=\"news.newsstatus.status == 'draft'\">Draft</mat-chip>\n                                    <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'published'\">Approved</mat-chip>\n                                    <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n                                    <mat-chip selected=\"true\" *ngIf=\"news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n                                  </mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Actions Column -->\n                            <!--<div [hidden]=\"iii!=hoveredIndex\">-->\n                            <div>\n                            <ng-container matColumnDef=\"actions\">\n                              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" style=\"display: flex; justify-content: flex-end;\">\n                                  <!-- <button mat-button color=\"warn\" *ngIf=\"news.newsstatus.status != 'published'\" (click)=\"deleteNews(news.id)\">Delete</button> -->\n                                  <!-- <button mat-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\">Edit</button> -->\n\n                                  <button mat-icon-button color=\"warn\" (click)=\"addToList(news.id)\" matTooltip=\"Add to List\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">add</mat-icon>\n                                  </button>\n\n                                  <!-- <button mat-icon-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\" matTooltip=\"Edit News\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                                  </button>\n                                  <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.id)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                                  </button> -->\n\n                              </mat-cell>\n                            </ng-container>\n                            </div>\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></mat-row>\n                          </mat-table>\n                        </div>\n                    </mat-card-content>\n                  </mat-tab>\n\n\n\n\n\n\n\n                  <!-- DAY -6 -->\n                  <mat-tab label=\"{{newsData['7']['date']}}\">\n                    <mat-card-content>\n                        <div class=\"table-rasponsive\">\n                          <mat-table #table [dataSource]=\"dataSource6\">\n                            <!--- Note that these columns can be defined in any order.\n                                  The actual rendered columns are set as a property on the row definition\" -->\n\n                            <!-- Name Column -->\n                            <ng-container matColumnDef=\"news_name\">\n                              <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\"> {{ news.news_name | uppercase }} </mat-cell>\n                            </ng-container>\n\n                            <!-- Heading Column -->\n                            <ng-container matColumnDef=\"heading\">\n                              <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" [class.dhv_nosize]=\"news.language.language_code=='Dhv'\"> {{news.heading}} </mat-cell>\n                            </ng-container>\n\n                            <!-- Date Column -->\n                            <ng-container matColumnDef=\"date\">\n                              <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" matTooltip=\"{{news.created_at | date:'medium'}}\" matTooltipPosition=\"below\">\n                                  <span *ngIf=\"(news.created_at|date) === (news.updated_at|date)\">{{news.created_at | date}}</span>\n                                  <mat-chip-list><mat-chip selected=\"true\" *ngIf=\"(news.created_at|date) != (news.updated_at|date)\" class=\"bg-warning\">{{news.created_at | date}}</mat-chip></mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Status Column -->\n                            <ng-container matColumnDef=\"status\">\n                                <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\">\n                                  <mat-chip-list>\n                                    <mat-chip selected=\"false\" *ngIf=\"news.newsstatus.status == 'draft'\">Draft</mat-chip>\n                                    <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'published'\">Approved</mat-chip>\n                                    <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n                                    <mat-chip selected=\"true\" *ngIf=\"news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n                                  </mat-chip-list>\n                              </mat-cell>\n                            </ng-container>\n\n                            <!-- Actions Column -->\n                            <!--<div [hidden]=\"iii!=hoveredIndex\">-->\n                            <div>\n                            <ng-container matColumnDef=\"actions\">\n                              <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n                              <mat-cell *matCellDef=\"let news\" style=\"display: flex; justify-content: flex-end;\">\n                                  <!-- <button mat-button color=\"warn\" *ngIf=\"news.newsstatus.status != 'published'\" (click)=\"deleteNews(news.id)\">Delete</button> -->\n                                  <!-- <button mat-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\">Edit</button> -->\n\n                                  <button mat-icon-button color=\"warn\" (click)=\"addToList(news.id)\" matTooltip=\"Add to List\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">add</mat-icon>\n                                  </button>\n\n                                  <!-- <button mat-icon-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\" matTooltip=\"Edit News\" matTooltipPosition=\"below\">\n                                    <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                                  </button>\n                                  <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.id)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                                  </button> -->\n\n                              </mat-cell>\n                            </ng-container>\n                            </div>\n\n                            <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                            <mat-row *matRowDef=\"let row; columns: displayedColumns; let i=index\"></mat-row>\n                          </mat-table>\n                        </div>\n                    </mat-card-content>\n                  </mat-tab>\n\n\n\n                  <!-- BREAKERS -->\n                  <mat-tab label=\"Breakers\">\n                      <mat-card-content>\n                          <div class=\"table-rasponsive\">\n                            <mat-table #table [dataSource]=\"dataSourceBreakers\">\n                              <!--- Note that these columns can be defined in any order.\n                                    The actual rendered columns are set as a property on the row definition\" -->\n\n                              <!-- Name Column -->\n                              <ng-container matColumnDef=\"news_name\">\n                                <mat-header-cell *matHeaderCellDef> News Name </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\"> {{ news.news_name | uppercase }} </mat-cell>\n                              </ng-container>\n\n                              <!-- Heading Column -->\n                              <ng-container matColumnDef=\"heading_br\">\n                                <mat-header-cell *matHeaderCellDef> Heading </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\" [class.dhv_nosize]=\"news.language.language_code=='Dhv'\"> {{news.heading}} </mat-cell>\n                              </ng-container>\n\n                              <!-- Date Column -->\n                              <ng-container matColumnDef=\"date\">\n                                <mat-header-cell *matHeaderCellDef> Date </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\" matTooltip=\"{{news.created_at | date:'medium'}}\" matTooltipPosition=\"below\">\n                                    <span *ngIf=\"(news.created_at|date) === (news.updated_at|date)\">{{news.created_at | date}}</span>\n                                    <mat-chip-list><mat-chip selected=\"true\" *ngIf=\"(news.created_at|date) != (news.updated_at|date)\" class=\"bg-warning\">{{news.created_at | date}}</mat-chip></mat-chip-list>\n                                </mat-cell>\n                              </ng-container>\n\n                              <!-- Status Column -->\n                              <ng-container matColumnDef=\"status\">\n                                  <mat-header-cell *matHeaderCellDef> &nbsp; </mat-header-cell>\n                                  <mat-cell *matCellDef=\"let news\">\n                                    <mat-chip-list>\n                                      <mat-chip selected=\"false\" *ngIf=\"news.newsstatus.status == 'draft'\">Draft</mat-chip>\n                                      <mat-chip class=\"bg-success\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'published'\">Approved</mat-chip>\n                                      <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"news.newsstatus.status == 'ready'\">In-Review</mat-chip>\n                                      <mat-chip selected=\"true\" *ngIf=\"news.newsstatus.status == 'reject'\" class=\"bg-warning\">Rejected</mat-chip>\n                                    </mat-chip-list>\n                                </mat-cell>\n                              </ng-container>\n\n                              <!-- Actions Column -->\n                              <!--<div [hidden]=\"iii!=hoveredIndex\">-->\n                              <div>\n                              <ng-container matColumnDef=\"actions_br\">\n                                <mat-header-cell *matHeaderCellDef> Actions </mat-header-cell>\n                                <mat-cell *matCellDef=\"let news\" style=\"display: flex; justify-content: flex-end;\">\n                                    <!-- <button mat-button color=\"warn\" *ngIf=\"news.newsstatus.status != 'published'\" (click)=\"deleteNews(news.id)\">Delete</button> -->\n                                    <!-- <button mat-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\">Edit</button> -->\n\n                                    <button mat-icon-button color=\"warn\" (click)=\"addToList(news.id)\" matTooltip=\"Add to List\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"Edit\">add</mat-icon>\n                                    </button>\n\n                                    <!-- <button mat-icon-button color=\"basic\" *ngIf=\"news.newsstatus.status != 'published'\" routerLink=\"/news/{{news.id}}\" matTooltip=\"Edit News\" matTooltipPosition=\"below\">\n                                      <mat-icon aria-label=\"Edit\">edit</mat-icon>\n                                    </button>\n                                    <button mat-icon-button color=\"basic\" (click)=\"viewNews(news.id)\" matTooltip=\"View News\" matTooltipPosition=\"below\">\n                                        <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                                    </button> -->\n\n                                </mat-cell>\n                              </ng-container>\n                              </div>\n\n                              <mat-header-row *matHeaderRowDef=\"displayedColumnsBreaker\"></mat-header-row>\n                              <mat-row *matRowDef=\"let row; columns: displayedColumnsBreaker; let i=index\"></mat-row>\n                            </mat-table>\n                          </div>\n                      </mat-card-content>\n                    </mat-tab>\n\n\n\n\n\n\n\n                  <!-- SEARCH NEWS TO ADD -->\n                  <!-- <mat-tab label=\"Todays News\">\n                      <mat-card-content>\n\n                      </mat-card-content>\n                    </mat-tab>\n                    -->\n                </mat-tab-group>\n\n\n\n              </mat-card-content>\n          </mat-card>\n      </div>\n  </div>\n  <!-- <button mat-fab color=\"warn\" class=\"bottom-right\" routerLink=\"/news/write\">\n    <mat-icon class=\"mat-24\">create</mat-icon>\n  </button> -->\n","import { Component, OnInit, Inject, EventEmitter } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { News } from './../../news/models/news';\n\n@Component({\n  selector: 'app-notes-dialog',\n  templateUrl: './notes-dialog.component.html'\n})\nexport class NotesDialogComponent implements OnInit {\n  onReject = new EventEmitter();\n  noteInp;\n  editorNotes;\n\n  constructor(\n    public dialogRef: MatDialogRef<NotesDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  ngOnInit() {\n    this.editorNotes = new RejectNotes(this.data.id);\n    console.log(this.data);\n  }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n  addNote() {\n    const tmpNote = this.noteInp;\n    this.editorNotes.addNote(tmpNote);\n    this.noteInp = '';\n  }\n\n  doReject() {\n    this.closeDialog(false);\n    this.onReject.emit(this.editorNotes);\n  }\n\n}\n\nexport class RejectNotes {\n\n  news_id: any;\n  notes?: any = [];\n  containNotes = false;\n\n  constructor(\n    newsId\n  ) {\n    this.news_id = newsId;\n  }\n\n  addNote(note: string) {\n    this.containNotes = true;\n    this.notes.push(note);\n  }\n}\n","<h1 mat-dialog-title>Add Note to news</h1>\n<div mat-dialog-content>\n    <!-- <mat-card>\n        <mat-card-content> -->\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <mat-list role=\"list\">\n              <mat-list-item role=\"listitem\" *ngFor=\"let note of editorNotes.notes\">\n                {{note}}\n                <!-- <button mat-button position=\"after\"><mat-icon>close</mat-icon></button> -->\n              </mat-list-item>\n              <mat-list-item role=\"listitem\" *ngIf=\"!editorNotes.notes[0]\"><i>Reject without any notes.</i></mat-list-item>\n            </mat-list>\n          </div>\n\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- hr column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n              <mat-divider></mat-divider>\n            </div>\n          </div>\n\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" class=\"m-t-30\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Note</mat-label>\n                <textarea matInput mat-autosize matAutosizeMinRows=\"2\" #rejectNote name=\"rejectNote\" [(ngModel)]=\"noteInp\"></textarea>\n              </mat-form-field>\n            </div>\n\n            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                <button mat-button color=\"primary\" (click)=\"addNote()\">Add Note</button>\n            </div>\n\n          </div>\n        <!-- </mat-card-content>\n    </mat-card> -->\n</div>\n<div mat-dialog-actions align=\"end\">\n  <button mat-button (click)=\"closeDialog(false)\" tabindex=\"2\">Cancel</button>\n  <button mat-raised-button color=\"warn\" (click)=\"doReject()\" tabindex=\"-1\">Reject</button>\n</div>\n","import { Location } from '@angular/common';\nimport { Component, OnInit, Input, Output, HostListener, HostBinding, ViewChild, ElementRef, Renderer2 } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { News, NewsBar, TickerNews } from '../../news/models/news';\nimport { NewsState } from '../../store/app.state';\nimport * as editorActions from '../store/news-editor.actions';\nimport { EditorNewsService } from '../services/editor-news.service';\n\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from './../../shared/component/confirm-dialog/confirm-dialog.component';\nimport { ContextMenuComponent } from 'ngx-contextmenu';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  news_bar = new NewsBar('', '');\n  ticker_news = new TickerNews('');\n  public new_news: News;\n  edit_id = this.aRoute.snapshot.params.id;\n\n  @Input() public dhivehiEnabled: boolean;\n  @Input() public tickerEnabled = false;\n  submitted = false;\n  @Input() loaded = false;\n  loaded2 = false;\n\n  @ViewChild(ContextMenuComponent, {static: true}) public basicMenu: ContextMenuComponent;\n  @ViewChild('news_body', {static: true}) el:ElementRef;\n\n  constructor(\n    public snackBar: MatSnackBar,\n    private router: Router,\n    private newsService: EditorNewsService,\n    private aRoute: ActivatedRoute,\n    private store: Store<NewsState>,\n    public dialog: MatDialog,\n    private location: Location\n  ) {\n    this.loadEditNews(this.edit_id);\n  }\n\n  ngOnInit() {\n  }\n\n  loadEditNews(id: number) {\n    this.loaded = false;\n    this.edit_id = id;\n    this.newsService.editNews(this.edit_id)\n      .subscribe(\n        (response) => {\n          this.new_news = response;\n          if ( this.new_news.language.language_code === 'Dhv' ) { this.dhivehiEnabled = true; } else { this.dhivehiEnabled = false; }\n          this.loaded = true;\n        },\n        (error) => {\n          this.submitted = false;\n          const message = '';\n          this.snackBar.open(message, 'dismiss');\n        });\n  }\n\n  onSubmit(draft: boolean) {\n    this.submitted = true;\n    this.new_news.draft = draft;\n    this.newsService.updateNews(this.new_news, this.edit_id)\n        .subscribe(\n          (response) => {\n            this.store.dispatch(new editorActions.UpdateReviewNewsLoaded({ isLoaded: false }));\n            // this.location.back();\n            this.router.navigate(['/editor/review']);\n          },\n          (error) => {\n            this.submitted = false;\n          }\n    );\n  }\n\n  cancelWrite() {\n    this.router.navigate(['/editor/review']);\n  }\n\n  approveNews(id) {\n    this.store.dispatch(new editorActions.ApproveNews({ id: id }));\n    this.router.navigate(['/editor/review']);\n    this.store.dispatch(new editorActions.UpdateReviewNewsLoaded({ isLoaded: false }));\n  }\n\n  changeLanguage() {\n    if (this.dhivehiEnabled) {\n      this.new_news.language.language_code = 'Dhv';\n    } else {\n      this.new_news.language.language_code = 'Eng';\n    }\n  }\n\n  addBar() {\n    const nBar = new NewsBar(null, null, null, null, null, null);\n    this.new_news.newsbar.push(nBar);\n  }\n\n  removeBar(barId) {\n\n    // let dialogRef = this.dialog.open( ConfirmDialogComponent, { width: '350px' });\n\n    // dialogRef.afterClosed().subscribe((result: string) => {\n    //     dialogRef = null;\n    //     if (result) { // user confirmed to delete\n    //       this.newsService.destroyBar(barId)\n    //       .subscribe(\n    //         (response) => {\n    //           /*\n    //           ---------- // TODO\n    //           instead of reloading the model, remove the bar from fiest loaded model ->'this.new_news'\n    //           because now the if the user had made any changes before removing a bar,\n    //           the changes made earlier are reloaded with the old data from database.\n    //           */\n    //           this.loadEditNews(this.edit_id);\n    //           console.log(response);\n    //         }\n    //       );\n    //     }\n    // });\n\n  }\n\n  addTicker() {\n    const ticker = new TickerNews('');\n    this.new_news.tickernews.push(ticker);\n  }\n\n  removeTicker(tickerIndex) {\n    this.new_news.tickernews.splice(tickerIndex, 1);\n  }\n\n  toggleTicker() {\n    if (!this.tickerEnabled) {\n      this.new_news.tickernews = null;\n    }else {\n      const ticker = new TickerNews('');\n      this.new_news.tickernews = [ticker];\n    }\n  }\n\n  // TODO: Remove this when we're done, this is here for debugging purpose\n  get diagnostic() { return JSON.stringify(this.new_news); }\n\n  selectionchange(e?: any) {\n    let ev = this.el.nativeElement;\n    console.log(ev.selectionStart)\n\n    const start = ev.selectionStart;\n    const end = ev.selectionEnd;\n\n    console.log(ev.value.substr(start, end - start))\n\n    let newBodyText = ev.value.substr(0, start)+'<review>'+ev.value.substr(start, end - start)+'</review>'+ev.value.substr(end, ev.value.toString().length);\n    this.new_news.body = newBodyText;\n  }\n}\n","<div [hidden]=\"submitted\" *ngIf=\"loaded\">\n  <mat-toolbar color=\"secondary\" class=\"no-shadow\">\n    <mat-toolbar-row>\n        <span fxFlex fxShow=\"false\" fxShow.gt-xs>\n\n          <mat-chip-list>Edit News&nbsp;\n            <mat-chip selected=\"false\" *ngIf=\"new_news.newsstatus.status == 'draft'\">Draft</mat-chip>\n            <mat-chip color=\"warn\" selected=\"true\" *ngIf=\"new_news.newsstatus.status == 'published'\">Published</mat-chip>\n            <mat-chip color=\"primary\" selected=\"true\" *ngIf=\"new_news.newsstatus.status == 'ready'\">Pending</mat-chip>\n          </mat-chip-list>\n        </span>\n        <div fxShow=\"false\" fxShow.gt-xs>\n            <mat-slide-toggle labelPosition=\"after\" color=\"secondary\" [(ngModel)]=\"dhivehiEnabled\" (ngModelChange)=\"changeLanguage($event)\">{{new_news.language.language_code}}</mat-slide-toggle>\n            &nbsp;&nbsp;\n            <mat-slide-toggle labelPosition=\"after\" color=\"secondary\" [(ngModel)]=\"tickerEnabled\" (ngModelChange)=\"toggleTicker()\">Ticker</mat-slide-toggle>\n        </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n  </div>\n\n  <form class=\"basic-form\" #newsForm=\"ngForm\" [hidden]=\"submitted\" *ngIf=\"loaded\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"center start\">\n    <div fxFlex.gt-md=\"100\" fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n      <mat-card class=\"mat-card-top\">\n\n        <mat-toolbar color=\"primary\" class=\"no-shadow\">\n          <div fxLayout=\"row\" fxFlex=\"100\" >\n            <span class=\"m-t-0 font-14\">Body</span>\n          </div>\n        </mat-toolbar>\n\n\n        <mat-card-content>\n\n                <!-- ============================================================== -->\n                <!-- column -->\n                <!-- ============================================================== -->\n\n                <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n\n                    <!-- <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <code>{{diagnostic}}</code>\n                    </div> -->\n\n                    <!-- column -->\n                    <div fxFlex.gt-md=\"100\" fxFlex=\"100\">\n                      <mat-form-field appearance=\"outline\">\n                        <mat-label>News Name</mat-label>\n                        <input matInput placeholder=\"News Name\" #newsName required\n                        [(ngModel)]=\"new_news.news_name\"\n                        name=\"newsName\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-md=\"100\" fxFlex=\"100\">\n                      <mat-form-field appearance=\"outline\">\n                          <mat-label>News Title</mat-label>\n                          <textarea matInput mat-autosize matAutosizeMinRows=\"2\" #dhvHeading required\n                          [appDnrmsThaana]=\"dhivehiEnabled\"\n                          [(ngModel)]=\"new_news.heading\"\n                            name=\"dhvHeading\"></textarea>\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <mat-form-field appearance=\"outline\">\n                        <mat-label>News Body</mat-label>\n                        <textarea matInput mat-autosize matAutosizeMinRows=\"20\" #news_body required\n                        [appDnrmsThaana]=\"dhivehiEnabled\"\n                        [(ngModel)]=\"new_news.body\"\n                        [contextMenu]=\"basicMenu\" [contextMenuSubject]=\"dhvInputBody\"\n                        name=\"dhvInputBody\"></textarea>\n                      </mat-form-field>\n                    </div>\n\n\n                </div>\n\n        </mat-card-content>\n      </mat-card>\n\n      <mat-card class=\"mat-card-top\" *ngFor=\"let cBar of new_news.newsbar; let i = index\">\n        <mat-toolbar color=\"primary\" *ngIf=\"i === 0\" class=\"no-shadow\">\n          <div fxLayout=\"row\" fxFlex=\"100\" >\n            <span class=\"m-t-0 font-14\">\n              News Bar <span *ngIf=\"i != 0\">{{i+1}}</span>\n            </span>\n          </div>\n          <span class=\"example-fill-remaining-space\"></span>\n\n          <mat-icon (click)=\"addBar()\">add_circle_outline</mat-icon>\n          <mat-icon (click)=\"removeBar(i)\" *ngIf=\"i !== 0\">highlight_off</mat-icon>\n        </mat-toolbar>\n\n        <mat-toolbar color=\"secondary\" *ngIf=\"i != 0\" class=\"no-shadow\">\n          <div fxLayout=\"row\" fxFlex=\"100\" >\n            <span class=\"m-t-0 font-14\">\n              News Bar <span *ngIf=\"i != 0\">{{i+1}}</span>\n            </span>\n          </div>\n          <span class=\"example-fill-remaining-space\"></span>\n\n          <mat-icon (click)=\"addBar()\">add_circle_outline</mat-icon>\n          <mat-icon (click)=\"removeBar(cBar.id)\" *ngIf=\"i !== 0\">highlight_off</mat-icon>\n        </mat-toolbar>\n\n        <mat-card-content>\n            <!--<mat-divider *ngIf=\"i > 0\"></mat-divider>-->\n            <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n              <!-- column -->\n              <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Bar Title</mat-label>\n                  <textarea matInput mat-autosize matAutosizeMinRows=\"2\" #BarTitledhvInput{{i}} required\n                  [appDnrmsThaana]=\"dhivehiEnabled\"\n                  [(ngModel)]=\"cBar.title\"\n                    name=\"BarTitledhvInput{{i}} \"></textarea>\n                </mat-form-field>\n              </div>\n              <!-- column -->\n              <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\">\n                    <mat-label>Bar Detail</mat-label>\n                  <textarea matInput mat-autosize matAutosizeMinRows=\"2\" #BarDetailedhvInput{{i}} required\n                  [appDnrmsThaana]=\"dhivehiEnabled\"\n                  [(ngModel)]=\"cBar.detail\"\n                    name=\"BarDetailedhvInput{{i}} \"></textarea>\n                </mat-form-field>\n              </div>\n            </div>\n        </mat-card-content>\n      </mat-card>\n\n\n      <span *ngIf=\"tickerEnabled\">\n      <mat-card class=\"mat-card-top\" *ngFor=\"let cTicker of new_news.tickernews; let i = index\">\n        <mat-toolbar color=\"primary\" *ngIf=\"i === 0\" class=\"no-shadow\">\n            <div fxLayout=\"row\" fxFlex=\"100\">\n              <span class=\"m-t-0 font-14\">\n                  Ticker News <span *ngIf=\"i != 0\">{{i+1}}</span>\n              </span>\n            </div>\n            <span class=\"example-fill-remaining-space\"></span>\n\n            <mat-icon (click)=\"addTicker()\">add_circle_outline</mat-icon>\n            <mat-icon (click)=\"removeTicker(i)\" *ngIf=\"i !== 0\">highlight_off</mat-icon>\n          </mat-toolbar>\n\n          <mat-toolbar color=\"secondary\" *ngIf=\"i != 0\" class=\"no-shadow\">\n              <div fxLayout=\"row\" fxFlex=\"100\">\n                <span class=\"m-t-0 font-14\">\n                    Ticker News <span *ngIf=\"i != 0\">{{i+1}}</span>\n                </span>\n              </div>\n              <span class=\"example-fill-remaining-space\"></span>\n\n              <mat-icon (click)=\"addTicker()\">add_circle_outline</mat-icon>\n              <mat-icon (click)=\"removeTicker(i)\" *ngIf=\"i !== 0\">highlight_off</mat-icon>\n            </mat-toolbar>\n\n        <mat-card-content>\n            <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n\n              <!-- column -->\n              <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Ticker Text</mat-label>\n                  <textarea matInput mat-autosize matAutosizeMinRows=\"2\" #tickerdhvInput{{i}} required\n                  [appDnrmsThaana]=\"dhivehiEnabled\"\n                  [(ngModel)]=\"cTicker.news\"\n                    name=\"tickerdhvInput{{i}}\"></textarea>\n                </mat-form-field>\n              </div>\n\n            </div>\n        </mat-card-content>\n      </mat-card>\n      </span>\n\n      <mat-card class=\"mat-card-top\">\n          <mat-card-content>\n              <mat-card-actions align=\"end\">\n              <!-- column -->\n              <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                <button mat-button color=\"warn\" (click)=\"cancelWrite()\">Cancel</button>\n                <button type=\"button\" (click)=\"onSubmit(false)\" mat-raised-button color=\"primary\" [disabled]=\"!newsForm.form.valid\">Save</button>\n                <!-- <button mat-raised-button color=\"primary\" (click)=\"approveNews(new_news.id)\">Approve</button> -->\n              </div>\n              </mat-card-actions>\n          </mat-card-content>\n      </mat-card>\n\n    </div>\n  </div>\n  </form>\n\n  <div *ngIf=\"submitted || loaded2\">\n  <div fxLayout=\"row\">\n      <div fxFlex.gt-sm=\"100%\" >\n          <mat-card>\n              <mat-card-content>\n                <mat-card-title>Saving News</mat-card-title>\n                <mat-progress-bar mode=\"indeterminate\" value=\"40\" class=\"m-t-30\"></mat-progress-bar>\n              </mat-card-content>\n          </mat-card>\n      </div>\n  </div>\n  </div>\n\n\n  <context-menu [menuClass]=\"'c-menu'\">\n    <ng-template contextMenuItem (execute)=\"selectionchange($event)\">\n        <button mat-menu-item><mat-icon>comment</mat-icon> Add Comment </button>\n    </ng-template>\n    <ng-template contextMenuItem (execute)=\"selectionchange()\">\n        <button mat-menu-item><mat-icon>highlight</mat-icon> Highlight Selected </button>\n    </ng-template>\n  </context-menu>\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"rxjs-compat/add/observable/of\");\n//# sourceMappingURL=of.js.map","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-editor-dashboard',\n  templateUrl: './editor-dashboard.component.html',\n  styleUrls: ['./editor-dashboard.component.css']\n})\nexport class EditorDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  editor-dashboard works!\n</p>\n","import { Routes } from '@angular/router';\nimport { EditorDashboardComponent } from './editor-dashboard/editor-dashboard.component';\nimport { ReviewComponent } from './review/review.component';\n\nimport { EditComponent } from './edit/edit.component';\nimport { ListComponent } from './list/list.component';\n\nexport const NewsEditorRoutes: Routes = [\n {\n    path: '',\n    children: [{\n      path: 'dashboard',\n      component: EditorDashboardComponent,\n      data: { role: 'editor' }\n    },\n    {\n      path: 'review',\n      component: ReviewComponent,\n      data: { role: 'editor' }\n    }, {\n      path: 'edit/:id',\n      component: EditComponent,\n      data: { role: 'editor' }\n    }, {\n      path: 'list',\n      component: ListComponent,\n      data: { role: 'editor' }\n    }]\n  }\n];\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { environment } from './../../../environments/environment';\nimport { News, ListOrder } from '../../news/models/news';\nimport { RejectNotes } from '../notes-dialog/notes-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EditorNewsService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  // get all news in ready status (review)\n  getReviewNews () {\n    return this.http.get<any>(this.apiUrl + 'news/editor/ready');\n  }\n\n  // get all news in ready status (review)\n  approveNews (id: number) {\n    return this.http.post<any>(this.apiUrl + 'news/editor/approve', { newsId: id });\n  }\n\n  // reject news\n  reJectNews (reject: RejectNotes) {\n    return this.http.post<any>(this.apiUrl + 'news/editor/reject', reject);\n    // { news_id: reject.news_id, notes: reject.notes, containNotes: reject.containNotes }\n  }\n\n  // get a news for editing\n  editNews (id: number) {\n    return this.http.get<any>( this.apiUrl + 'news/editor/edit/' + id );\n  }\n\n  // save a news, with bar(s) & ticker(s)\n  updateNews (save_news: News, id: number) {\n    const headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\n\n    save_news.newsstatus_id = 1;\n    const post_str = JSON.parse(JSON.stringify(save_news));\n\n    return this.http.put<any>(this.apiUrl + 'news/editor/' + id, post_str, { headers: headers });\n  }\n\n\n  /**\n   * News List Services\n   */\n\n  // get todays lists\n  getNewsLists () {\n    return this.http.get<any>(this.apiUrl + 'news/editor/lists');\n  }\n\n  // get lists for given date, date format = 'Y-m-d' eg: 2018-11-20\n  getNewsListsByDate (date: string) {\n    return this.http.get<any>(this.apiUrl + 'news/editor/lists/' + date);\n  }\n\n  // get all news written today if published\n  getTodaysNews () {\n    return this.http.get<any>(this.apiUrl + 'news/editor/news/todays');\n  }\n\n  // add a news to a list\n  addNewsToList (data: { list_id: number, news_id: number }) {\n    return this.http.post<any>(this.apiUrl + 'news/editor/list/news/add', data);\n  }\n\n  // add a news to a list\n  removeNewsFromList (news_id: number) {\n    return this.http.delete<any>(this.apiUrl + 'news/editor/list/news/remove/' + news_id);\n  }\n\n  //order news in a list\n  orderList(ordered_list: ListOrder[]) {\n    return this.http.post<any>(this.apiUrl + 'news/editor/list/order/update', ordered_list);\n  }\n\n  //update selected news list\n  updateSelectedList(list_id: number) {\n    return this.http.put<any>(this.apiUrl + 'news/editor/list/selected/update', { \"settings_value\": list_id });\n  }\n\n  // get selected list\n  getSelectedList () {\n    return this.http.get<any>(this.apiUrl + 'news/lists/selected-list');\n  }\n}\n"]}