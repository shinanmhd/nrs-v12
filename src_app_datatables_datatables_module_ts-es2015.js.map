{"version":3,"sources":["./src/app/datatables/data-table/data-table.component.ts","./src/app/datatables/data-table/data-table.component.html","./src/app/datatables/datatables.module.ts","./src/app/datatables/datatables.routing.ts","./src/app/datatables/table-editing/table-editing.component.html","./src/app/datatables/table-editing/table-editing.component.ts","./src/app/datatables/table-filter/table-filter.component.ts","./src/app/datatables/table-filter/table-filter.component.html"],"names":[],"mappings":"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","file":"src_app_datatables_datatables_module_ts-es2015.js","sourcesContent":["import { Component, ViewChild } from '@angular/core';\n\ndeclare var require: any;\nconst data: any = require('assets/company.json');\n\n@Component({\n  selector: 'app-data-table',\n  templateUrl: './data-table.component.html',\n  styleUrls: ['./data-table.component.scss']\n})\nexport class DataTableComponent {\n  editing = {};\n    rows = [];\n    temp = [...data];\n\n    loadingIndicator = true;\n    reorderable = true;\n\n    columns = [\n        { prop: 'name' },\n        { name: 'Gender' },\n        { name: 'Company' }\n    ];\n\n    @ViewChild(DataTableComponent, {static: true}) table: DataTableComponent;\n    constructor() {\n        this.rows = data;\n        this.temp = [...data];\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n    }\n\n    updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n\n    }\n}\n","<mat-card>\n    <mat-card-content>\n        <mat-card-title>Basic Data table</mat-card-title>\n        <ngx-datatable\n            #table\n            class='material'\n            [columns]=\"columns\"\n            [columnMode]=\"'force'\"\n            [headerHeight]=\"50\"\n            [footerHeight]=\"50\"\n            [rowHeight]=\"'auto'\"\n            [limit]=\"10\"\n            [rows]='rows'> \n          </ngx-datatable>\n    </mat-card-content>\n</mat-card>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { MatInputModule } from '@angular/material/input';\nimport { DemoMaterialModule} from '../demo-material-module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { DataTablesRoutes } from './datatables.routing';\nimport { DataTableComponent } from './data-table/data-table.component';\nimport { TableEditingComponent } from './table-editing/table-editing.component';\nimport { TableFilterComponent } from './table-filter/table-filter.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(DataTablesRoutes),\n    MatInputModule,\n    NgxDatatableModule,\n    DemoMaterialModule\n  ],\n  declarations: [\n    DataTableComponent,\n    TableEditingComponent,\n    TableFilterComponent\n\n  ]\n})\n\nexport class DataTablesModule {}\n","import { Routes } from '@angular/router';\n\nimport { DataTableComponent } from './data-table/data-table.component';\nimport { TableEditingComponent } from './table-editing/table-editing.component';\nimport { TableFilterComponent } from './table-filter/table-filter.component';\n\nexport const DataTablesRoutes: Routes = [\n  {\n    path: '',\n    children: [{\n      path: 'basicdatatable',\n      component: DataTableComponent\n    }, {\n      path: 'editing',\n      component: TableEditingComponent\n    }, {\n      path: 'filter',\n      component: TableFilterComponent\n    }]\n  }\n];\n","<mat-card>\n    <mat-card-content>\n        <mat-card-title>Editable table</mat-card-title>\n        <ngx-datatable\n                    #mydatatable\n                    class=\"material\"\n                    [headerHeight]=\"50\"\n                    [limit]=\"5\"\n                    [columnMode]=\"'force'\"\n                    [footerHeight]=\"50\"\n                    [rowHeight]=\"'auto'\"\n                    [rows]=\"rows\">\n                    <ngx-datatable-column name=\"Name\">\n                      <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\" let-row=\"row\">\n                        <span\n                          title=\"Double click to edit\"\n                          (dblclick)=\"editing[rowIndex + '-name'] = true\"\n                          *ngIf=\"!editing[rowIndex + '-name']\">\n                          {{value}}\n                        </span>\n                        <input\n                          autofocus\n                          (blur)=\"updateValue($event, 'name', rowIndex)\"\n                          *ngIf=\"editing[rowIndex+ '-name']\"\n                          type=\"text\"\n                          [value]=\"value\"\n                        />\n                      </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Gender\">\n                      <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-row=\"row\" let-value=\"value\">\n                         <span\n                          title=\"Double click to edit\"\n                          (dblclick)=\"editing[rowIndex + '-gender'] = true\"\n                          *ngIf=\"!editing[rowIndex + '-gender']\">\n                          {{value}}\n                        </span>\n                        <select\n                          *ngIf=\"editing[rowIndex + '-gender']\"\n                          (change)=\"updateValue($event, 'gender', rowIndex)\"\n                          [value]=\"value\">\n                          <option value=\"male\">Male</option>\n                          <option value=\"female\">Female</option>\n                        </select>\n                      </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Age\">\n                      <ng-template ngx-datatable-cell-template let-value=\"value\">\n                        {{value}}\n                      </ng-template>\n                    </ngx-datatable-column>\n                  </ngx-datatable>\n    </mat-card-content>\n</mat-card>\n","import { Component, ViewChild } from '@angular/core';\n\ndeclare var require: any;\nconst data: any = require('assets/company.json');\n\n@Component({\n  selector: 'app-table-editing',\n  templateUrl: './table-editing.component.html',\n  styleUrls: ['./table-editing.component.scss']\n})\nexport class TableEditingComponent {\n editing = {};\n    rows = [];\n    temp = [...data];\n\n    loadingIndicator = true;\n    reorderable = true;\n\n    columns = [\n        { prop: 'name' },\n        { name: 'Gender' },\n        { name: 'Company' }\n    ];\n\n    @ViewChild(TableEditingComponent, {static: true}) table: TableEditingComponent;\n    constructor() {\n        this.rows = data;\n        this.temp = [...data];\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n    }\n\n    updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n\n    // update the rows\n\n    // Whenever the filter changes, always go back to the first page\n    this.table = data;\n    }\n    updateValue(event, cell, rowIndex) {\n    console.log('inline editing rowIndex', rowIndex);\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n    console.log('UPDATED!', this.rows[rowIndex][cell]);\n    }\n}\n","import { Component, ViewChild } from '@angular/core';\n\ndeclare var require: any;\nconst data: any = require('assets/company.json');\n@Component({\n  selector: 'app-table-filter',\n  templateUrl: './table-filter.component.html',\n  styleUrls: ['./table-filter.component.scss']\n})\nexport class TableFilterComponent {\n  editing = {};\n    rows = [];\n    temp = [...data];\n\n    loadingIndicator = true;\n    reorderable = true;\n\n    columns = [\n        { prop: 'name' },\n        { name: 'Gender' },\n        { name: 'Company' }\n    ];\n\n    @ViewChild(TableFilterComponent, {static: true}) table: TableFilterComponent;\n    constructor() {\n        this.rows = data;\n        this.temp = [...data];\n        setTimeout(() => { this.loadingIndicator = false; }, 1500);\n    }\n\n    updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n\n    // filter our data\n    const temp = this.temp.filter(function(d) {\n      return d.name.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n    // update the rows\n    this.rows = temp;\n    // Whenever the filter changes, always go back to the first page\n    this.table = data;\n    }\n    updateValue(event, cell, rowIndex) {\n    console.log('inline editing rowIndex', rowIndex);\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows[rowIndex][cell] = event.target.value;\n    this.rows = [...this.rows];\n    console.log('UPDATED!', this.rows[rowIndex][cell]);\n    }\n}\n","<mat-card>\n    <mat-card-content>\n        <mat-card-title>Filtered table</mat-card-title>\n        <mat-form-field>\n           <input matInput  type='text' class=\"form-control\"  placeholder='Type to filter the name column...' (keyup)='updateFilter($event)'   />\n        </mat-form-field>\n        <ngx-datatable\n            #table\n            class='material'\n            [columns]=\"columns\"\n            [columnMode]=\"'force'\"\n            [headerHeight]=\"50\"\n            [footerHeight]=\"50\"\n            [rowHeight]=\"'auto'\"\n            [limit]=\"10\"\n            [rows]='rows'> \n          </ngx-datatable>\n    </mat-card-content>\n</mat-card>"],"sourceRoot":"webpack:///"}