{"version":3,"sources":["webpack:///node_modules/rxjs/_esm2015/internal/observable/interval.js","webpack:///node_modules/rxjs/_esm2015/internal/operators/count.js","webpack:///src/app/news/add-ticker-dialog/add-ticker-dialog.component.ts","webpack:///src/app/news/add-ticker-dialog/add-ticker-dialog.component.html","webpack:///src/app/news/services/news.service.ts"],"names":["interval","period","scheduler","async","isNumeric","schedule","Observable","subscriber","add","dispatch","counter","state","next","count","predicate","source","lift","CountOperator","subscribe","CountSubscriber","destination","index","value","_tryPredicate","result","err","error","complete","Subscriber","AddTickerDialogComponent","dialogRef","data","store","onAdd","EventEmitter","ticker","Ticker","dhivehiEnabled","color","enabled","confirmation","close","closeDialog","emit","MAT_DIALOG_DATA","doAdd","NewsService","http","apiUrl","environment","get","perpage","page","params","HttpParams","set","toString","id","save_news","headers","HttpHeaders","newsstatus_id","post_str","JSON","parse","stringify","console","log","post","put","ticker_news","ticker_news_id"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n//# sourceMappingURL=interval.js.map","import { Subscriber } from '../Subscriber';\nexport function count(predicate) {\n    return (source) => source.lift(new CountOperator(predicate, source));\n}\nclass CountOperator {\n    constructor(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    }\n}\nclass CountSubscriber extends Subscriber {\n    constructor(destination, predicate, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.count = 0;\n        this.index = 0;\n    }\n    _next(value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    }\n    _tryPredicate(value) {\n        let result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    }\n    _complete() {\n        this.destination.next(this.count);\n        this.destination.complete();\n    }\n}\n//# sourceMappingURL=count.js.map","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Ticker, TickersNews } from '../models/news';\n\nimport { Store } from '@ngrx/store';\nimport * as newsActions from '../store/news.actions';\n\n@Component({\n  selector: 'app-add-ticker-dialog',\n  templateUrl: './add-ticker-dialog.component.html'\n})\nexport class AddTickerDialogComponent implements OnInit {\n  onAdd = new EventEmitter();\n\n  ticker = new Ticker();\n  @Input() public dhivehiEnabled = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddTickerDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private store: Store<any>,\n  ) { }\n\n  ngOnInit() {\n    this.ticker.color = '#000000';\n    this.ticker.enabled = 1;\n  }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n  doAdd() {\n    this.closeDialog(true);\n    //this.onAdd.emit(this.tickerNews);\n    this.store.dispatch(new newsActions.AddTicker(this.ticker));\n    this.onAdd.emit();\n  }\n\n}\n","<h3 mat-dialog-title>Add New Ticker</h3>\n\n<div mat-dialog-content>\n  <!-- <div fxLayout=\"row\" fxLayoutWrap=\"wrap\"> -->\n      <!-- title column -->\n      <!-- <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n          Add News to {{data.name}}\n      </div> -->\n      <!-- hr column -->\n      <!-- <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n        <mat-divider></mat-divider>\n      </div> -->\n      <!-- column -->\n  <!-- </div> -->\n\n  <div style=\"margin-top:20px;\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Ticker Name</mat-label>\n          <input matInput mat-autosize #dhvInput required\n            [appDnrmsThaana]=\"false\"\n            [(ngModel)]=\"ticker.name\"\n            name=\"tickerName\">\n        </mat-form-field>\n      </div>\n  </div>\n\n  <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Separator</mat-label>\n          <input matInput mat-autosize #dhvInput required\n            [appDnrmsThaana]=\"false\"\n            [(ngModel)]=\"ticker.separator\"\n            name=\"tickerName\">\n        </mat-form-field>\n      </div>\n  </div>\n\n  <!-- <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n          <code>{{ticker|json}}</code>\n      </div>\n  </div> -->\n\n</div>\n<!-- actions column -->\n<div align=\"end\" mat-dialog-actions align=\"end\">\n  <button mat-button color=\"basic\" (click)=\"closeDialog(true)\">Cancel</button>\n  <button mat-raised-button color=\"primary\" (click)=\"doAdd()\">Add</button>\n\n  <!-- <button mat-button color=\"basic\" *ngIf=\"data.newsstatus.status != 'published' && data.newsstatus.status != 'deleted'\" routerLink=\"/news/{{data.id}}\" (click)=\"closeDialog(true)\">Edit</button> -->\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\n\nimport { environment } from './../../../environments/environment';\nimport { News, TickersNews, Ticker } from './../models/news';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  //get dashboard data\n  getDashboard () {\n    return this.http.get<any>(this.apiUrl + 'news/dashboard');\n  }\n\n  // get the news that belongs to me, with status & bar(s)\n  myNews (perpage: number = 10, page: number = 1) {\n    return this.http.get<any>(this.apiUrl + 'news', {\n      params: new HttpParams()\n        .set('no_result', perpage.toString())\n        .set('page', page.toString())\n    });\n  }\n\n  // get the trashed news that belongs to me, with status & bar(s)\n  trashNews (perpage: number = 10, page: number = 1) {\n    return this.http.get<any>(this.apiUrl + 'news/trash', {\n      params: new HttpParams()\n        .set('no_result', perpage.toString())\n        .set('page', page.toString())\n    });\n  }\n\n  // get a news, with status & bar(s)\n  getNews (id: number) {\n    return this.http.get<any>(this.apiUrl + 'news/' + id);\n  }\n\n  // save a news, with bar(s) & ticker(s)\n  saveNews (save_news: News) {\n    const headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\n\n    save_news.newsstatus_id = 1;\n    const post_str = JSON.parse(JSON.stringify(save_news));\n    console.log(post_str);\n\n    return this.http.post<any>(this.apiUrl + 'news', post_str, { headers: headers });\n  }\n\n  // untrash a news\n  unTrashNews (id: number) {\n    return this.http.put<any>(this.apiUrl + 'news/untrash/' + id, null);\n  }\n\n  // deleate a news\n  destroyNews (id: number) {\n    return this.http.delete<any>(this.apiUrl + 'news/' + id);\n  }\n\n  // deleate a news\n  destroyNewsForever (id: number) {\n    return this.http.delete<any>(this.apiUrl + 'news/destroy/' + id);\n  }\n\n  // deleate a news bar\n  destroyBar (id: number) {\n    return this.http.delete<any>(this.apiUrl + 'news/bar/' + id);\n  }\n\n  // get a news for editing\n  editNews (id: number) {\n    return this.http.get<any>( this.apiUrl + 'news/edit/' + id );\n  }\n\n  // save a news, with bar(s) & ticker(s)\n  updateNews (save_news: News, id: number) {\n    const headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\n\n    save_news.newsstatus_id = 1;\n    const post_str = JSON.parse(JSON.stringify(save_news));\n\n    return this.http.put<any>(this.apiUrl + 'news/' + id, post_str, { headers: headers });\n  }\n\n  // Get tickers, tickers are returned with ticker news\n  GetTickers () {\n    return this.http.get<any>(this.apiUrl + 'news/ticker/tickers');\n  }\n\n  // Add a news to a ticker\n  AddTickerNews (ticker_news: TickersNews) {\n    const headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\n\n    return this.http.post<any>(this.apiUrl + 'news/ticker/news/add', ticker_news, { headers: headers });\n  }\n\n  // Enable a ticker news\n  ApproveTickerNews (ticker_news_id: number) {\n    const headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\n\n    return this.http.put<any>(this.apiUrl + 'news/ticker/news/enable', { ticker_news_id: ticker_news_id }, { headers: headers });\n  }\n\n  // Disable a ticker news\n  DisApproveTickerNews (ticker_news_id: number) {\n    const headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\n\n    return this.http.put<any>(this.apiUrl + 'news/ticker/news/disable', { ticker_news_id: ticker_news_id }, { headers: headers });\n  }\n\n  // deleate a ticker news\n  destroyTickerNews (ticker_news_id: number) {\n    return this.http.delete<any>(this.apiUrl + 'news/ticker/news/' + ticker_news_id);\n  }\n\n\n  // Add a ticker\n  AddTicker (ticker: Ticker) {\n    const headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\n\n    return this.http.post<any>(this.apiUrl + 'news/ticker/add/new', ticker, { headers: headers });\n  }\n}\n"]}