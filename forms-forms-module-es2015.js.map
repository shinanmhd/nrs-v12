{"version":3,"sources":["./node_modules/ng2-file-upload/__ivy_ngcc__/fesm2015/ng2-file-upload.js","./src/app/forms/file-upload/upload.component.ts","./src/app/forms/file-upload/upload.component.html","./src/app/forms/checkbox/checkbox.component.ts","./src/app/forms/checkbox/checkbox.component.html","./src/app/forms/forms.module.ts","./src/app/forms/forms.routing.ts","./src/app/forms/form-layouts/form-layout.component.ts","./src/app/forms/form-layouts/form-layout.component.html","./src/app/forms/editor/editor.component.ts","./src/app/forms/editor/editor.component.html","./src/app/forms/autocomplete/autocomplete.component.ts","./src/app/forms/autocomplete/autocomplete.component.html","./src/app/forms/wizard/wizard.component.ts","./src/app/forms/wizard/wizard.component.html","./src/app/forms/form-validation/form-validation.component.ts","./src/app/forms/form-validation/form-validation.component.html","./src/app/forms/datepicker/datepicker.component.ts","./src/app/forms/datepicker/datepicker.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2G;AAC5D;;AAE/C;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,qBAAqB,EAAE;AACvB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD,sDAAsD;AACtD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAoDV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAWV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,WAAW,EAKV;AACD;AACA;AACA;AACA,gCAAgC;AAChC,WAAW,EAuCV;AACD;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iDAAiD;AACvF;AACA,0CAA0C,6CAA6C;AACvF;AACA;AACA,0CAA0C,6CAA6C;AACvF;AACA;AACA,0CAA0C,6CAA6C;AACvF;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,4EAA4E,WAAW;AACvF,uDAAuD,WAAW;AAClE;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,yBAAyB,EAAE;AAC3B;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAwBV;;AAED;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,kCAAkC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","file":"forms-forms-module-es2015.js","sourcesContent":["import { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} node\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction isElement(node) {\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\nclass FileLikeObject {\n    /**\n     * @param {?} fileOrInput\n     */\n    constructor(fileOrInput) {\n        this.rawFile = fileOrInput;\n        /** @type {?} */\n        let isInput = isElement(fileOrInput);\n        /** @type {?} */\n        let fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n        /** @type {?} */\n        let postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        /** @type {?} */\n        let method = '_createFrom' + postfix;\n        ((/** @type {?} */ (this)))[method](fakePathOrObject);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    _createFromFakePath(path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n    /**\n     * @param {?} object\n     * @return {?}\n     */\n    _createFromObject(object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileLikeObject.prototype.lastModifiedDate;\n    /** @type {?} */\n    FileLikeObject.prototype.size;\n    /** @type {?} */\n    FileLikeObject.prototype.type;\n    /** @type {?} */\n    FileLikeObject.prototype.name;\n    /** @type {?} */\n    FileLikeObject.prototype.rawFile;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileItem {\n    /**\n     * @param {?} uploader\n     * @param {?} some\n     * @param {?} options\n     */\n    constructor(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    /**\n     * @return {?}\n     */\n    upload() {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    }\n    /**\n     * @return {?}\n     */\n    cancel() {\n        this.uploader.cancelItem(this);\n    }\n    /**\n     * @return {?}\n     */\n    remove() {\n        this.uploader.removeFromQueue(this);\n    }\n    /**\n     * @return {?}\n     */\n    onBeforeUpload() {\n        return void 0;\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildForm(form) {\n        return { form };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgress(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccess(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onError(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancel(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onComplete(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    _onBeforeUpload() {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildForm(form) {\n        this.onBuildForm(form);\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgress(progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccess(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = void 0;\n        this.onSuccess(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onError(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = void 0;\n        this.onError(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancel(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.onCancel(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onComplete(response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _prepareToUploading() {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileItem.prototype.file;\n    /** @type {?} */\n    FileItem.prototype._file;\n    /** @type {?} */\n    FileItem.prototype.alias;\n    /** @type {?} */\n    FileItem.prototype.url;\n    /** @type {?} */\n    FileItem.prototype.method;\n    /** @type {?} */\n    FileItem.prototype.headers;\n    /** @type {?} */\n    FileItem.prototype.withCredentials;\n    /** @type {?} */\n    FileItem.prototype.formData;\n    /** @type {?} */\n    FileItem.prototype.isReady;\n    /** @type {?} */\n    FileItem.prototype.isUploading;\n    /** @type {?} */\n    FileItem.prototype.isUploaded;\n    /** @type {?} */\n    FileItem.prototype.isSuccess;\n    /** @type {?} */\n    FileItem.prototype.isCancel;\n    /** @type {?} */\n    FileItem.prototype.isError;\n    /** @type {?} */\n    FileItem.prototype.progress;\n    /** @type {?} */\n    FileItem.prototype.index;\n    /** @type {?} */\n    FileItem.prototype._xhr;\n    /** @type {?} */\n    FileItem.prototype._form;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.uploader;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.some;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileType {\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    static getMimeClass(file) {\n        /** @type {?} */\n        let mimeClass = 'application';\n        if (this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file.type.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application') {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    }\n    /**\n     * @param {?} inputFilename\n     * @return {?}\n     */\n    static fileTypeDetection(inputFilename) {\n        /** @type {?} */\n        let types = {\n            'jpg': 'image',\n            'jpeg': 'image',\n            'tif': 'image',\n            'psd': 'image',\n            'bmp': 'image',\n            'png': 'image',\n            'nef': 'image',\n            'tiff': 'image',\n            'cr2': 'image',\n            'dwg': 'image',\n            'cdr': 'image',\n            'ai': 'image',\n            'indd': 'image',\n            'pin': 'image',\n            'cdp': 'image',\n            'skp': 'image',\n            'stp': 'image',\n            '3dm': 'image',\n            'mp3': 'audio',\n            'wav': 'audio',\n            'wma': 'audio',\n            'mod': 'audio',\n            'm4a': 'audio',\n            'compress': 'compress',\n            'zip': 'compress',\n            'rar': 'compress',\n            '7z': 'compress',\n            'lz': 'compress',\n            'z01': 'compress',\n            'bz2': 'compress',\n            'gz': 'compress',\n            'pdf': 'pdf',\n            'xls': 'xls',\n            'xlsx': 'xls',\n            'ods': 'xls',\n            'mp4': 'video',\n            'avi': 'video',\n            'wmv': 'video',\n            'mpg': 'video',\n            'mts': 'video',\n            'flv': 'video',\n            '3gp': 'video',\n            'vob': 'video',\n            'm4v': 'video',\n            'mpeg': 'video',\n            'm2ts': 'video',\n            'mov': 'video',\n            'doc': 'doc',\n            'docx': 'doc',\n            'eps': 'doc',\n            'txt': 'doc',\n            'odt': 'doc',\n            'rtf': 'doc',\n            'ppt': 'ppt',\n            'pptx': 'ppt',\n            'pps': 'ppt',\n            'ppsx': 'ppt',\n            'odp': 'ppt'\n        };\n        /** @type {?} */\n        let chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        /** @type {?} */\n        let extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    }\n}\n/*  MS office  */\nFileType.mime_doc = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n];\nFileType.mime_xsl = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n];\nFileType.mime_ppt = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n];\n/* PSD */\nFileType.mime_psd = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n];\n/* Compressed files */\nFileType.mime_compress = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream',\n    'application/x-zip-compressed',\n    'application/zip-compressed',\n    'application/x-7z-compressed',\n    'application/gzip',\n    'application/x-bzip2'\n];\nif (false) {\n    /** @type {?} */\n    FileType.mime_doc;\n    /** @type {?} */\n    FileType.mime_xsl;\n    /** @type {?} */\n    FileType.mime_ppt;\n    /** @type {?} */\n    FileType.mime_psd;\n    /** @type {?} */\n    FileType.mime_compress;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\n/**\n * @record\n */\nfunction Headers() { }\nif (false) {\n    /** @type {?} */\n    Headers.prototype.name;\n    /** @type {?} */\n    Headers.prototype.value;\n}\n/**\n * @record\n */\nfunction FileUploaderOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedMimeType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedFileType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.autoUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.isHTML5;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.filters;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.headers;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.method;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authToken;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.maxFileSize;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.queueLimit;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.removeAfterUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.url;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.disableMultipart;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.itemAlias;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authTokenHeader;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.additionalParameter;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.parametersBeforeFiles;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunction;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunctionIsAsync;\n}\nclass FileUploader {\n    /**\n     * @param {?} options\n     */\n    constructor(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: (/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => item._file),\n            formatDataFunctionIsAsync: false\n        };\n        this.setOptions(options);\n        this.response = new EventEmitter();\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    setOptions(options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (let i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    }\n    /**\n     * @param {?} files\n     * @param {?=} options\n     * @param {?=} filters\n     * @return {?}\n     */\n    addToQueue(files, options, filters) {\n        /** @type {?} */\n        let list = [];\n        for (let file of files) {\n            list.push(file);\n        }\n        /** @type {?} */\n        let arrayOfFilters = this._getFilters(filters);\n        /** @type {?} */\n        let count = this.queue.length;\n        /** @type {?} */\n        let addedFileItems = [];\n        list.map((/**\n         * @param {?} some\n         * @return {?}\n         */\n        (some) => {\n            if (!options) {\n                options = this.options;\n            }\n            /** @type {?} */\n            let temp = new FileLikeObject(some);\n            if (this._isValidFile(temp, arrayOfFilters, options)) {\n                /** @type {?} */\n                let fileItem = new FileItem(this, some, options);\n                addedFileItems.push(fileItem);\n                this.queue.push(fileItem);\n                this._onAfterAddingFile(fileItem);\n            }\n            else {\n                /** @type {?} */\n                let filter = arrayOfFilters[this._failFilterIndex];\n                this._onWhenAddingFileFailed(temp, filter, options);\n            }\n        }));\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    removeFromQueue(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    }\n    /**\n     * @return {?}\n     */\n    clearQueue() {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    uploadItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        ((/** @type {?} */ (this)))[transport](item);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    cancelItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    uploadAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems().filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploading));\n        if (!items.length) {\n            return;\n        }\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._prepareToUploading()));\n        items[0].upload();\n    }\n    /**\n     * @return {?}\n     */\n    cancelAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems();\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.cancel()));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFile(value) {\n        return isFile(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFileLikeObject(value) {\n        return value instanceof FileLikeObject;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getIndexOfItem(value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    }\n    /**\n     * @return {?}\n     */\n    getNotUploadedItems() {\n        return this.queue.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploaded));\n    }\n    /**\n     * @return {?}\n     */\n    getReadyItems() {\n        return this.queue\n            .filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => (item.isReady && !item.isUploading)))\n            .sort((/**\n         * @param {?} item1\n         * @param {?} item2\n         * @return {?}\n         */\n        (item1, item2) => item1.index - item2.index));\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        return void 0;\n    }\n    /**\n     * @param {?} fileItems\n     * @return {?}\n     */\n    onAfterAddingAll(fileItems) {\n        return { fileItems };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildItemForm(fileItem, form) {\n        return { fileItem, form };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onAfterAddingFile(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    onWhenAddingFileFailed(item, filter, options) {\n        return { item, filter, options };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onBeforeUploadItem(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressItem(fileItem, progress) {\n        return { fileItem, progress };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressAll(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccessItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onErrorItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancelItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCompleteItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    onCompleteAll() {\n        return void 0;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _mimeTypeFilter(item) {\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileSizeFilter(item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileTypeFilter(item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onErrorItem(item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCompleteItem(item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        /** @type {?} */\n        let nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} parsedHeaders\n     * @return {?}\n     */\n    _headersGetter(parsedHeaders) {\n        return (/**\n         * @param {?} name\n         * @return {?}\n         */\n        (name) => {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || void 0;\n            }\n            return parsedHeaders;\n        });\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _xhrTransport(item) {\n        /** @type {?} */\n        let that = this;\n        /** @type {?} */\n        let xhr = item._xhr = new XMLHttpRequest();\n        /** @type {?} */\n        let sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            /** @type {?} */\n            const appendFile = (/**\n             * @return {?}\n             */\n            () => sendable.append(item.alias, item._file, item.file.name));\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                (key) => {\n                    /** @type {?} */\n                    let paramVal = this.options.additionalParameter[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                }));\n            }\n            if (this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            sendable = this.options.formatDataFunction(item);\n        }\n        xhr.upload.onprogress = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            let progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            this._onProgressItem(item, progress);\n        });\n        xhr.onload = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            /** @type {?} */\n            let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            /** @type {?} */\n            let method = '_on' + gist + 'Item';\n            ((/** @type {?} */ (this)))[method](item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onerror = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onErrorItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onabort = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onCancelItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.open(item.method, item.url, true);\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (let header of this.options.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (let header of item.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = (/**\n         * @return {?}\n         */\n        function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        });\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => xhr.send(JSON.stringify(result))));\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n    _getTotalProgress(value = 0) {\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        /** @type {?} */\n        let notUploaded = this.getNotUploadedItems().length;\n        /** @type {?} */\n        let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        /** @type {?} */\n        let ratio = 100 / this.queue.length;\n        /** @type {?} */\n        let current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    }\n    /**\n     * @protected\n     * @param {?} filters\n     * @return {?}\n     */\n    _getFilters(filters) {\n        if (!filters) {\n            return this.options.filters;\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            /** @type {?} */\n            let names = filters.match(/[^\\s,]+/g);\n            return this.options.filters\n                .filter((/**\n             * @param {?} filter\n             * @return {?}\n             */\n            (filter) => names.indexOf(filter.name) !== -1));\n        }\n        return this.options.filters;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _render() {\n        return void 0;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _queueLimitFilter() {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    }\n    /**\n     * @protected\n     * @param {?} file\n     * @param {?} filters\n     * @param {?} options\n     * @return {?}\n     */\n    _isValidFile(file, filters, options) {\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every((/**\n         * @param {?} filter\n         * @return {?}\n         */\n        (filter) => {\n            this._failFilterIndex++;\n            return filter.fn.call(this, file, options);\n        }));\n    }\n    /**\n     * @protected\n     * @param {?} status\n     * @return {?}\n     */\n    _isSuccessCode(status) {\n        return (status >= 200 && status < 300) || status === 304;\n    }\n    /**\n     * @protected\n     * @param {?} response\n     * @param {?} headers\n     * @return {?}\n     */\n    _transformResponse(response, headers) {\n        return response;\n    }\n    /**\n     * @protected\n     * @param {?} headers\n     * @return {?}\n     */\n    _parseHeaders(headers) {\n        /** @type {?} */\n        let parsed = {};\n        /** @type {?} */\n        let key;\n        /** @type {?} */\n        let val;\n        /** @type {?} */\n        let i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map((/**\n         * @param {?} line\n         * @return {?}\n         */\n        (line) => {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        }));\n        return parsed;\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    _onWhenAddingFileFailed(item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onAfterAddingFile(item) {\n        this.onAfterAddingFile(item);\n    }\n    /**\n     * @protected\n     * @param {?} items\n     * @return {?}\n     */\n    _onAfterAddingAll(items) {\n        this.onAfterAddingAll(items);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onBeforeUploadItem(item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildItemForm(item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgressItem(item, progress) {\n        /** @type {?} */\n        let total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccessItem(item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancelItem(item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileUploader.prototype.authToken;\n    /** @type {?} */\n    FileUploader.prototype.isUploading;\n    /** @type {?} */\n    FileUploader.prototype.queue;\n    /** @type {?} */\n    FileUploader.prototype.progress;\n    /** @type {?} */\n    FileUploader.prototype._nextIndex;\n    /** @type {?} */\n    FileUploader.prototype.autoUpload;\n    /** @type {?} */\n    FileUploader.prototype.authTokenHeader;\n    /** @type {?} */\n    FileUploader.prototype.response;\n    /** @type {?} */\n    FileUploader.prototype.options;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileUploader.prototype._failFilterIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileSelectDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.onFileSelected = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @return {?}\n     */\n    isEmptyAfterSelection() {\n        return !!this.element.nativeElement.attributes.multiple;\n    }\n    /**\n     * @return {?}\n     */\n    onChange() {\n        /** @type {?} */\n        let files = this.element.nativeElement.files;\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this.uploader.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    }\n}\nFileSelectDirective.ɵfac = function FileSelectDirective_Factory(t) { return new (t || FileSelectDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFileSelectDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FileSelectDirective, selectors: [[\"\", \"ng2FileSelect\", \"\"]], hostBindings: function FileSelectDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function FileSelectDirective_change_HostBindingHandler() { return ctx.onChange(); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { onFileSelected: \"onFileSelected\" } });\n/** @nocollapse */\nFileSelectDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileSelectDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    onFileSelected: [{ type: Output }],\n    onChange: [{ type: HostListener, args: ['change',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileSelectDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileSelect]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { onFileSelected: [{\n            type: Output\n        }], \n    /**\n     * @return {?}\n     */\n    onChange: [{\n            type: HostListener,\n            args: ['change']\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileSelectDirective.prototype.uploader;\n    /** @type {?} */\n    FileSelectDirective.prototype.onFileSelected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileSelectDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileDropDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.fileOver = new EventEmitter();\n        this.onFileDrop = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this._preventAndStop(event);\n        this.uploader.addToQueue(transfer.files, options, filters);\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave(event) {\n        if (((/** @type {?} */ (this))).element) {\n            if (event.currentTarget === ((/** @type {?} */ (this))).element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _getTransfer(event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _preventAndStop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * @protected\n     * @param {?} types\n     * @return {?}\n     */\n    _haveFiles(types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    }\n}\nFileDropDirective.ɵfac = function FileDropDirective_Factory(t) { return new (t || FileDropDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFileDropDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FileDropDirective, selectors: [[\"\", \"ng2FileDrop\", \"\"]], hostBindings: function FileDropDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"drop\", function FileDropDirective_drop_HostBindingHandler($event) { return ctx.onDrop($event); })(\"dragover\", function FileDropDirective_dragover_HostBindingHandler($event) { return ctx.onDragOver($event); })(\"dragleave\", function FileDropDirective_dragleave_HostBindingHandler($event) { return ctx.onDragLeave($event); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { fileOver: \"fileOver\", onFileDrop: \"onFileDrop\" } });\n/** @nocollapse */\nFileDropDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileDropDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    fileOver: [{ type: Output }],\n    onFileDrop: [{ type: Output }],\n    onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],\n    onDragOver: [{ type: HostListener, args: ['dragover', ['$event'],] }],\n    onDragLeave: [{ type: HostListener, args: ['dragleave', ['$event'],] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileDropDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileDrop]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { fileOver: [{\n            type: Output\n        }], onFileDrop: [{\n            type: Output\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop: [{\n            type: HostListener,\n            args: ['drop', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver: [{\n            type: HostListener,\n            args: ['dragover', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave: [{\n            type: HostListener,\n            args: ['dragleave', ['$event']]\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileDropDirective.prototype.uploader;\n    /** @type {?} */\n    FileDropDirective.prototype.fileOver;\n    /** @type {?} */\n    FileDropDirective.prototype.onFileDrop;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileDropDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileUploadModule {\n}\nFileUploadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: FileUploadModule });\nFileUploadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function FileUploadModule_Factory(t) { return new (t || FileUploadModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FileUploadModule, { declarations: function () { return [FileDropDirective, FileSelectDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [FileDropDirective, FileSelectDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FileUploadModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [FileDropDirective, FileSelectDirective],\n                exports: [FileDropDirective, FileSelectDirective]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };\n\n//# sourceMappingURL=ng2-file-upload.js.map","import { Component, ChangeDetectionStrategy } from '@angular/core';\n/*import { FileUploader } from 'ng2-file-upload/ng2-file-upload';*/\nimport { FileUploader, FileItem, FileUploaderOptions } from 'ng2-file-upload';\n\nconst URL = 'https://evening-anchorage-3159.herokuapp.com/api/';\n\n@Component({\n  templateUrl: './upload.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['./upload.scss']\n})\nexport class UploadComponent {\n\n  uploader: FileUploader = new FileUploader({\n    url: URL,\n    isHTML5: true\n    });\n    hasBaseDropZoneOver = false;\n    hasAnotherDropZoneOver = false;\n\n    // Angular2 File Upload\n    fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n    }\n\n    fileOverAnother(e: any): void {\n    this.hasAnotherDropZoneOver = e;\n    }\n}\n","<mat-card>\n    <mat-card-content>\n        <mat-card-title>Angular2 File Upload</mat-card-title>\n        <section id=\"file-upload\">\n                    \n                        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" class=\"row\">\n                            <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" class=\"p-10\">\n                            <div ng2FileDrop [ngClass]=\"{'nv-file-over': hasBaseDropZoneOver}\" (fileOver)=\"fileOverBase($event)\" [uploader]=\"uploader\" class=\"py-5 mb-3 text-center font-medium-5 text-uppercase grey my-drop-zone\">\n                                Base dropzone\n                            </div>\n                            </div>\n                            <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" class=\"p-10\">\n                            <div ng2FileDrop [ngClass]=\"{'another-file-over-class': hasAnotherDropZoneOver}\" (fileOver)=\"fileOverAnother($event)\" [uploader]=\"uploader\" class=\"py-5 mb-3 text-center font-medium-5 text-uppercase grey my-drop-zone\">\n                                Another dropzone\n                            </div>\n                            </div>\n                        </div>\n                        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n                            <div fxFlex.gt-sm=\"25\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n                            <h4>Select files</h4>\n                            <div>Multiple</div>\n                            <label class=\"custom-file\">\n                                <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" multiple class=\"custom-file-input\">\n                                <span class=\"custom-file-control\"></span>\n                            </label>\n\n                            <div  class=\"m-t-30\">Single</div>\n                            <label class=\"custom-file\">\n                                <input type=\"file\" ng2FileSelect [uploader]=\"uploader\" class=\"custom-file-input\">\n                                <span class=\"custom-file-control\"></span>\n                            </label>\n                            </div>\n\n                            <div fxFlex.gt-sm=\"75\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n                            <h4>Upload queue</h4>\n                            <p>Queue length: {{ uploader?.queue?.length }}</p>\n\n                            <table class=\"table\">\n                                <thead>\n                                <tr>\n                                    <th width=\"50%\">Name</th>\n                                    <th>Size</th>\n                                    <th>Progress</th>\n                                    <th>Status</th>\n                                    <th>Actions</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                <tr *ngFor=\"let item of uploader.queue\">\n                                <td><strong>{{ item?.file?.name }}</strong></td>\n                                <td *ngIf=\"uploader.isHTML5\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\n                                <td *ngIf=\"uploader.isHTML5\">\n                                    <div class=\"progress\" style=\"margin-bottom: 0;\">\n                                    <div class=\"progress-bar\" role=\"progressbar\" [ngStyle]=\"{ 'width': item.progress + '%' }\"></div>\n                                    </div>\n                                </td>\n                                <td class=\"text-center\">\n                                    <span *ngIf=\"item.isSuccess\"><i class=\"fa fa-ok\"></i></span>\n                                    <span *ngIf=\"item.isCancel\"><i class=\"fa fa-ban\"></i></span>\n                                    <span *ngIf=\"item.isError\"><i class=\"fa fa-remove\"></i></span>\n                                </td>\n                                <td nowrap>\n                                    <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"item.upload()\" [disabled]=\"item.isReady || item.isUploading || item.isSuccess\">\n                                    <span class=\"fa fa-upload\"></span> Upload\n                                    </button>\n                                    <button type=\"button\" mat-raised-button color=\"accent\" (click)=\"item.cancel()\" [disabled]=\"!item.isUploading\">\n                                    <span class=\"fa fa-ban\"></span> Cancel\n                                    </button>\n                                    <button type=\"button\" mat-raised-button color=\"warn\" (click)=\"item.remove()\">\n                                    <span class=\"fa fa-trash\"></span> Remove\n                                    </button>\n                                </td>\n                                </tr>\n                                </tbody>\n                            </table>\n\n                            <div>\n                                <p>Queue progress: <mat-progress-bar mode=\"determinate\" [value]=\"uploader.progress\" class=\"m-t-10\"></mat-progress-bar></p>\n                                <button type=\"button\" mat-raised-button color=\"primary\" (click)=\"uploader.uploadAll()\" [disabled]=\"!uploader.getNotUploadedItems().length\">\n                                <span class=\"fa fa-upload\"></span> Upload all\n                                </button>\n                                <button type=\"button\" mat-raised-button color=\"accent\" (click)=\"uploader.cancelAll()\" [disabled]=\"!uploader.isUploading\">\n                                <span class=\"fa fa-ban\"></span> Cancel all\n                                </button>\n                                <button type=\"button\" mat-raised-button color=\"warn\" (click)=\"uploader.clearQueue()\" [disabled]=\"!uploader.queue.length\">\n                                <span class=\"fa fa-trash\"></span> Remove all\n                                </button>\n                            </div>\n                            </div>\n                        </div>\n                        \n                    </section> \n    </mat-card-content>\n</mat-card>\n        \n                                \n           \n    ","import { Component, OnInit } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent {\nchecked = false;\n  indeterminate = false;\n  align = 'start';\n  disabled = false;\n  labelPosition;\n}\n","<mat-card>\n  <mat-card-content>\n    <h3 class=\"example-h2\">Checkbox configuration</h3>\n\n    <section class=\"example-section\">\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\">Checked</mat-checkbox>\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"indeterminate\">Indeterminate</mat-checkbox>\n    </section>\n\n    <section class=\"example-section\">\n      <label class=\"example-margin\">Align:</label>\n      <mat-radio-group [(ngModel)]=\"labelPosition\">\n        <mat-radio-button class=\"example-margin\" value=\"after\">After</mat-radio-button>\n        <mat-radio-button class=\"example-margin\" value=\"before\">Before</mat-radio-button>\n      </mat-radio-group>\n    </section>\n\n    <section class=\"example-section\">\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"disabled\">Disabled</mat-checkbox>\n    </section>\n  </mat-card-content>\n</mat-card>\n\n<mat-card class=\"result\">\n  <mat-card-content>\n    <h2 class=\"example-h2\">Result</h2>\n\n    <section class=\"example-section\">\n      <mat-checkbox\n          class=\"example-margin\"\n          [(ngModel)]=\"checked\"\n          [(indeterminate)]=\"indeterminate\"\n          [labelPosition]=\"labelPosition\"\n          [disabled]=\"disabled\">\n        I'm a checkbox\n      </mat-checkbox>\n    </section>\n  </mat-card-content>\n</mat-card>\n","\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { DemoMaterialModule} from '../demo-material-module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormRoutes } from './forms.routing';\nimport { QuillModule } from 'ngx-quill';\nimport { FileUploadModule } from \"ng2-file-upload\";\n\n\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { DatepickerComponent } from './datepicker/datepicker.component';\nimport { FormLayoutComponent } from './form-layouts/form-layout.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { FormValidationComponent } from './form-validation/form-validation.component';\nimport { UploadComponent } from './file-upload/upload.component';\nimport { WizardComponent } from './wizard/wizard.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(FormRoutes),\n    DemoMaterialModule,\n    FlexLayoutModule,\n    FormsModule,\n    QuillModule,\n    ReactiveFormsModule,\n    FileUploadModule\n   ],\n  declarations: [\n    AutocompleteComponent,\n    CheckboxComponent,\n    DatepickerComponent,\n    FormLayoutComponent,\n    EditorComponent,\n    FormValidationComponent,\n    UploadComponent,\n    WizardComponent\n  ],\n})\n\nexport class FormModule {}\n","import { Routes } from '@angular/router';\n\nimport { AutocompleteComponent } from './autocomplete/autocomplete.component';\nimport { CheckboxComponent } from './checkbox/checkbox.component';\nimport { DatepickerComponent } from './datepicker/datepicker.component';\nimport { FormLayoutComponent } from './form-layouts/form-layout.component';\nimport { EditorComponent } from './editor/editor.component';\nimport { FormValidationComponent } from './form-validation/form-validation.component';\nimport { UploadComponent } from './file-upload/upload.component';\nimport { WizardComponent } from './wizard/wizard.component';\n\nexport const FormRoutes: Routes = [\n  {\n    path: '',\n    children: [{\n      path: 'autocomplete',\n      component: AutocompleteComponent\n    }, {\n      path: 'checkbox',\n      component: CheckboxComponent\n    }, {\n      path: 'datepicker',\n      component: DatepickerComponent\n    }, {\n      path: 'form-layout',\n      component: FormLayoutComponent\n    }, {\n      path: 'editor',\n      component: EditorComponent\n    }, {\n      path: 'form-validation',\n      component: FormValidationComponent\n    }, {\n      path: 'file-upload',\n      component: UploadComponent\n    }, {\n      path: 'wizard',\n      component: WizardComponent\n    }]\n  }\n];\n","import { Component} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {FormControl, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-formlayout',\n  templateUrl: './form-layout.component.html',\n  styleUrls: ['./form-layout.component.scss']\n})\nexport class FormLayoutComponent {\n  options: FormGroup;\n\n  constructor(fb: FormBuilder) {\n    this.options = fb.group({\n      hideRequired: false,\n      floatLabel: 'auto'\n    });\n  }\n  // For form validator\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  // Sufix and prefix\n  hide = true;\n\n  getErrorMessage() {\n    return this.email.hasError('required')\n      ? 'You must enter a value'\n      : this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n}\n","<!-- ============================================================== -->\n<!-- Card Grid-->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n                <mat-card-title>Form Basic Layouts</mat-card-title>\n                <!-- ============================================================== -->\n                <!-- column -->\n                <!-- ============================================================== -->\n                <form class=\"basic-form\">\n                <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n                    <!-- column -->\n                    <div fxFlex.gt-md=\"100\" fxFlex=\"100\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"Some text value\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"EmailId\" type=\"email\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"Password\" type=\"password\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <mat-form-field [floatLabel]=\"options.value.floatLabel\">\n                        <mat-label>Both a label and a placeholder</mat-label>\n                        <input matInput placeholder=\"Simple placeholder\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <mat-form-field hintLabel=\"Max 10 characters\">\n                        <input matInput #input maxlength=\"10\" placeholder=\"Enter some input\">\n                        <mat-hint align=\"end\">{{input.value?.length || 0}}/10</mat-hint>\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <mat-form-field>\n                        <mat-select placeholder=\"Select\">\n                          <mat-option value=\"option\">Option</mat-option>\n                          <mat-option value=\"option\">Option2</mat-option>\n                          <mat-option value=\"option\">Option3</mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-b-20\">\n                      <input class=\"form-control b-b\" placeholder=\"file\" type=\"file\">\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <mat-form-field\n                          [hideRequiredMarker]=\"options.value.hideRequired\"\n                          [floatLabel]=\"options.value.floatLabel\">\n                        <mat-select required>\n                          <mat-option>-- None --</mat-option>\n                          <mat-option value=\"option\">Option</mat-option>\n                        </mat-select>\n                        <mat-placeholder><mat-icon>favorite</mat-icon> <b> Fancy</b> <i> placeholder</i></mat-placeholder>\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-10 m-b-10\">\n                        <mat-checkbox color=\"primary\"  class=\"m-r-10\">Checkbox</mat-checkbox>\n                        <mat-checkbox  color=\"warn\" class=\"m-r-10\">Checkbox</mat-checkbox>\n                        <mat-checkbox  color=\"accent\">Checkbox</mat-checkbox>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20 m-b-20\">\n                      <mat-radio-group>\n                        <mat-radio-button color=\"primary\" value=\"auto\" class=\"m-r-10\">Auto</mat-radio-button>\n                        <mat-radio-button color=\"warn\" value=\"always\" class=\"m-r-10\">Always</mat-radio-button>\n                        <mat-radio-button color=\"accent\" value=\"never\">Never</mat-radio-button>\n                      </mat-radio-group>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <mat-form-field>\n                        <textarea matInput placeholder=\"Textarea\"></textarea>\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                      <button mat-raised-button color=\"primary\">Submit</button>\n                    </div>\n                </div>\n                </form>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n                <mat-card-title>Form field with error messages</mat-card-title>\n                <mat-form-field>\n                    <input matInput placeholder=\"Enter your email\" [formControl]=\"email\" required>\n                    <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\n                </mat-form-field>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n                <mat-card-title>Form field with prefix &amp; suffix</mat-card-title>\n                <mat-form-field>\n                <input matInput placeholder=\"Enter your password\" [type]=\"hide ? 'password' : 'text'\">\n                <mat-icon matSuffix (click)=\"hide = !hide\">{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\n              </mat-form-field>\n\n              <mat-form-field>\n                <input matInput placeholder=\"Amount\" type=\"number\" class=\"example-right-align\">\n                <span matPrefix>$&nbsp;</span>\n                <span matSuffix>.00</span>\n              </mat-form-field>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n<!-- ============================================================== -->\n<!-- Card Grid-->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n                <mat-card-title>Form with grid</mat-card-title>\n                <mat-card-subtitle>use this class <code>.row</code> to the fxLayout=\"row\" and <code>p-10</code> to the fxFlex div</mat-card-subtitle>\n                <!-- ============================================================== -->\n                <!-- column -->\n                <!-- ============================================================== -->\n                <form class=\"basic-form\">\n                <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" fxFlexAlign=\"center\" class=\"row\">\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"25\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 25\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"25\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 25\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"25\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 25\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"25\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 25\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"33.33\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 33.33\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"33.33\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 33.33\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"33.33\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 33.33\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"50\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 50\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"50\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 50\">\n                      </mat-form-field>\n                    </div>\n                    <!-- column -->\n                    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"p-10\">\n                      <mat-form-field>\n                        <input matInput placeholder=\"grid 100\">\n                      </mat-form-field>\n                    </div>\n                </div>\n                </form>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n","import { Component} from '@angular/core';\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.scss']\n})\nexport class EditorComponent {\n\n  subtitle: string;\n\n  constructor() {\n    this.subtitle = 'This is some text within a card block.';\n  }\n}\n","\n<mat-card>\n    <mat-card-content>\n    <mat-card-title>Default Editor</mat-card-title>\n    <mat-card-subtitle>quill editor with angular and TypeScript. ngx-quill is the new angular 2 and beyond implementation of ngQuill. <a href=\"https://github.com/KillerCodeMonkey/ngx-quill\" target=\"_blank\">Official website</a></mat-card-subtitle>\n    <quill-editor [style]=\"{height: '200px'}\"></quill-editor> \n    </mat-card-content>    \n</mat-card>\n<mat-card>\n    <mat-card-content>\n    <mat-card-title>Bubble Editor</mat-card-title>\n        <quill-editor theme=\"bubble\" placeholder=\"Bubble editor\" bounds=\".mat-drawer-content\" [style]=\"{border: '1px solid #dadada'}\"></quill-editor> \n    </mat-card-content>    \n</mat-card>\n\n","import { Component, ViewChild } from '@angular/core';\nimport { FormControl, NgModel } from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {startWith, map} from 'rxjs/operators';\n\nexport class State {\n  constructor(public name: string, public population: string, public flag: string) { }\n}\n\n@Component({\n  selector: 'app-autocomplete',\n  templateUrl: './autocomplete.component.html',\n  styleUrls: ['./autocomplete.component.scss']\n})\nexport class AutocompleteComponent {\n    // state autocomplate\n    stateCtrl: FormControl;\n    filteredStates: Observable<any[]>;\n\n  states: State[] = [\n    {\n      name: 'Arkansas',\n      population: '2.978M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\n    },\n    {\n      name: 'California',\n      population: '39.14M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\n    },\n    {\n      name: 'Florida',\n      population: '20.27M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\n    },\n    {\n      name: 'Texas',\n      population: '27.47M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\n    }\n  ];\n\n  constructor() {\n    this.stateCtrl = new FormControl();\n    this.filteredStates = this.stateCtrl.valueChanges\n      .pipe(\n        startWith(''),\n        map(state => state ? this.filterStates(state) : this.states.slice())\n      );\n  }\n\n  filterStates(name: string) {\n    return this.states.filter(state =>\n      state.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\n  }\n}\n","<!-- ============================================================== -->\n<!-- Card Grid-->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n                <mat-card-title>Autocomplete Example</mat-card-title>\n                <!-- ============================================================== -->\n                <!-- column -->\n                <!-- ============================================================== -->\n                <form class=\"example-form\">\n                    <mat-form-field class=\"example-full-width\">\n                        <input matInput placeholder=\"State\" aria-label=\"State\" [matAutocomplete]=\"auto\" [formControl]=\"stateCtrl\">\n                        <mat-autocomplete #auto=\"matAutocomplete\">\n                            <mat-option *ngFor=\"let state of filteredStates | async\" [value]=\"state.name\"> <img style=\"vertical-align:middle;\" aria-hidden src=\"{{state.flag}}\" height=\"25\" /> <span>{{ state.name }}</span> | <small>Population: {{state.population}}</small> </mat-option>\n                        </mat-autocomplete>\n                    </mat-form-field>\n                    <br />\n                    <mat-slide-toggle [checked]=\"stateCtrl.disabled\" (change)=\"stateCtrl.disabled ? stateCtrl.enable() : stateCtrl.disable()\"> Disable Input? </mat-slide-toggle>\n                </form>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-wizard',\n  templateUrl: './wizard.component.html',\n  styleUrls: ['./wizard.component.scss']\n})\nexport class WizardComponent implements OnInit {\n  isLinear = false;\n  firstFormGroup: FormGroup;\n  secondFormGroup: FormGroup;\n\n  constructor(private _formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.firstFormGroup = this._formBuilder.group({\n      firstCtrl: ['', Validators.required]\n    });\n    this.secondFormGroup = this._formBuilder.group({\n      secondCtrl: ['', Validators.required]\n    });\n\n  }\n}\n","<!-- ============================================================== -->\n<!-- row -->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <!-- Card column -->\n    <div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n                <mat-card-title>Horizontal wizard</mat-card-title>\n                <button mat-raised-button (click)=\"isLinear = true\" id=\"toggle-linear\">Enable linear mode</button>\n                <mat-horizontal-stepper [linear]=\"isLinear\">\n                  <mat-step [stepControl]=\"firstFormGroup\">\n                    <form [formGroup]=\"firstFormGroup\">\n                      <ng-template matStepLabel>Fill out your name</ng-template>\n                      <mat-form-field>\n                        <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\n                      </mat-form-field>\n                      <div>\n                        <button mat-raised-button color=\"warn\" matStepperNext>Next</button>\n                      </div>\n                    </form>\n                  </mat-step>\n                  <mat-step [stepControl]=\"secondFormGroup\">\n                    <form [formGroup]=\"secondFormGroup\">\n                      <ng-template matStepLabel>Fill out your address</ng-template>\n                      <mat-form-field>\n                        <input matInput placeholder=\"Address\" formControlName=\"secondCtrl\" required>\n                      </mat-form-field>\n                      <div>\n                        <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\n                        <button mat-raised-button color=\"warn\" matStepperNext>Next</button>\n                      </div>\n                    </form>\n                  </mat-step>\n                  <mat-step>\n                    <ng-template matStepLabel>Done</ng-template>\n                    You are now done.\n                    <div>\n                      <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\n                    </div>\n                  </mat-step>\n                </mat-horizontal-stepper>\n            \n            </mat-card-content>\n             \n        </mat-card>    \n    </div>\n</div> \n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <!-- Card column -->\n    <div fxFlex.gt-sm=\"100%\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n                <mat-card-title>Vertical wizard</mat-card-title>\n                <button mat-raised-button (click)=\"isLinear = true\" id=\"toggle-linear\">Enable linear mode</button>\n                <mat-vertical-stepper [linear]=\"isLinear\">\n                  <mat-step [stepControl]=\"firstFormGroup\">\n                    <form [formGroup]=\"firstFormGroup\">\n                      <ng-template matStepLabel>Fill out your name</ng-template>\n                      <mat-form-field>\n                        <input matInput placeholder=\"Last name, First name\" formControlName=\"firstCtrl\" required>\n                      </mat-form-field>\n                      <div>\n                        <button mat-raised-button color=\"warn\" matStepperNext>Next</button>\n                      </div>\n                    </form>\n                  </mat-step>\n                  <mat-step [stepControl]=\"secondFormGroup\">\n                    <form [formGroup]=\"secondFormGroup\">\n                      <ng-template matStepLabel>Fill out your address</ng-template>\n                      <mat-form-field>\n                        <input matInput placeholder=\"Address\" formControlName=\"secondCtrl\" required>\n                      </mat-form-field>\n                      <div>\n                        <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\n                        <button mat-raised-button color=\"warn\" matStepperNext>Next</button>\n                      </div>\n                    </form>\n                  </mat-step>\n                  <mat-step>\n                    <ng-template matStepLabel>Done</ng-template>\n                    You are now done.\n                    <div>\n                      <button mat-raised-button color=\"accent\" matStepperPrevious>Back</button>\n                    </div>\n                  </mat-step>\n                </mat-vertical-stepper>\n            \n            </mat-card-content>\n             \n        </mat-card>    \n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\nimport { CustomValidators } from 'ng2-validation';\n\nconst password = new FormControl('', Validators.required);\nconst confirmPassword = new FormControl('', CustomValidators.equalTo(password));\n\n@Component({\n  selector: 'app-form-validation',\n  templateUrl: './form-validation.component.html',\n  styleUrls: ['./form-validation.component.scss']\n})\nexport class FormValidationComponent implements OnInit {\n\n  public form: FormGroup;\n\n  constructor(private fb: FormBuilder) {}\n  ngOnInit() {\n    this.form = this.fb.group({\n      fname: [null, Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(10)])],\n      email: [null, Validators.compose([Validators.required, CustomValidators.email])],\n      range: [null, Validators.compose([Validators.required, CustomValidators.range([5, 9])])],\n      url: [null, Validators.compose([Validators.required, CustomValidators.url])],\n      date: [null, Validators.compose([Validators.required, CustomValidators.date])],\n      phone: [null, Validators.compose([Validators.required, CustomValidators.phone('IN')])],\n      gender: [null, Validators.required],\n      password: password,\n      confirmPassword: confirmPassword\n    });\n  }\n}\n","\n<mat-card>\n  <mat-card-content>\n  <mat-card-title>Form validation</mat-card-title>\n  <mat-card-subtitle>Angular2 custom validation here is the  <a href=\"https://github.com/yuyang041060120/ng2-validation\" target=\"_blank\">official site</a></mat-card-subtitle>\n  <form [formGroup]=\"form\">\n     \n      <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" class=\"row\">\n        <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n          <mat-form-field>\n            <input matInput placeholder=\"First name\" [formControl]=\"form.controls['fname']\">\n          </mat-form-field>\n            <mat-hint *ngIf=\"form.controls['fname'].hasError('required') && form.controls['fname'].touched\" class=\"text-danger font-14\">You must include a first name.</mat-hint>\n            <mat-hint *ngIf=\"form.controls['fname'].hasError('minlength') && form.controls['fname'].touched\" class=\"text-danger font-14\">Your first name must be at least 5 characters long.</mat-hint>\n            <mat-hint *ngIf=\"form.controls['fname'].hasError('maxlength') && form.controls['fname'].touched\" class=\"text-danger font-14\">Your first name cannot exceed 10 characters.</mat-hint>\n        </div>\n      \n\n      <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n        <mat-form-field >\n          <input matInput placeholder=\"Email Id\" [formControl]=\"form.controls['email']\" type=\"email\">\n        </mat-form-field>\n        <small *ngIf=\"form.controls['email'].hasError('required') && form.controls['email'].touched\" class=\"text-danger font-14\">You must include an email address.</small>\n        <small *ngIf=\"form.controls['email'].errors?.email && form.controls['email'].touched\" class=\"text-danger font-14\">You must include a valid email address.</small>\n      </div>\n\n      <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n        <mat-form-field>\n          <input matInput placeholder=\"Website\" [formControl]=\"form.controls['url']\" type=\"url\">\n        </mat-form-field>\n        <small *ngIf=\"form.controls['url'].hasError('required') && form.controls['url'].touched\" class=\"text-danger font-14\">You must include a web address.</small>\n        <small *ngIf=\"form.controls['url'].errors?.url && form.controls['url'].touched\" class=\"text-danger font-14\">You must include a valid web address.</small>\n      </div>\n\n      <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n        <mat-form-field>\n              <input matInput [matDatepicker]=\"picker\" [formControl]=\"form.controls['date']\" placeholder=\"Choose a date\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>  \n          <mat-hint *ngIf=\"form.controls['date'].hasError('required') && form.controls['date'].touched\" class=\"text-danger font-14\">You must include a date.</mat-hint>\n          <mat-hint *ngIf=\"form.controls['date'].errors?.date && form.controls['date'].touched\" class=\"text-danger font-14\">You must include a valid date.</mat-hint>\n      </div>\n\n      <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n        <mat-form-field>\n          <input matInput placeholder=\"Number range (between 5 and 9)\" [formControl]=\"form.controls['range']\">\n        </mat-form-field>\n        <small *ngIf=\"form.controls['range'].hasError('required') && form.controls['range'].touched\" class=\"text-danger font-14\">You must enter a number.</small>\n        <small *ngIf=\"form.controls['range'].errors?.range && form.controls['range'].touched\" class=\"text-danger font-14\">Number should be between 5 and 9.</small>\n      </div>\n     <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n        <mat-form-field>\n          <input matInput placeholder=\"Phone number\" [formControl]=\"form.controls['phone']\" type=\"text\">\n        </mat-form-field>\n        <small *ngIf=\"form.controls['phone'].hasError('required') && form.controls['phone'].touched\" class=\"text-danger font-14\">You must include phone number.</small>\n        <small *ngIf=\"form.controls['phone'].errors?.phone && form.controls['phone'].touched\" class=\"text-danger font-14\">You must include a valid phone number.</small>\n      </div>\n\n    \t<div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n        <mat-form-field>\n          <input matInput placeholder=\"Password\" [formControl]=\"form.controls['password']\" type=\"password\">\n        </mat-form-field>\n    \t\t<small *ngIf=\"form.controls['password'].hasError('required') && form.controls['password'].touched\" class=\"text-danger font-14\">You must include password.</small>\n      </div>\n\n      <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n        <mat-form-field>\n          <input matInput placeholder=\"Confirm Password\" [formControl]=\"form.controls['confirmPassword']\" type=\"password\">\n        </mat-form-field>\n    \t\t<small *ngIf=\"form.controls['confirmPassword'].hasError('required') && form.controls['confirmPassword'].touched\" class=\"text-danger font-14\">You must include confirm password.</small>\n    \t\t<small *ngIf=\"form.controls['confirmPassword'].errors?.equalTo\" class=\"text-danger font-14\">Passwords do not math.</small>\n    \t</div>\n\n      <div class=\"p-10\" fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n        <label class=\"m-r-20\">Gender :</label>\n    \t  <mat-radio-group [formControl]=\"form.controls['gender']\">\n      \t  <mat-radio-button value=\"male\" class=\"m-r-10\">Male</mat-radio-button>\n      \t  <mat-radio-button value=\"female\">Female</mat-radio-button>\n      \t</mat-radio-group>\n        <small *ngIf=\"!form.controls['gender'].valid && form.controls['gender'].touched\" class=\"mat-text-warn\">You must select a gender.</small>\n      </div>\n    </div>\n    \n    <mat-card-actions>\n      <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!form.valid\">Submit</button>\n    </mat-card-actions>\n  </form>\n    </mat-card-content>    \n</mat-card>","import { Component } from '@angular/core';\nimport { DateAdapter } from '@angular/material/core';\nimport {FormControl} from '@angular/forms';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\n\n\n@Component({\n  selector: 'app-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss']\n\n})\nexport class DatepickerComponent {\n    // this is for the start date\n    startDate = new Date(1990, 0, 1);\n\n    // Datepicker selected value\n    date = new FormControl(new Date());\n    serializedDate = new FormControl((new Date()).toISOString());\n\n    // Datepicker input and change event\n\n    events: string[] = [];\n\n    addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n        this.events.push(`${type}: ${event.value}`);\n    }\n\n\n}\n","<!-- ============================================================== -->\n<!-- Fixed height Card Grid-->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\">\n    <mat-card>\n        <mat-card-content>\n            <mat-card-title>Basic Datepicker</mat-card-title>\n            <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\n            <mat-form-field>\n              <input matInput [matDatepicker]=\"picker\" placeholder=\"Choose a date\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n\n        </mat-card-content>\n\n    </mat-card>\n    </div>\n    <!-- Grid-->\n    <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" fxFlex=\"100\" >\n    <mat-card>\n        <mat-card-content>\n            <mat-card-title>Datepicker start date</mat-card-title>\n            <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\n           <mat-form-field>\n              <input matInput [matDatepicker]=\"picker2\" placeholder=\"Choose a date\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n              <mat-datepicker #picker2 startView=\"year\" [startAt]=\"startDate\"></mat-datepicker>\n            </mat-form-field>\n\n        </mat-card-content>\n\n    </mat-card>\n    </div>\n     <!-- Grid-->\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" >\n    <mat-card>\n        <mat-card-content>\n            <mat-card-title>Datepicker selected value</mat-card-title>\n            <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\n           <mat-form-field>\n              <input matInput [matDatepicker]=\"picker3\" placeholder=\"Angular forms\" [formControl]=\"date\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\n              <mat-datepicker #picker3></mat-datepicker>\n            </mat-form-field>\n\n            <mat-form-field>\n              <input matInput [matDatepicker]=\"picker4\" placeholder=\"Angular forms (w/ deserialization)\"\n                     [formControl]=\"serializedDate\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker4\"></mat-datepicker-toggle>\n              <mat-datepicker #picker4></mat-datepicker>\n            </mat-form-field>\n\n            <mat-form-field>\n              <input matInput [matDatepicker]=\"picker5\" placeholder=\"Value binding\" [value]=\"date.value\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker5\"></mat-datepicker-toggle>\n              <mat-datepicker #picker5></mat-datepicker>\n            </mat-form-field>\n\n        </mat-card-content>\n\n    </mat-card>\n    </div>\n    <!-- Grid-->\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" >\n    <mat-card>\n        <mat-card-content>\n            <mat-card-title>Datepicker input and change events</mat-card-title>\n            <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\n           <mat-form-field>\n              <input matInput [matDatepicker]=\"picker6\" placeholder=\"Input & change events\"\n                     (dateInput)=\"addEvent('input', $event)\" (dateChange)=\"addEvent('change', $event)\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker6\"></mat-datepicker-toggle>\n              <mat-datepicker #picker6></mat-datepicker>\n            </mat-form-field>\n\n            <div class=\"b-all p-20\">\n              <div *ngFor=\"let e of events\">{{e}}</div>\n            </div>\n\n        </mat-card-content>\n\n    </mat-card>\n    </div>\n    <!-- Grid-->\n    <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" >\n    <mat-card>\n        <mat-card-content>\n            <mat-card-title>Disabled datepicker</mat-card-title>\n            <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\n           <p>\n              <mat-form-field>\n                <input matInput [matDatepicker]=\"dp1\" placeholder=\"Completely disabled\" disabled>\n                <mat-datepicker-toggle matSuffix [for]=\"dp1\"></mat-datepicker-toggle>\n                <mat-datepicker #dp1></mat-datepicker>\n              </mat-form-field>\n            </p>\n\n            <p>\n              <mat-form-field>\n                <input matInput [matDatepicker]=\"dp2\" placeholder=\"Popup disabled\">\n                <mat-datepicker-toggle matSuffix [for]=\"dp2\" disabled></mat-datepicker-toggle>\n                <mat-datepicker #dp2></mat-datepicker>\n              </mat-form-field>\n            </p>\n\n            <p>\n              <mat-form-field>\n                <input matInput [matDatepicker]=\"dp3\" placeholder=\"Input disabled\" disabled>\n                <mat-datepicker-toggle matSuffix [for]=\"dp3\"></mat-datepicker-toggle>\n                <mat-datepicker #dp3 disabled=\"false\"></mat-datepicker>\n              </mat-form-field>\n            </p>\n\n        </mat-card-content>\n\n    </mat-card>\n    </div>\n    <!-- Grid-->\n    <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" >\n    <mat-card>\n        <mat-card-content>\n            <mat-card-title>Datepicker touch UI</mat-card-title>\n            <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\n           <mat-form-field class=\"example-full-width\">\n              <input matInput [matDatepicker]=\"picker7\" placeholder=\"Choose a date\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker7\"></mat-datepicker-toggle>\n              <mat-datepicker touchUi=\"true\" #picker7></mat-datepicker>\n            </mat-form-field>\n\n        </mat-card-content>\n    </mat-card>\n    </div>\n    <!-- Grid-->\n    <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" >\n    <mat-card>\n        <mat-card-content>\n            <mat-card-title>Datepicker open method</mat-card-title>\n            <mat-card-subtitle>A material 2 component for datepicker</mat-card-subtitle>\n           <mat-form-field class=\"example-full-width\">\n              <input matInput [matDatepicker]=\"picker8\" placeholder=\"Choose a date\">\n              <mat-datepicker #picker8></mat-datepicker>\n            </mat-form-field>\n            <button mat-raised-button (click)=\"picker8.open()\">Open</button>\n        </mat-card-content>\n    </mat-card>\n    </div>\n    <!-- Grid-->\n    \n</div>    "],"sourceRoot":"webpack:///"}