{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/authentication/store/user.actions.ts","webpack:///src/app/authentication/store/user.effects.ts","webpack:///src/app/authentication/store/user.reducer.ts","webpack:///src/app/demo-material-module.ts","webpack:///src/app/editor/store/news-editor.actions.ts","webpack:///src/app/editor/store/news-editor.reducer.ts","webpack:///src/app/layouts/blank/blank.component.ts","webpack:///src/app/layouts/blank/blank.component.html","webpack:///src/app/layouts/full/full.component.ts","webpack:///src/app/layouts/full/full.component.html","webpack:///src/app/layouts/full/header/header.component.html","webpack:///src/app/layouts/full/header/header.component.ts","webpack:///src/app/layouts/full/sidebar/sidebar.component.html","webpack:///src/app/layouts/full/sidebar/sidebar.component.ts","webpack:///src/app/news/models/news.ts","webpack:///src/app/news/store/news.actions.ts","webpack:///src/app/news/store/news.reducer.ts","webpack:///src/app/shared/accordion/accordion.directive.ts","webpack:///src/app/shared/accordion/accordionanchor.directive.ts","webpack:///src/app/shared/accordion/accordionlink.directive.ts","webpack:///src/app/shared/component/add-ticker-news-dialog/add-ticker-news-dialog.component.ts","webpack:///src/app/shared/component/add-ticker-news-dialog/add-ticker-news-dialog.component.html","webpack:///src/app/shared/component/confirm-dialog/confirm-dialog.component.ts","webpack:///src/app/shared/component/confirm-dialog/confirm-dialog.component.html","webpack:///src/app/shared/component/view-news-dialog/view-news-dialog.component.html","webpack:///src/app/shared/component/view-news-dialog/view-news-dialog.component.ts","webpack:///src/app/shared/directives/thaana.directive.ts","webpack:///src/app/shared/menu-items/menu-items.ts","webpack:///src/app/shared/models/user.ts","webpack:///src/app/shared/services/auth.guard.ts","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/services/ds.service.ts","webpack:///src/app/shared/services/http-interceptor.service.ts","webpack:///src/app/shared/services/route-role.service.ts","webpack:///src/app/shared/services/session.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/spinner.component.ts","webpack:///src/app/store/app.reducer.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","AppComponent","auth","store","router","_location","console","log","loggedInSub","loggedIn$","subscribe","loggedIn","dispatch","unsubscribe","DEFAULT_PERFECT_SCROLLBAR_CONFIG","suppressScrollX","wheelSpeed","wheelPropagation","AppModule","provide","HTTP_INTERCEPTORS","useClass","HttpInterceptorService","multi","PERFECT_SCROLLBAR_CONFIG","useValue","LocationStrategy","HashLocationStrategy","BrowserModule","BrowserAnimationsModule","DemoMaterialModule","FormsModule","FlexLayoutModule","HttpClientModule","PerfectScrollbarModule","SharedModule","RouterModule","AppRoutes","relativeLinkResolution","StoreModule","reducers","metaReducers","EffectsModule","UserEffects","StoreDevtoolsModule","maxAge","ContextMenuModule","AngularFireModule","environment","AngularFirestoreModule","FullComponent","AppHeaderComponent","SpinnerComponent","AppBlankComponent","AppSidebarComponent","ConfirmDialogComponent","ViewNewsDialogComponent","AddTickerNewsDialogComponent","path","component","children","loadChildren","m","AdminModule","redirectTo","pathMatch","DashboardsModule","canActivate","AuthGuard","data","isPublic","role","EditorModule","NewsModule","ControlModule","MaterialComponentsModule","AppsModule","FormModule","TablesModule","DataTablesModule","PagesModule","WidgetsModule","ChartslibModule","AuthenticationModule","USER_LOGIN","USER_LOGIN_SUCCESS","USER_LOGIN_ERROR","USER_LOGOUT","USER_LOGOUT_SUCCESS","USER_LOGOUT_ERROR","USER_GET_SETTINGS","USER_GET_SETTINGS_SUCCESS","USER_GET_SETTINGS_ERROR","SERVER_USER_GET_SETTINGS","SERVER_USER_GET_SETTINGS_SUCCESS","SERVER_USER_GET_SETTINGS_ERROR","USER_GET_ROLES","USER_401","UserLogin","payload","type","UserLoginSuccess","UserLoginError","UserLogout","UserLogoutSuccess","UserLogoutError","User401","GetUserSettings","GetUserSettingsSuccess","GetUserSettingsError","GetUserRoles","ServerGetUserSettings","ServerGetUserSettingsSuccess","ServerGetUserSettingsError","actions","authService","sessionService","LogIn","pipe","ofType","map","action","switchMap","signIn","email","password","user","doSignIn","catchError","error","LogInSuccess","saveSession","getUserSetting","updateUserSettings","doSignOut","navigate","warn","Effect","Observable","myuser","name","token","roles","roles_a","profile","Profile","initialState","reducer","state","getUserState","createFeatureSelector","getUser","createSelector","MatAutocompleteModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatTableModule","MatDatepickerModule","MatDialogModule","MatExpansionModule","MatFormFieldModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSlideToggleModule","MatSliderModule","MatSnackBarModule","MatSortModule","MatStepperModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatNativeDateModule","CdkTableModule","A11yModule","BidiModule","CdkAccordionModule","ObserversModule","OverlayModule","PlatformModule","PortalModule","GET_REVIEW_NEWS","GET_REVIEW_NEWS_SUCCESS","GET_REVIEW_NEWS_ERROR","APPROVE_NEWS","APPROVE_NEWS_SUCCESS","APPROVE_NEWS_ERROR","REJECT_NEWS","REJECT_NEWS_SUCCESS","REJECT_NEWS_ERROR","GET_LISTS","GET_LISTS_SUCCESS","GET_LISTS_ERROR","GET_LISTS_BY_DATE","GET_LISTS_BY_DATE_SUCCESS","GET_LISTS_BY_DATE_ERROR","ADD_TO_LIST","ADD_TO_LIST_SUCCESS","ADD_TO_LIST_ERROR","REMOVE_FROM_LIST","REMOVE_FROM_LIST_SUCCESS","REMOVE_FROM_LIST_ERROR","UPDATE_LIST_ORDER","UPDATE_LIST_ORDER_SUCCESS","UPDATE_LIST_ORDER_ERROR","UPDATE_SELECTED_LIST","UPDATE_SELECTED_LIST_SUCCESS","UPDATE_SELECTED_LIST_ERROR","GET_SELECTED_LIST","GET_SELECTED_LIST_SUCCESS","GET_SELECTED_LIST_ERROR","CHANGE_REVIEW_NEWS_LOADED","LOGOUT_EDITOR_STATE","GetReviewNews","GetReviewNewsSuccess","GetReviewNewsError","ApproveNews","ApproveNewsSuccess","ApproveNewsError","RejectNews","RejectNewsSuccess","RejectNewsError","GetLists","GetListsSuccess","GetListsError","GetListsByDate","GetListsByDateSuccess","GetListsByDateError","AddToList","AddToListSuccess","AddToListError","RemoveFromList","RemoveFromListSuccess","RemoveFromListError","UpdateListOrder","UpdateListOrderSuccess","UpdateListOrderError","GetSelectedList","GetSelectedListSuccess","GetSelectedListError","UpdateSelectedList","UpdateSelectedListSuccess","UpdateSelectedListError","LogoutEditorState","UpdateReviewNewsLoaded","news","isLoaded","lists","isListLoaded","selectedList","filter","news_id","list_id","getReviewNewsState","getMyNews","getNewsById","newsBox","allItems","find","item","changeDetectorRef","media","menuItems","dir","config","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","removeListener","on","toggle","ds","store2","logged_in","show_top_icons","userData","User","storagePath","title","text","chatArray","select","UserState","userdata","logOut","session","username","status","getSession","checkRole","News","news_name","heading","body","newsstatus_id","user_id","language","Language","newsbar","NewsBar","draft","detail","created_at","updated_a","TickerNews","language_code","Newsstatus","NewNotes","note","NewsList","updated_at","list_news","ListNews","news_list_id","ListOrder","order","Ticker","TickersNews","JournalistDashboard","news_numbers","JournalistDashboardNewsNumbers","my","reject","approved","in_review","GET_A_NEWS","GET_A_NEWS_SUCCESS","GET_A_NEWS_ERROR","GET_MY_NEWS","GET_MY_NEWS_SUCCESS","GET_MY_NEWS_ERROR","GET_TRASH_NEWS","GET_TRASH_NEWS_SUCCESS","GET_TRASH_NEWS_ERROR","DELETE_NEWS","DELETE_NEWS_SUCCESS","DELETE_NEWS_ERROR","RESTORE_NEWS","RESTORE_NEWS_SUCCESS","RESTORE_NEWS_ERROR","CHANGE_NEWS_LOADED","CHANGE_MY_NEWS_LOADED","CHANGE_TRASH_NEWS_LOADED","DESTROY_NEWS","DESTROY_NEWS_SUCCESS","DESTROY_NEWS_ERROR","GET_TICKERS","GET_TICKERS_SUCCESS","GET_TICKERS_ERROR","ADD_TICKER_NEWS","ADD_TICKER_NEWS_SUCCESS","ADD_TICKER_NEWS_ERROR","APPROVE_TICKER_NEWS","APPROVE_TICKER_NEWS_SUCCESS","APPROVE_TICKER_NEWS_ERROR","DISAPPROVE_TICKER_NEWS","DISAPPROVE_TICKER_NEWS_SUCCESS","DISAPPROVE_TICKER_NEWS_ERROR","DELETE_TICKER_NEWS","DELETE_TICKER_NEWS_SUCCESS","DELETE_TICKER_NEWS_ERROR","ADD_TICKER","ADD_TICKER_SUCCESS","ADD_TICKER_ERROR","LOGOUT_NEWS_STATE","GetMyNews","GetMyNewsSuccess","GetMyNewsError","GetTrashNews","GetTrashNewsSuccess","GetTrashNewsError","GetNews","GetNewsSuccess","GetNewsError","DeleteNews","DeleteNewsSuccess","DeleteNewsError","RestoreNews","RestoreNewsSuccess","RestoreNewsError","UpdateNewsLoaded","UpdateMyNewsLoaded","UpdateTrashNewsLoaded","DestroyNews","DestroyNewsSuccess","DestroyNewsError","GetTickers","GetTickersSuccess","GetTickersError","AddTickerNews","AddTickerNewsSuccess","AddTickerNewsError","ApproveTickerNews","ApproveTickerNewsSuccess","ApproveTickerNewsError","DisApproveTickerNews","DisApproveTickerNewsSuccess","DisApproveTickerNewsError","DeleteTickerNews","DeleteTickerNewsSuccess","DeleteTickerNewsError","AddTicker","AddTickerSuccess","AddTickerError","LogoutNewsState","myNews","myNewsPageState","currentPage","perPage","lastPages","totalResults","trashNews","trashNewsPageState","isMyNewsLoaded","isTrashLoaded","tickers","current_page","Number","per_page","last_page","total","Object","assign","newsstatus","isTrashNewsLoaded","getNewsState","getMyNewsByStatus","x","AccordionDirective","navlinks","setTimeout","checkOpenLinks","selectedLink","forEach","link","selected","push","index","indexOf","splice","group","routeUrl","url","currentUrl","split","closeOtherLinks","events","event","NavigationEnd","AccordionAnchorDirective","navlink","AccordionLinkDirective","nav","_selected","value","addLink","removeGroup","dialogRef","onAdd","EventEmitter","tickerNews","dhivehiEnabled","ticker_id","enabled","confirmation","close","closeDialog","emit","MAT_DIALOG_DATA","changeLanguage","doAdd","onDelete","onUndo","ThaanaDirective","elem","_model","control","renderer","appDnrmsThaana","firstChar","ngModelChange","_transFrom","_transToKbd","selStart","nativeElement","selectionStart","selEnd","selectionEnd","applyDhivehiStyles","apply","style","color","fontSize","textAlign","direction","lineHeight","fontFamily","addClass","unicodeBidi","removeClass","nElm","_inputValue","_key","key","_keyChar","ctrl","length","substr","which","modifier","modifiers","CONTROL_MASK","ctrlKey","selOld","transIndex","tChar","new_text","substring","valueAccessor","writeValue","setCursor","focus","setSelectionRange","MENUITEMS","icon","subchildren","MenuItems","trash","Token","Role","dob","gender","fb","insta","twitter","phone","profilepic","coverimage","destroySubject$","Subject","next","takeUntil","initialize","AuthService","http","API_URL","BehaviorSubject","destroy","post","loginUser","DsService","dsInstance","deepstream","credentials","loginHandler","login","record","getRecord","getList","sessonService","snackBar","isRefreshingToken","tokenSubject","clone","setHeaders","Authorization","request","handle","addToken","tap","HttpResponse","open","statusText","duration","handle400Error","handle401Error","RouteRoleService","route","routeObserver$","RoutesRecognized","guardRoute","callCheckToken","root","firstChild","roles_","sRoutes","roleSubscription$","RootStore","includes","permissions","role_key","permission","SessionService","sessionExpiryTime","checkSessionExpiry","sessionStorage","clear","accessToken","roles_all","date","Date","setFullYear","getFullYear","setItem","JSON","stringify","toJSON","getUserLogoutSetting","observer","parse","complete","get","nowDate","sessionDate","getItem","CallLogoutState","getMonth","getDay","nowTime","getHours","getMinutes","getSeconds","sessionTime","regExp","parseInt","replace","found","checkExpiry","list","user_role","document","isSpinnerVisible","backgroundColor","NavigationStart","NavigationCancel","NavigationError","DOCUMENT","NewsState","ReviewNews","logger","production","apiUrl","storageUrl","pusher","cluster","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","enableProdMode","platformBrowser","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,eAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAA,8BAAwB,CAACS,EAAzB,GAA8B,KAA9B;AACAC,YAAM,CAACC,OAAP,GAAiBX,wBAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCOaY,a;AAGX,+BACUC,IADV,EAEUC,KAFV,EAGUC,MAHV,EAIUC,SAJV,EAI6B;AAAA;;AAHnB,eAAAH,IAAA,GAAAA,IAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AACN;;;;iBAEJ,oBAAW;AAAA;;AACTC,mBAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,iBAAKC,WAAL,GAAmB,KAAKN,IAAL,CAAUO,SAAV,CAAoBC,SAApB,CACjB,UAAAC,QAAQ,EAAI;AACV,mBAAI,CAACR,KAAL,CAAWS,QAAX,CAAoB,IAAI,+EAAJ,EAApB,EADU,CAEV;AACA;;AACD,aALgB,CAAnB;AAMD;;;iBAED,uBAAW;AACT,iBAAKJ,WAAL,CAAiBK,WAAjB;AACD;;;;;;;yBAtBUZ,a,EAAY,uI,EAAA,+G,EAAA,oH,EAAA,sH;AAAA,O;;;cAAZA,a;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;AChBzB;;AAAe;;AAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cCkC1C;;;AAMA,UAAMa,gCAAgC,GAAoC;AACxEC,uBAAe,EAAE,IADuD;AAExEC,kBAAU,EAAE,CAF4D;AAGxEC,wBAAgB,EAAE;AAHsD,OAA1E;;UAsDaC,U;;;;;yBAAAA,U;AAAS,O;;;cAATA,U;AAAS,oBAHR,4CAAAjB,YAGQ;;;mBAlBT,CACT;AACEkB,iBAAO,EAAE,mDAAAC,iBADX;AAEEC,kBAAQ,EAAE,uEAAAC,sBAFZ;AAGEC,eAAK,EAAE;AAHT,SADS,EAMT;AACEJ,iBAAO,EAAE,oDAAAK,wBADX;AAEEC,kBAAQ,EAAEX;AAFZ,SANS,EAUT;AACAK,iBAAO,EAAE,8CAAAO,gBADT;AAEAL,kBAAQ,EAAE,8CAAAM;AAFV,SAVS,C;AAcV,kBA/BQ,CACP,wDAAAC,aADO,EAEP,mEAAAC,uBAFO,EAGP,mDAAAC,kBAHO,EAIP,6CAAAC,WAJO,EAKP,mDAAAC,gBALO,EAMP,mDAAAC,gBANO,EAOP,oDAAAC,sBAPO,EAQP,mDAAAC,YARO,EASP,8CAAAC,YAAA,SAAqB,0CAAAC,SAArB,EAAgC;AAAEC,gCAAsB,EAAE;AAA1B,SAAhC,CATO,EAUP,0CAAAC,WAAA,SAAoB,iDAAAC,QAApB,EAA8B;AAACC,sBAAY;AAAb,SAA9B,CAVO,EAWP,4CAAAC,aAAA,SAAsB,CAAC,iEAAAC,WAAD,CAAtB,CAXO,EAYP,mDAAAC,mBAAA,YAA+B;AAACC,gBAAM,EAAE;AAAT,SAA/B,CAZO,EAaP,8CAAAC,iBAAA,UAbO,EAcP,4CAAAC,iBAAA,eAAgC,wDAAAC,WAAA,eAAhC,CAdO,EAeP,sDAAAC,sBAfO,CA+BR;;;;6HAIU/B,U,EAAS;AAAA,yBA9ClB,4CAAAjB,YA8CkB,EA7ClB,0DAAAiD,aA6CkB,EA5ClB,mEAAAC,kBA4CkB,EA3ClB,uDAAAC,gBA2CkB,EA1ClB,4DAAAC,iBA0CkB,EAzClB,qEAAAC,mBAyCkB,EAxClB,wFAAAC,sBAwCkB,EAvClB,4FAAAC,uBAuCkB,EAtClB,wGAAAC,4BAsCkB;AAtCU,oBAI5B,wDAAA7B,aAJ4B,EAK5B,mEAAAC,uBAL4B,EAM5B,mDAAAC,kBAN4B,EAO5B,6CAAAC,WAP4B,EAQ5B,mDAAAC,gBAR4B,EAS5B,mDAAAC,gBAT4B,EAU5B,oDAAAC,sBAV4B,EAW5B,mDAAAC,YAX4B,EAWhB,0DAXgB,EAWhB,yDAXgB,EAWhB,6DAXgB,EAWhB,sEAXgB,EAWhB,+DAXgB,EAWhB,6DAXgB,EAkB5B,sDAAAc,sBAlB4B;AAsCV,S;AApBI,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEnB,UAAMZ,UAAS,GAAW,CAAC;AAChCqB,YAAI,EAAE,EAD0B;AAEhCC,iBAAS,EAAE,0DAAAT,aAFqB;AAGhCU,gBAAQ,EAAE,CACR;AACEF,cAAI,EAAE,OADR;AAEEG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,oBAA+BpE,IAA/B,CAAoC,UAAAqE,CAAC;AAAA,qBAAIA,CAAC,CAACC,WAAN;AAAA,aAArC,CAAN;AAAA,WAFhB,CAGE;AACA;;AAJF,SADQ,EAMR;AACAL,cAAI,EAAE,EADN;AAEAM,oBAAU,EAAE,OAFZ;AAGAC,mBAAS,EAAE;AAHX,SANQ,EAUR;AACAP,cAAI,EAAE,MADN;AAEAG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,oBAAyCpE,IAAzC,CAA8C,UAAAqE,CAAC;AAAA,qBAAIA,CAAC,CAACI,gBAAN;AAAA,aAA/C,CAAN;AAAA,WAFd;AAGAC,qBAAW,EAAE,CAAC,yDAAAC,SAAD,CAHb;AAIAC,cAAI,EAAE;AAAEC,oBAAQ,EAAE,IAAZ;AAAkBC,gBAAI,EAAE;AAAxB;AAJN,SAVQ,EAgBV;AACEb,cAAI,EAAE,QADR;AAEEG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,oBAAiCpE,IAAjC,CAAsC,UAAAqE,CAAC;AAAA,qBAAIA,CAAC,CAACU,YAAN;AAAA,aAAvC,CAAN;AAAA,WAFhB,CAGE;AACA;;AAJF,SAhBU,EAsBV;AACEd,cAAI,EAAE,MADR;AAEEG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,oBAA6BpE,IAA7B,CAAkC,UAAAqE,CAAC;AAAA,qBAAIA,CAAC,CAACW,UAAN;AAAA,aAAnC,CAAN;AAAA,WAFhB;AAGEN,qBAAW,EAAE,CAAC,yDAAAC,SAAD,CAHf;AAIEC,cAAI,EAAE;AAAEC,oBAAQ,EAAE,KAAZ;AAAmBC,gBAAI,EAAE;AAAzB;AAJR,SAtBU,EA4BV;AACEb,cAAI,EAAE,SADR;AAEEG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,oBAAmCpE,IAAnC,CAAwC,UAAAqE,CAAC;AAAA,qBAAIA,CAAC,CAACY,aAAN;AAAA,aAAzC,CAAN;AAAA,WAFhB;AAGEP,qBAAW,EAAE,CAAC,yDAAAC,SAAD,CAHf;AAIEC,cAAI,EAAE;AAAEC,oBAAQ,EAAE,KAAZ;AAAmBC,gBAAI,EAAE;AAAzB;AAJR,SA5BU,EAkCV;AACEb,cAAI,EAAE,UADR;AAEEG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,oBAA+CpE,IAA/C,CAAoD,UAAAqE,CAAC;AAAA,qBAAIA,CAAC,CAACa,wBAAN;AAAA,aAArD,CAAN;AAAA;AAFhB,SAlCU,EAsCV;AACEjB,cAAI,EAAE,MADR;AAEEG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,oBAA6BpE,IAA7B,CAAkC,UAAAqE,CAAC;AAAA,qBAAIA,CAAC,CAACc,UAAN;AAAA,aAAnC,CAAN;AAAA;AAFhB,SAtCU,EA0CV;AACElB,cAAI,EAAE,OADR;AAEEG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,oBAA+BpE,IAA/B,CAAoC,UAAAqE,CAAC;AAAA,qBAAIA,CAAC,CAACe,UAAN;AAAA,aAArC,CAAN;AAAA;AAFhB,SA1CU,EA8CV;AACEnB,cAAI,EAAE,QADR;AAEEG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,oBAAiCpE,IAAjC,CAAsC,UAAAqE,CAAC;AAAA,qBAAIA,CAAC,CAACgB,YAAN;AAAA,aAAvC,CAAN;AAAA;AAFhB,SA9CU,EAkDV;AACEpB,cAAI,EAAE,YADR;AAEEG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,oBAAyCpE,IAAzC,CAA8C,UAAAqE,CAAC;AAAA,qBAAIA,CAAC,CAACiB,gBAAN;AAAA,aAA/C,CAAN;AAAA;AAFhB,SAlDU,EAsDV;AACErB,cAAI,EAAE,OADR;AAEEG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,oBAA+BpE,IAA/B,CAAoC,UAAAqE,CAAC;AAAA,qBAAIA,CAAC,CAACkB,WAAN;AAAA,aAArC,CAAN;AAAA;AAFhB,SAtDU,EA0DV;AACEtB,cAAI,EAAE,SADR;AAEEG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,oBAAmCpE,IAAnC,CAAwC,UAAAqE,CAAC;AAAA,qBAAIA,CAAC,CAACmB,aAAN;AAAA,aAAzC,CAAN;AAAA;AAFhB,SA1DU,EA8DV;AACEvB,cAAI,EAAE,QADR;AAEEG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,oBAAoCpE,IAApC,CAAyC,UAAAqE,CAAC;AAAA,qBAAIA,CAAC,CAACoB,eAAN;AAAA,aAA1C,CAAN;AAAA;AAFhB,SA9DU;AAHsB,OAAD,EAsE/B;AACAxB,YAAI,EAAE,EADN;AAEAC,iBAAS,EAAE,4DAAAN,iBAFX;AAGAO,gBAAQ,EAAE,CAAC;AACTF,cAAI,EAAE,gBADG;AAETG,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,oBAAiDpE,IAAjD,CAAsD,UAAAqE,CAAC;AAAA,qBAAIA,CAAC,CAACqB,oBAAN;AAAA,aAAvD,CAAN;AAAA;AAFL,SAAD,CAHV;AAOAd,YAAI,EAAE;AAAEC,kBAAQ,EAAE;AAAZ;AAPN,OAtE+B,EA+E/B;AACAZ,YAAI,EAAE,IADN;AAEAM,kBAAU,EAAE;AAFZ,OA/E+B,CAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHA,UAAMoB,WAAU,GAAG,mBAAnB;AACA,UAAMC,mBAAkB,GAAG,2BAA3B;AACA,UAAMC,iBAAgB,GAAG,yBAAzB;AAEA,UAAMC,YAAW,GAAG,oBAApB;AACA,UAAMC,oBAAmB,GAAG,4BAA5B;AACA,UAAMC,kBAAiB,GAAG,0BAA1B;AAEA,UAAMC,kBAAiB,GAAG,0BAA1B;AACA,UAAMC,0BAAyB,GAAG,kCAAlC;AACA,UAAMC,wBAAuB,GAAG,gCAAhC;AAEA,UAAMC,yBAAwB,GAAG,iCAAjC;AACA,UAAMC,iCAAgC,GAAG,yCAAzC;AACA,UAAMC,+BAA8B,GAAG,uCAAvC;AAEA,UAAMC,eAAc,GAAG,uBAAvB;AAEA,UAAMC,MAAQ,GAAG,iBAAjB;;UAGMC,U,GAEX,oBAAmBC,OAAnB,EAAiC;AAAA;;AAAd,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOhB,WAAP;AAC0B,O;;UAGxBiB,iB,GAEX,2BAAmBF,OAAnB,EAAkC;AAAA;;AAAf,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOf,mBAAP;AAC2B,O;;UAGzBiB,e,GAAb;AAAA;;AACW,aAAAF,IAAA,GAAOd,iBAAP;AACV,O;;UAEYiB,W,GAAb;AAAA;;AACW,aAAAH,IAAA,GAAOb,YAAP;AACV,O;;UAEYiB,kB,GAAb;AAAA;;AACW,aAAAJ,IAAA,GAAOZ,oBAAP,CADX,CAEE;AACD,O;;UAEYiB,gB,GAAb;AAAA;;AACW,aAAAL,IAAA,GAAOX,kBAAP;AACV,O;;UAEYiB,K,GAAb;AAAA;;AACW,aAAAN,IAAA,GAAOH,MAAP;AACV,O;;UAEYU,gB,GAAb;AAAA;;AACW,aAAAP,IAAA,GAAOV,kBAAP;AACV,O;;UAEYkB,uB,GAEX,iCAAmBT,OAAnB,EAAkC;AAAA;;AAAf,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOT,0BAAP;AAC2B,O;;UAGzBkB,qB,GAAb;AAAA;;AACW,aAAAT,IAAA,GAAOR,wBAAP;AACV,O;;UAEYkB,a,GAAb;AAAA;;AACW,aAAAV,IAAA,GAAOJ,eAAP;AACV,O;AAID;;;;;UAGae,sB,GAAb;AAAA;;AACW,aAAAX,IAAA,GAAOP,yBAAP;AACV,O;;UAEYmB,6B,GAEX,uCAAmBb,OAAnB,EAAkC;AAAA;;AAAf,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAON,iCAAP;AAC2B,O;;UAGzBmB,2B,GAAb;AAAA;;AACW,aAAAb,IAAA,GAAOL,+BAAP;AACV,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCjEYpD,Y,GAEX,sBACUuE,OADV,EAEUC,WAFV,EAGUC,cAHV,EAIUjH,KAJV,EAKUC,MALV,EAKwB;AAAA;;AAAA;;AAJd,aAAA8G,OAAA,GAAAA,OAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAjH,KAAA,GAAAA,KAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AAIV,aAAAiH,KAAA,GAAyB,KAAKH,OAAL,CACvBI,IADuB,CAErB,+CAAAC,MAAA,EAAO,qDAAP,CAFqB,EAGrB,gDAAAC,GAAA,EAAI,UAACC,MAAD;AAAA,iBAAmCA,MAAM,CAACtB,OAA1C;AAAA,SAAJ,CAHqB,EAIrB,gDAAAuB,SAAA,EAAU,UAAAvB,OAAO,EAAI;AACnB,iBAAO,MAAI,CAACgB,WAAL,CAAiBQ,MAAjB,CAAwBxB,OAAO,CAACyB,KAAhC,EAAuCzB,OAAO,CAAC0B,QAA/C,EAAyDP,IAAzD,CACL,gDAAAE,GAAA,EAAI,UAACM,IAAD,EAAgB;AAClB;AACA,kBAAI,CAACX,WAAL,CAAiBY,QAAjB,CAA0BD,IAA1B;;AACA,mBAAO,IAAI,2DAAJ,CAAiCA,IAAjC,CAAP;AACD,WAJD,CADK,EAML,gDAAAE,UAAA,EAAW,UAACC,KAAD,EAAW;AACpB3H,mBAAO,CAACC,GAAR,CAAY0H,KAAZ;AACA,mBAAO,0CAAa,IAAI,yDAAJ,EAAb,CAAP;AACD,WAHD,CANK,CAAP;AAUD,SAXD,CAJqB,CAAzB;AAmBA,aAAAC,YAAA,GAAgC,KAAKhB,OAAL,CAC9BI,IAD8B,CAE5B,+CAAAC,MAAA,EAAO,6DAAP,CAF4B,EAG5B,gDAAAC,GAAA,EAAI,UAACC,MAAD;AAAA,iBAA0CA,MAAM,CAACtB,OAAjD;AAAA,SAAJ,CAH4B,EAI5B,gDAAAqB,GAAA,EAAI,UAACM,IAAD,EAAgB;AAClB;AACA,cAAI,MAAI,CAACV,cAAL,CAAoBe,WAApB,CAAgCL,IAAhC,CAAJ,EAA2C,CACzC;AACA;AACD,WALiB,CAMlB;;AAED,SARD,CAJ4B,CAAhC;AAgBA,aAAAnB,eAAA,GAAmC,KAAKO,OAAL,CACjCI,IADiC,CAE/B,+CAAAC,MAAA,EAAO,4DAAP,CAF+B,EAG/B,gDAAAC,GAAA,EAAI,UAACC,MAAD;AAAA,iBAAyCA,MAAzC;AAAA,SAAJ,CAH+B,EAI/B,gDAAAC,SAAA,EAAU,UAAAvB,OAAO,EAAI;AACnB,iBAAO,MAAI,CAACiB,cAAL,CAAoBgB,cAApB,GACJd,IADI,CAEH,gDAAAE,GAAA,EAAI,UAACM,IAAD,EAAgB;AAClB,mBAAO,IAAI,iEAAJ,CAAuCA,IAAvC,CAAP;AACD,WAFD,CAFG,EAKH,gDAAAE,UAAA,EAAW,UAACC,KAAD,EAAW;AACpB3H,mBAAO,CAACC,GAAR,CAAY0H,KAAZ;AACA,mBAAO,0CAAa,IAAI,+DAAJ,EAAb,CAAP;AACD,WAHD,CALG,CAAP;AAUD,SAXD,CAJ+B,CAAnC;AAmBA,aAAAlB,qBAAA,GAAyC,KAAKG,OAAL,CACvCI,IADuC,CAErC,+CAAAC,MAAA,EAAO,mEAAP,CAFqC,EAGrC,gDAAAC,GAAA,EAAI,UAACC,MAAD;AAAA,iBAA+CA,MAA/C;AAAA,SAAJ,CAHqC,EAIrC,gDAAAC,SAAA,EAAU,UAAAvB,OAAO,EAAI;AACnB,iBAAO,MAAI,CAACiB,cAAL,CAAoBiB,kBAApB,GAAyCf,IAAzC,CACL,gDAAAE,GAAA,EAAI,UAACM,IAAD,EAAgB;AAClB,kBAAI,CAACV,cAAL,CAAoBe,WAApB,CAAgCL,IAAhC;;AACA,mBAAO,IAAI,uEAAJ,CAA6CA,IAA7C,CAAP;AACD,WAHD,CADK,EAKL,gDAAAE,UAAA,EAAW,UAACC,KAAD,EAAW;AACpB3H,mBAAO,CAACC,GAAR,CAAY0H,KAAZ;AACA,mBAAO,0CAAa,IAAI,qEAAJ,EAAb,CAAP;AACD,WAHD,CALK,CAAP;AASD,SAVD,CAJqC,CAAzC;AAkBA,aAAA1B,UAAA,GAA8B,KAAKW,OAAL,CAC5BI,IAD4B,CAE1B,+CAAAC,MAAA,EAAO,sDAAP,CAF0B,EAG1B,gDAAAC,GAAA,EAAI,UAACC,MAAD;AAAA,iBAAoCA,MAApC;AAAA,SAAJ,CAH0B,EAI1B,gDAAAC,SAAA,EAAU,UAAAvB,OAAO,EAAI;AACnB,gBAAI,CAAChG,KAAL,CAAWS,QAAX,CAAoB,IAAI,qEAAJ,EAApB;;AACA,gBAAI,CAACT,KAAL,CAAWS,QAAX,CAAoB,IAAI,gFAAJ,EAApB;;AACA,gBAAI,CAACuG,WAAL,CAAiBmB,SAAjB;;AAEA,gBAAI,CAAClI,MAAL,CAAYmI,QAAZ,CAAqB,CAAC,uBAAD,CAArB,EALmB,CAMnB;;;AACA,iBAAO,0CAAa,IAAI,4DAAJ,EAAb,CAAP;AACD,SARD,CAJ0B,CAA9B;AAeA,aAAA/B,iBAAA,GAAqC,KAAKU,OAAL,CACnCI,IADmC,CAEjC,+CAAAC,MAAA,EAAO,8DAAP,CAFiC,EAGjC,gDAAAC,GAAA,EAAI,UAACC,MAAD,EAA2C;AAC7C;AACA,gBAAI,CAACrH,MAAL,CAAYmI,QAAZ,CAAqB,CAAC,uBAAD,CAArB;AACD,SAHD,CAHiC,CAArC;AAUA,aAAA7B,OAAA,GAA2B,KAAKQ,OAAL,CACzBI,IADyB,CAErB,+CAAAC,MAAA,EAAO,mDAAP,CAFqB,EAGrB,gDAAAG,SAAA,EAAU,UAAAvB,OAAO,EAAI;AACnB7F,iBAAO,CAACkI,IAAR,CAAa,kBAAb;AACA,iBAAO,0CAAa,IAAI,qDAAJ,EAAb,CAAP;AACD,SAHD,CAHqB,CAA3B;AApGI,O;;;yBARO7F,Y,EAAW,2G,EAAA,+H,EAAA,qI,EAAA,wG,EAAA,6G;AAAA,O;;;eAAXA,Y;AAAW,iBAAXA,YAAW;;;AAWtB,kBADC,+CAAA8F,MAAA,GACD,E,0BAAO,mCAAAC,U,CAAP,G,sBAAA,E,OAAA,E,MAAA;;AAmBA,kBADC,+CAAAD,MAAA,EAAO;AAAE7H,gBAAQ,EAAE;AAAZ,OAAP,CACD,E,0BAAc,mCAAA8H,U,CAAd,G,sBAAA,E,cAAA,E,MAAA;;AAgBA,kBADC,+CAAAD,MAAA,GACD,E,0BAAiB,mCAAAC,U,CAAjB,G,sBAAA,E,iBAAA,E,MAAA;;AAmBA,kBADC,+CAAAD,MAAA,GACD,E,0BAAuB,mCAAAC,U,CAAvB,G,sBAAA,E,uBAAA,E,MAAA;;AAkBA,kBADC,+CAAAD,MAAA,GACD,E,0BAAY,mCAAAC,U,CAAZ,G,sBAAA,E,YAAA,E,MAAA;;AAyBA,kBADC,+CAAAD,MAAA,GACD,E,0BAAS,mCAAAC,U,CAAT,G,sBAAA,E,SAAA,E,MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3HF,UAAMC,MAAM,GAAc;AAAEb,YAAI,EAAE;AAAEF,eAAK,EAAE,IAAT;AAAegB,cAAI,EAAE,IAArB;AAA2BC,eAAK,EAAE;AAACA,iBAAK,EAAE;AAAR,WAAlC;AAAiDC,eAAK,EAAE,IAAxD;AAA8DC,iBAAO,EAAE,IAAvE;AAA6EC,iBAAO,EAAE,IAAI,iDAAAC,OAAJ;AAAtF;AAAR,OAA1B;AACO,UAAMC,aAAY,GAAcP,MAAhC;;AAOA,eAASQ,QAAT,GAAqE;AAAA,YAApDC,KAAoD,uEAA5CF,aAA4C;AAAA,YAA9BzB,MAA8B;;AAC1E,gBAAQA,MAAM,CAACrB,IAAf;AACE,eAAK,qDAAL;AAA6B;AAC3B,qBAAO,MAAP,OAAO,CAAP,EAAO,EACFgD,KADE,CAAP;AAGD;;AAED,eAAK,6DAAL;AAAqC;AACnC,qBAAO,MAAP,OAAO,CAAP,kBACKA,KADL,CAAO,EACG;AACRtB,oBAAI,EAAEL,MAAM,CAACtB;AADL,eADH,CAAP;AAID;;AAED,eAAK,4DAAL;AAAoC;AAClC,qBAAO,MAAP,OAAO,CAAP,EAAO,EACFiD,KADE,CAAP;AAGD;;AAED,eAAK,oEAAL;AAA4C;AAC1C,qBAAO,MAAP,OAAO,CAAP,kBACKA,KADL,CAAO,EACG;AACRtB,oBAAI,EAAEL,MAAM,CAACtB;AADL,eADH,CAAP;AAID;;AAED,eAAK,sDAAL;AAA8B;AAC5B;AACA;AACA;AACA,qBAAO+C,aAAP;AACD;;AAED,eAAK,8DAAL;AAAsC;AACpC;AACA;AACA;AACA;AACA;AACA,qBAAOA,aAAP;AACD;;AAKD,eAAK,mEAAL;AAA2C;AACzC,qBAAO,MAAP,OAAO,CAAP,EAAO,EACFE,KADE,CAAP;AAGD;;AAED,eAAK,2EAAL;AAAmD;AACjD,qBAAO,MAAP,OAAO,CAAP,kBACKA,KADL,CAAO,EACG;AACRtB,oBAAI,EAAEL,MAAM,CAACtB;AADL,eADH,CAAP;AAID;;AAED;AAAS;AACP,qBAAOiD,KAAP;AACD;AA7DH;AA+DD;;AAEM,UAAMC,aAAY,GAAG,6CAAAC,qBAAA,EAAiC,WAAjC,CAArB;;AAEA,UAAMC,QAAO,GAAG,6CAAAC,cAAA,EACrBH,aADqB,EAErB,UAACD,KAAD;AAAA,eAAsBA,KAAK,CAACtB,IAA5B;AAAA,OAFqB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCP;;;;;UA+CahG,mB;;;;;yBAAAA,mB;AAAkB,O;;;cAAlBA;;;kBA1CT,4DAAA2H,qB,EACA,sDAAAC,e,EACA,6DAAAC,qB,EACA,oDAAAC,a,EACA,wDAAAC,iB,EACA,qDAAAC,c,EACA,qDAAAC,c,EACA,0DAAAC,mB,EACA,sDAAAC,e,EACA,0DAAAC,kB,EACA,2DAAAC,kB,EACA,0DAAAC,iB,EACA,qDAAAC,a,EACA,sDAAAC,c,EACA,qDAAAC,a,EACA,qDAAAC,a,EACA,0DAAAC,kB,EACA,6DAAAC,oB,EACA,iEAAAC,wB,EACA,sDAAAC,c,EACA,qDAAAC,e,EACA,uDAAAC,e,EACA,wDAAAC,gB,EACA,6DAAAC,oB,EACA,uDAAAC,e,EACA,0DAAAC,iB,EACA,qDAAAC,a,EACA,wDAAAC,gB,EACA,qDAAAC,a,EACA,wDAAAC,gB,EACA,wDAAAC,gB,EACA,qDAAAC,mB,EACA,iDAAAC,c,EACA,gDAAAC,U,EACA,gDAAAC,U,EACA,qDAAAC,kB,EACA,qDAAAC,e,EACA,mDAAAC,a,EACA,oDAAAC,c,EACA,kDAAAC,Y;;;;4HAGSlK,mB,EAAkB;AAAA,oBA1C3B,4DAAA2H,qBA0C2B,EAzC3B,sDAAAC,eAyC2B,EAxC3B,6DAAAC,qBAwC2B,EAvC3B,oDAAAC,aAuC2B,EAtC3B,wDAAAC,iBAsC2B,EArC3B,qDAAAC,cAqC2B,EApC3B,qDAAAC,cAoC2B,EAnC3B,0DAAAC,mBAmC2B,EAlC3B,sDAAAC,eAkC2B,EAjC3B,0DAAAC,kBAiC2B,EAhC3B,2DAAAC,kBAgC2B,EA/B3B,0DAAAC,iBA+B2B,EA9B3B,qDAAAC,aA8B2B,EA7B3B,sDAAAC,cA6B2B,EA5B3B,qDAAAC,aA4B2B,EA3B3B,qDAAAC,aA2B2B,EA1B3B,0DAAAC,kBA0B2B,EAzB3B,6DAAAC,oBAyB2B,EAxB3B,iEAAAC,wBAwB2B,EAvB3B,sDAAAC,cAuB2B,EAtB3B,qDAAAC,eAsB2B,EArB3B,uDAAAC,eAqB2B,EApB3B,wDAAAC,gBAoB2B,EAnB3B,6DAAAC,oBAmB2B,EAlB3B,uDAAAC,eAkB2B,EAjB3B,0DAAAC,iBAiB2B,EAhB3B,qDAAAC,aAgB2B,EAf3B,wDAAAC,gBAe2B,EAd3B,qDAAAC,aAc2B,EAb3B,wDAAAC,gBAa2B,EAZ3B,wDAAAC,gBAY2B,EAX3B,qDAAAC,mBAW2B,EAV3B,iDAAAC,cAU2B,EAT3B,gDAAAC,UAS2B,EAR3B,gDAAAC,UAQ2B,EAP3B,qDAAAC,kBAO2B,EAN3B,qDAAAC,eAM2B,EAL3B,mDAAAC,aAK2B,EAJ3B,oDAAAC,cAI2B,EAH3B,kDAAAC,YAG2B;AAAA,S;AAHfzFT,UAAMC,gBAAe,GAAG,8BAAxB;AACA,UAAMC,wBAAuB,GAAG,sCAAhC;AACA,UAAMC,sBAAqB,GAAG,oCAA9B;AAEA,UAAMC,aAAY,GAAG,2BAArB;AACA,UAAMC,qBAAoB,GAAG,mCAA7B;AACA,UAAMC,mBAAkB,GAAG,iCAA3B;AAEA,UAAMC,YAAW,GAAG,0BAApB;AACA,UAAMC,oBAAmB,GAAG,kCAA5B;AACA,UAAMC,kBAAiB,GAAG,gCAA1B;AAGP;;;;AAGO,UAAMC,UAAS,GAAG,wBAAlB;AACA,UAAMC,kBAAiB,GAAG,gCAA1B;AACA,UAAMC,gBAAe,GAAG,8BAAxB;AAEA,UAAMC,kBAAiB,GAAG,gCAA1B;AACA,UAAMC,0BAAyB,GAAG,wCAAlC;AACA,UAAMC,wBAAuB,GAAG,sCAAhC;AAEA,UAAMC,YAAW,GAAG,2BAApB;AACA,UAAMC,oBAAmB,GAAG,mCAA5B;AACA,UAAMC,kBAAiB,GAAG,iCAA1B;AAEA,UAAMC,iBAAgB,GAAG,+BAAzB;AACA,UAAMC,yBAAwB,GAAG,uCAAjC;AACA,UAAMC,uBAAsB,GAAG,qCAA/B;AAEA,UAAMC,kBAAiB,GAAG,gCAA1B;AACA,UAAMC,0BAAyB,GAAG,wCAAlC;AACA,UAAMC,wBAAuB,GAAG,sCAAhC;AAEA,UAAMC,qBAAoB,GAAG,mCAA7B;AACA,UAAMC,6BAA4B,GAAG,2CAArC;AACA,UAAMC,2BAA0B,GAAG,yCAAnC;AAEA,UAAMC,kBAAiB,GAAG,gCAA1B;AACA,UAAMC,0BAAyB,GAAG,wCAAlC;AACA,UAAMC,wBAAuB,GAAG,sCAAhC;AAGA,UAAMC,0BAAyB,GAAG,wCAAlC;AACA,UAAMC,oBAAmB,GAAG,kCAA5B;AAEP;;;;;;;;;UAQaC,c,GAEX,0BAAc;AAAA;;AADL,aAAA7H,IAAA,GAAO6F,gBAAP;AACO,O;;UAGLiC,qB,GAEX,+BAAmB/H,OAAnB,EAAoC;AAAA;;AAAjB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAO8F,wBAAP;AAC6B,O;;UAG3BiC,mB,GAAb;AAAA;;AACW,aAAA/H,IAAA,GAAO+F,sBAAP;AACV,O;AAED;;;;;UAGaiC,Y,GAEX,sBAAmBjI,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOgG,aAAP;AACqC,O;;UAGnCiC,mB,GAEX,6BAAmBlI,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOiG,qBAAP;AACqC,O;;UAGnCiC,iB,GAAb;AAAA;;AACW,aAAAlI,IAAA,GAAOkG,mBAAP;AACV,O;AAED;;;;;UAGaiC,W,GAEX,qBAAmBpI,OAAnB,EAAuC;AAAA;;AAApB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOmG,YAAP;AACmC,O;;UAGjCiC,kB,GAEX,4BAAmBrI,OAAnB,EAAyC;AAAA;;AAAtB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOoG,oBAAP;AACkC,O;;UAGhCiC,gB,GAAb;AAAA;;AACW,aAAArI,IAAA,GAAOqG,kBAAP;AACV,O;AAGD;;;;;;;;;;UAQaiC,S,GAEX,qBAAc;AAAA;;AADL,aAAAtI,IAAA,GAAOsG,UAAP;AACO,O;;UAGLiC,gB,GAEX,0BAAmBxI,OAAnB,EAAwC;AAAA;;AAArB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOuG,kBAAP;AACiC,O;;UAG/BiC,c,GAAb;AAAA;;AACW,aAAAxI,IAAA,GAAOwG,gBAAP;AACV,O;AAED;;;;;UAGaiC,e,GAEX,yBAAmB1I,OAAnB,EAA8C;AAAA;;AAA3B,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOyG,kBAAP;AACuC,O;;UAGrCiC,sB,GAEX,gCAAmB3I,OAAnB,EAAwC;AAAA;;AAArB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAO0G,0BAAP;AACiC,O;;UAG/BiC,oB,GAAb;AAAA;;AACW,aAAA3I,IAAA,GAAO2G,wBAAP;AACV,O;AAED;;;;;UAGaiC,U,GAEX,oBAAmB7I,OAAnB,EAAkE;AAAA;;AAA/C,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAO4G,YAAP;AAC2D,O;;UAGzDiC,iB,GAEX,2BAAmB9I,OAAnB,EAAoC;AAAA;;AAAjB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAO6G,oBAAP;AAC6B,O;;UAG3BiC,e,GAAb;AAAA;;AACW,aAAA9I,IAAA,GAAO8G,kBAAP;AACV,O;AAED;;;;;UAGaiC,e,GAEX,yBAAmBhJ,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAO+G,iBAAP;AACqC,O;;UAGnCiC,sB,GAEX,gCAAmBjJ,OAAnB,EAAoC;AAAA;;AAAjB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOgH,yBAAP;AAC6B,O;;UAG3BiC,oB,GAAb;AAAA;;AACW,aAAAjJ,IAAA,GAAOiH,uBAAP;AACV,O;AAED;;;;;UAGaiC,gB,GAEX,0BAAmBnJ,OAAnB,EAAyC;AAAA;;AAAtB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOkH,kBAAP;AACkC,O;;UAGhCiC,uB,GAEX,iCAAmBpJ,OAAnB,EAAoC;AAAA;;AAAjB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOmH,0BAAP;AAC6B,O;;UAG3BiC,qB,GAAb;AAAA;;AACW,aAAApJ,IAAA,GAAOoH,wBAAP;AACV,O;AAED;;;;;UAGaiC,gB,GAAb;AAAA;;AACW,aAAArJ,IAAA,GAAOwH,kBAAP,CADX,CAEE;AACD,O;;UAEY8B,uB,GAEX,iCAAmBvJ,OAAnB,EAAiD;AAAA;;AAA9B,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOyH,0BAAP;AAC0C,O;;UAGxC8B,qB,GAAb;AAAA;;AACW,aAAAvJ,IAAA,GAAO0H,wBAAP;AACV,O;AAED;;;;;UAGa8B,mB,GAEX,6BAAmBzJ,OAAnB,EAAiD;AAAA;;AAA9B,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOqH,qBAAP;AAC0C,O;;UAGxCoC,0B,GAEX,oCAAmB1J,OAAnB,EAAiD;AAAA;;AAA9B,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOsH,6BAAP;AAC0C,O;;UAGxCoC,wB,GAAb;AAAA;;AACW,aAAA1J,IAAA,GAAOuH,2BAAP;AACV,O;;UAKYoC,kB,GAAb;AAAA;;AACW,aAAA3J,IAAA,GAAO4H,oBAAP;AACV,O;;UAEYgC,uB,GAEX,iCAAmB7J,OAAnB,EAAmD;AAAA;;AAAhC,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAO2H,0BAAP;AAC4C,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxOhD,UAAM7E,cAAY,GAAoB;AACzC+G,YAAI,EAAE,EADmC;AAEzCC,gBAAQ,EAAE,KAF+B;AAGzC;AACAC,aAAK,EAAE,EAJkC;AAKzCC,oBAAY,EAAE,KAL2B;AAMzCC,oBAAY,EAAE;AAN2B,OAAtC;;AAcA,eAASlH,SAAT,GAAqE;AAAA,YAApDC,KAAoD,uEAA5CF,cAA4C;AAAA,YAA9BzB,MAA8B;AAC1EnH,eAAO,CAACC,GAAR,CAAY6I,KAAZ,EAAmB3B,MAAnB;;AAEA,gBAAQA,MAAM,CAACrB,IAAf;AAEE;;;AAGA,eAAK,iEAAL;AAAoC;AAClC,qBAAO,MAAP,OAAO,CAAP,kBACKgD,KADL,CAAO,EACG;AACR6G,oBAAI,EAAE,EADE;AAERC,wBAAQ,EAAE;AAFF,eADH,CAAP;AAKD;;AAED,eAAK,yEAAL;AAA4C;AAC1C,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR6G,oBAAI,EAAExI,MAAM,CAACtB,OADL;AAER+J,wBAAQ,EAAE;AAFF,eADH,CAAP;AAKD;;AAED;;;;AAGA,eAAK,8DAAL;AAAiC;AAC/B,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED,eAAK,sEAAL;AAAyC;AACvC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR6G,oBAAI,qBACC7G,KAAK,CAAC6G,IAAN,CAAWK,MAAX,CAAmB,UAACL,IAAD;AAAA,yBAAUA,IAAI,CAACnQ,EAAL,KAAY2H,MAAM,CAACtB,OAAP,CAAerG,EAArC;AAAA,iBAAnB,CADD,CADI;AAIRoQ,wBAAQ,EAAE;AAJF,eADH,CAAP;AAOD;;AAED,eAAK,oEAAL;AAAuC;AACrC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED;;;;AAGA,eAAK,6DAAL;AAAgC;AAC9B,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED,eAAK,qEAAL;AAAwC;AACtC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR6G,oBAAI,qBACC7G,KAAK,CAAC6G,IAAN,CAAWK,MAAX,CAAmB,UAACL,IAAD;AAAA,yBAAUA,IAAI,CAACnQ,EAAL,KAAY2H,MAAM,CAACtB,OAAP,CAAeoK,OAArC;AAAA,iBAAnB,CADD,CADI;AAIRL,wBAAQ,EAAE;AAJF,eADH,CAAP;AAOD;;AAED,eAAK,mEAAL;AAAsC;AACpC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED;;;;;;AAKA;;;;AAGA,eAAK,2DAAL;AAA8B;AAC5B,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACRgH,4BAAY,EAAE;AADN,eADH,CAAP;AAID;;AAED,eAAK,mEAAL;AAAsC;AACpC,qBAAO,MAAP,OAAO,CAAP,kBACKhH,KADL,CAAO,EACG;AACR+G,qBAAK,EAAE1I,MAAM,CAACtB,OADN;AAERiK,4BAAY,EAAE;AAFN,eADH,CAAP;AAKD;;AAED,eAAK,iEAAL;AAAoC;AAClC,qBAAO,MAAP,OAAO,CAAP,kBACKhH,KADL,CAAO,EACG;AACRgH,4BAAY,EAAE;AADN,eADH,CAAP;AAID;;AAED;;;;AAIA,eAAK,mEAAL;AAAsC;AACpC,qBAAO,MAAP,OAAO,CAAP,kBACKhH,KADL,CAAO,EACG;AACRgH,4BAAY,EAAE;AADN,eADH,CAAP;AAID;;AAED,eAAK,2EAAL;AAA8C;AAC5C,qBAAO,MAAP,OAAO,CAAP,kBACKhH,KADL,CAAO,EACG;AACR+G,qBAAK,EAAE1I,MAAM,CAACtB,OADN;AAERiK,4BAAY,EAAE;AAFN,eADH,CAAP;AAKD;;AAED,eAAK,yEAAL;AAA4C;AAC1C,qBAAO,MAAP,OAAO,CAAP,kBACKhH,KADL,CAAO,EACG;AACRgH,4BAAY,EAAE;AADN,eADH,CAAP;AAID;;AAED;;;;AAGA,eAAK,6DAAL;AAAgC;AAC9B,qBAAO,MAAP,OAAO,CAAP,kBACKhH,KADL,CAAO,EACG;AACRgH,4BAAY,EAAE;AADN,eADH,CAAP;AAID;;AAED,eAAK,qEAAL;AAAwC;AACtC,qBAAO,MAAP,OAAO,CAAP,kBACKhH,KADL,CAAO,EACG;AACRgH,4BAAY,EAAE,KADN;AAER;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAD,qBAAK,EAAE1I,MAAM,CAACtB;AAjBN,eADH,CAAP;AAoBD;;AAED;;;;AAGA,eAAK,kEAAL;AAAqC;AACnC,qBAAO,MAAP,OAAO,CAAP,kBACKiD,KADL,CAAO,EACG;AACRgH,4BAAY,EAAE;AADN,eADH,CAAP;AAID;;AAED,eAAK,0EAAL;AAA6C;AAC3C,qBAAO,MAAP,OAAO,CAAP,kBACKhH,KADL,CAAO,EACG;AACRgH,4BAAY,EAAE,KADN;AAERD,qBAAK,EAAE1I,MAAM,CAACtB;AAFN,eADH,CAAP;AAKD;;AACD;;;;AAGA,eAAK,mEAAL;AAAsC;AACpC,qBAAO,MAAP,OAAO,CAAP,kBACKiD,KADL,CAAO,EACG;AACRgH,4BAAY,EAAE;AADN,eADH,CAAP;AAID;;AAED,eAAK,2EAAL;AAA8C;AAC5C,qBAAO,MAAP,OAAO,CAAP,kBACKhH,KADL,CAAO,EACG;AACRgH,4BAAY,EAAE,KADN;AAERD,qBAAK,EAAE1I,MAAM,CAACtB;AAFN,eADH,CAAP;AAKD;;AACD;;;;AAGA,eAAK,2EAAL;AAA8C;AAC5C,qBAAO,MAAP,OAAO,CAAP,kBACKiD,KADL,CAAO,EACG;AACRiH,4BAAY,EAAE5I,MAAM,CAACtB,OAAP,CAAeqK;AADrB,eADH,CAAP;AAID;;AACD;;;;AAGA,eAAK,8EAAL;AAAiD;AAC/C,qBAAO,MAAP,OAAO,CAAP,kBACKpH,KADL,CAAO,EACG;AACRiH,4BAAY,EAAE5I,MAAM,CAACtB,OAAP,CAAeqK;AADrB,eADH,CAAP;AAID;;AAGD;;;;AAGA,eAAK,2EAAL;AAA8C;AAC5C,qBAAO,MAAP,OAAO,CAAP,kBACKpH,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAEzI,MAAM,CAACtB,OAAP,CAAe+J;AADjB,eADH,CAAP;AAID;;AAED,eAAK,qEAAL;AAAwC;AACtC,qBAAOhH,cAAP;AACD;;AAED;AAAS;AACP,qBAAOE,KAAP;AACD;AA1OH;AA4OD;;AAEM,UAAMqH,mBAAkB,GAAG,6CAAAnH,qBAAA,EAAuC,iBAAvC,CAA3B;;AAEA,UAAMoH,UAAS,GAAG,6CAAAlH,cAAA,EACvBiH,mBADuB,EAEvB,UAACrH,KAAD;AAAA,eAA4BA,KAAK,CAAC6G,IAAlC;AAAA,OAFuB,CAAlB;;AAKA,UAAMU,YAAW,GAAG,SAAdA,YAAc,CAACC,OAAD,EAAU9Q,EAAV;AAAA,eAAiB,6CAAA0J,cAAA,EAAeiH,mBAAf,EAAmC,UAACI,QAAD,EAAc;AAC3F,cAAIA,QAAJ,EAAc;AACZ,mBAAOA,QAAQ,CAACD,OAAD,CAAR,CAAkBE,IAAlB,CAAuB,UAAAC,IAAI,EAAI;AACpC,qBAAOA,IAAI,CAACjR,EAAL,KAAYA,EAAnB;AACD,aAFM,CAAP;AAGD,WAJD,MAIO;AACL,mBAAO,EAAP;AACD;AACF,SAR2C,CAAjB;AAAA,OAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCzQMuD,kB;;;;;yBAAAA,kB;AAAiB,O;;;cAAjBA,kB;AAAiB,kC;AAAA,gB;AAAA,e;AAAA;AAAA;ACJ9B;;AACE;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaA;;;UAMaH,c;AAeX,gCACE8N,iBADF,EAEEC,KAFF,EAGSC,SAHT,EAG6B;AAAA;;AAApB,eAAAA,SAAA,GAAAA,SAAA;AAhBT,eAAAC,GAAA,GAAM,KAAN;AAUO,eAAAC,MAAA,GAA0C,EAA1C;AAQL,eAAKC,WAAL,GAAmBJ,KAAK,CAACK,UAAN,CAAiB,oBAAjB,CAAnB;;AACA,eAAKC,oBAAL,GAA4B;AAAA,mBAAMP,iBAAiB,CAACQ,aAAlB,EAAN;AAAA,WAA5B;;AACA,eAAKH,WAAL,CAAiBI,WAAjB,CAA6B,KAAKF,oBAAlC;AACD;;;;iBAED,uBAAW;AACT,iBAAKF,WAAL,CAAiBK,cAAjB,CAAgC,KAAKH,oBAArC;AACD;;;iBACD,2BAAkB;AAChB;AACM,+CAAC,CAAC,uBAAD,CAAD,CAA4BI,EAA5B,CAA+B,OAA/B,EAAwC;AACtC,iDAAC,CAAC,aAAD,CAAD,CAAkBC,MAAlB,CAAyB,GAAzB;AACP,aAFK,EAFU,CAKhB;AACD;;;;;;;yBAlCU1O,c,EAAa,6H,EAAA,8H,EAAA,qI;AAAA,O;;;cAAbA,c;AAAa,wC;AAAA,iB;AAAA,gB;AAAA,q2C;AAAA;AAAA;;;ACrB1B;;AAII;;AAII;;AACI;;AAEI;;AAGI;;AAEA;;AACJ;;AAGA;;AAEI;;AAEA;;AACJ;;AACJ;;AACJ;;AAKA;;AAAwB;AAAA;;AAAA;;AAAA,qBAAS,YAAT;AAAsB,aAAtB;;AACpB;;AAAU;;AAAI;;AAClB;;AAaA;;AAIA;;AAOJ;;AAIA;;AAKI;;AACwE;AAAA,yCAAwB,IAAxB;AAA4B,aAA5B,EAA6B,OAA7B,EAA6B;AAAA,yCAA0B,KAA1B;AAA+B,aAA5D;;AAGpE;;AAEJ;;AAOA;;AACI;;AACI;;AAEI;;AAA0D;;AAAQ;;AAClE;;AACI;;AAA+B;AAAA,0CAAwB,KAAxB,GAAgC,KAAhC,GAAwC,KAAxC;AAA6C,aAA7C;;AAAgD;;AAAG;;AACtF;;AACA;;AACI;;AAA+B;AAAA;AAAA;;AAAoB;;AAAY;;AACnE;;AAIA;;AACA;;AAA0D;;AAAM;;AAChE;;AACI;;AAA2B;AAAA;AAAA,eAAoB,QAApB,EAAoB;AAAA,4CAA0B,KAA1B;AAA+B,aAAnD;;AAAyE;;AAAG;;AAC3G;;AACA;;AACI;;AAA2B;AAAA;AAAA,eAAmB,QAAnB,EAAmB;AAAA,6CAA2B,KAA3B;AAAgC,aAAnD;;AAAwE;;AAC1F;;AACb;;AACA;;AACI;;AAA2B;AAAA;AAAA,eAAkB,QAAlB,EAAkB;AAAA,8CAA4B,KAA5B;AAAiC,aAAnD;;AAAuE;;AAAI;;AAC1G;;AACA;;AACI;;AAA2B;AAAA;AAAA,eAAkB,QAAlB,EAAkB;AAAA,yDAAmC,KAAnC;AAAwC,aAA1D;;AAA4D;;AAAI;;AAC/F;;AACJ;;AACJ;;AACJ;;AAKA;;AAEQ;;AAEI;;AACI;;AACJ;;AAEJ;;AAER;;AAIJ;;AACJ;;;;AAnI4B,qFAAW,SAAX,EAAW,6IAAX;;AA8DiC;;AAAA;;AACrD;;AAI2C;;AAAA,wHAA8C,QAA9C,EAA8C,uBAA9C,EAA8C,cAA9C,EAA8C,uBAA9C,EAA8C,kBAA9C,EAA8C,UAA9C;;AAsBI;;AAAA;;AAQJ;;AAAA;;AAGA;;AAAA;;AAIA;;AAAA;;AAGA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3GnD;;AACE;;AAAgC;;AAAc;;AAChD;;;;AAFsE;;;;;;AA8D9C;;AACI;;AACI;;AAEJ;;AACA;;AACI;;AAAI;;AAAsB;;AAC1B;;AAAwB;;AAAkB;;AAE9C;;AACJ;;;;;;;;AARa;;AAAA;;AAID;;AAAA;;AACoB;;AAAA;;;;;;AAaxD;;AACE;;AAAU;;AAAc;;AAC1B;;;;;;;;AAFQ;;;;;;;;UChEKC,mB;AAkBX,qCACUjD,IADV,EAEUC,KAFV,EAGU0R,EAHV,EAIUC,MAJV,EAI4B;AAAA;;AAAA;;AAHlB,eAAA5R,IAAA,GAAAA,IAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAA0R,EAAA,GAAAA,EAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AArBH,eAAAV,MAAA,GAA0C,EAA1C;AAEP,eAAAW,SAAA,GAAY,KAAZ;AACA,eAAAC,cAAA,GAAiB,KAAjB;AACO,eAAAC,QAAA,GAAiB,IAAI,iDAAAC,IAAJ,EAAjB;AAKP,eAAAC,WAAA,GAAsB,IAAtB;AACA,eAAAC,KAAA,GAAQ,UAAR;AAEA,eAAAC,IAAA,GAAe,mBAAf;AAEA,eAAAC,SAAA,GAAY,EAAZ;AASE,eAAKH,WAAL,GAAmB,uDAAAnP,WAAA,WAAnB,CAF0B,CAI1B;;AACA,eAAKxC,WAAL,GAAmB,KAAKN,IAAL,CAAUO,SAAV,CAAoBC,SAApB,CAA+B,UAAAC,QAAQ;AAAA,mBAAI,MAAI,CAACoR,SAAL,GAAiBpR,QAArB;AAAA,WAAvC,CAAnB;AAEA,eAAKmR,MAAL,CAAYS,MAAZ,CAAmB,UAAApS,KAAK;AAAA,mBAAIA,KAAK,CAACqS,SAAV;AAAA,WAAxB,EAA6C9R,SAA7C,CAAuD,UAAA+R,QAAQ,EAAI;AACjE,kBAAI,CAACR,QAAL,GAAgBQ,QAAQ,CAAC3K,IAAzB,CADiE,CAEjE;AACD,WAHD;AAID;;;;iBAED,kBAAM;AACJ;AACA,iBAAK3H,KAAL,CAAWS,QAAX,CAAoB,IAAI,0EAAJ,EAApB;AAED;;;;;;;yBAvCUuC,mB,EAAkB,uI,EAAA,+G,EAAA,mI,EAAA,+G;AAAA,O;;;cAAlBA,mB;AAAkB,mC;AAAA,iB;AAAA,e;AAAA,+wB;AAAA;AAAA;ADlB/B;;AA6CA;;AAOA;;AACI;;AACI;;AAII;;AACI;;AACI;;AAEI;;AAWJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAIA;;AAGA;;AAGI;;AACI;;AAAU;;AAAW;;AAAY;;AAAQ;;AAG7C;;AAAsB;AAAA,qBAAS,IAAAuP,MAAA,EAAT;AAAiB,aAAjB;;AAClB;;AAAU;;AAAW;;AAAY;;AAAS;;AAClD;;;;;;AA9FoD;;AA6C5C;;AAAA;;AAe+B;;AAAA;;AAEmB;;AAAA;;AAoBW;;AAAA;;AAM3C;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErFlB;;;;;;AAAK;;;;;;AADT;;AACI;;AACJ;;;;;;AADkE;;AAAA;;;;;;AAG9D;;;;;;AAAK;;;;;;AADT;;AACI;;AACJ;;;;;;AADwF;;AAAA;;;;;;AAOpF;;AAA+D;;AAAe;;AAA2C;;;;;;;;AAAtH;;AAA4D;;AAAA;;;;;;AAC/D;;AAAgC;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAqB5B;;AAAgF;;AAAiB;;;;;;AAA3F;;AAA0E;;AAAA;;;;;;;;;;AAJpF;;AACI;;AAAU;;AAAmB;;AAC7B;;AAAM;;AAAmB;;AACzB;;AACA;;AACJ;;;;;;AAL+B;;AACjB;;AAAA;;AACJ;;AAAA;;AAEuD;;AAAA;;;;;;AAO7D;;AAAgF;;AAAiB;;;;;;AAA3F;;AAA0E;;AAAA;;;;;;AAJpF;;AACI;;AAAU;;AAAmB;;AAC7B;;AAAM;;AAAmB;;AACzB;;AACA;;AACJ;;;;;;AAL+B;;AACjB;;AAAA;;AACJ;;AAAA;;AAEuD;;AAAA;;;;;;AAM7D;;AAAgF;;AAAiB;;;;;;AAA3F;;AAA0E;;AAAA;;;;;;AAJpF;;AACI;;AAAU;;AAAmB;;AAC7B;;AAAM;;AAAkB;;AACxB;;AACA;;AACJ;;;;;;AAL+B;;AACjB;;AAAA;;AACJ;;AAAA;;AAEuD;;AAAA;;;;;;AAO7D;;AAAgF;;AAAiB;;;;;;AAA3F;;AAA0E;;AAAA;;;;;;AAJpF;;AACI;;AAAU;;AAAmB;;AAC7B;;AAAM;;AAAmB;;AACzB;;AACA;;AACA;;AAA0B;;AAAmB;;AACjD;;;;;;AALc;;AAAA;;AACJ;;AAAA;;AAEuD;;AAAA;;;;;;;;;;AAKzD;;AACgC;;AAAmB;;;;;;;;AADhD;;AAC6B;;AAAA;;;;;;AAFpC;;AACI;;AAEJ;;;;;;AAF+D;;AAAA;;;;;;;;AAI3D;;AAA8E;AAAA;;AAAA;;AAAA;AAAA;;AAE1E;;AAAM;;AAAoB;;AAC1B;;AACA;;AAA0B;;AAAmB;;AACjD;;;;;;;;AAJI;;AACM;;AAAA;;;;;;;;;;AAKN;;AACI;;AAAmG;;AAAc;;AACrH;;;;;;;;;;AADO;;AAAA;;AAAgG;;AAAA;;;;;;AAF3G;;AACI;;AAGJ;;;;;;AAHqC;;AAAA;;;;;;AARzC;;AACI;;AAMA;;AAKJ;;;;;;AAX6C;;AAAA;;AAMH;;AAAA;;;;;;AAZ9C;;AACI;;AAIA;;AAcJ;;;;;;AAlByC;;AAAA;;AAIA;;AAAA;;;;;;AAgBzC;;AACI;;AAAM;;AAAmB;;AAC7B;;;;;;AADU;;AAAA;;;;;;AAlDd;;AACI;;AAOA;;AAMA;;AAOA;;AAOA;;AAqBA;;AAGJ;;;;;;;;AApD4D;;AACa;;AAAA;;AAOX;;AAAA;;AAMgB;;AAAA;;AAOtB;;AAAA;;AAOpB;;AAAA;;AAqBG;;AAAA;;;;;;;;UC/D9BpP,oB;AAaX,sCACE0N,iBADF,EAEEC,KAFF,EAGSC,SAHT,EAIUyB,OAJV,EAKUzS,IALV,EAMUC,KANV,EAOU2R,MAPV,EAO4B;AAAA;;AAAA;;AAJnB,eAAAZ,SAAA,GAAAA,SAAA;AACC,eAAAyB,OAAA,GAAAA,OAAA;AACA,eAAAzS,IAAA,GAAAA,IAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAA2R,MAAA,GAAAA,MAAA;AAnBH,eAAAc,QAAA,GAAW,OAAX;AACA,eAAAxB,MAAA,GAA0C,EAA1C;AAGP,eAAAW,SAAA,GAAY,KAAZ;AAEO,eAAAE,QAAA,GAAiB,IAAI,iDAAAC,IAAJ,EAAjB;AAIP,eAAAW,MAAA,GAAkB,KAAlB;AAWE,eAAKxB,WAAL,GAAmBJ,KAAK,CAACK,UAAN,CAAiB,oBAAjB,CAAnB;;AACA,eAAKC,oBAAL,GAA4B;AAAA,mBAAMP,iBAAiB,CAACQ,aAAlB,EAAN;AAAA,WAA5B;;AACA,eAAKH,WAAL,CAAiBI,WAAjB,CAA6B,KAAKF,oBAAlC,EAJ0B,CAM1B;;AACA,eAAK/Q,WAAL,GAAmB,KAAKN,IAAL,CAAUO,SAAV,CAAoBC,SAApB,CAA+B,UAAAC,QAAQ;AAAA,mBAAI,MAAI,CAACoR,SAAL,GAAiBpR,QAArB;AAAA,WAAvC,CAAnB;AACA,eAAKiS,QAAL,GAAgBD,OAAO,CAACG,UAAR,CAAmB,MAAnB,CAAhB;AACD;;;;iBAED,oBAAW;AAAA;;AACT,iBAAKX,WAAL,GAAmB,uDAAAnP,WAAA,WAAnB;AACA,iBAAK8O,MAAL,CAAYS,MAAZ,CAAmB,UAAApS,KAAK;AAAA,qBAAIA,KAAK,CAACqS,SAAV;AAAA,aAAxB,EAA6C9R,SAA7C,CAAuD,UAAA+R,QAAQ,EAAI;AACjE,oBAAI,CAACR,QAAL,GAAgBQ,QAAQ,CAAC3K,IAAzB;AACD,aAFD;AAGD;;;iBAGD,sBAAa;AACX,iBAAK+K,MAAL,GAAc,CAAC,KAAKA,MAApB;AACD;;;iBAED,yBAAgB;AACd,iBAAKA,MAAL,GAAc,IAAd;AACD;;;iBAED,uBAAW;AACT,iBAAKxB,WAAL,CAAiBK,cAAjB,CAAgC,KAAKH,oBAArC;AACD;;;iBAED,mBAAUhN,IAAV,EAAwB;AACtB,mBAAO,KAAKoO,OAAL,CAAaI,SAAb,CAAuBxO,IAAvB,CAAP;AACD;;;iBAED,kBAAM;AACJ,iBAAKpE,KAAL,CAAWS,QAAX,CAAoB,IAAI,0EAAJ,EAApB;AACD;;;;;;;yBAzDU0C,oB,EAAmB,6H,EAAA,+H,EAAA,qI,EAAA,6I,EAAA,uI,EAAA,gH,EAAA,gH;AAAA,O;;;cAAnBA,oB;AAAmB,oC;AAAA,iB;AAAA,e;AAAA,m6D;AAAA;AAAA;ADhBhC;;AAEI;;AAGA;;AAOA;;AACI;;AACA;;AACJ;;AACA;;AAGI;;AACI;;AAAU;;AAAW;;AAAY;;AAAQ;;AAG7C;;AAAsB;AAAA,qBAAS,IAAAoP,MAAA,EAAT;AAAiB,aAAjB;;AAClB;;AAAU;;AAAW;;AAAY;;AAAS;;AAClD;;AACJ;;AAEA;;AAEI;;AAsDJ;;;;AAlF8B;;AAAA;;AAGA;;AAAA;;AAQuB;;AAAA;;AAChC;;AAAA;;AAKS;;AAAA;;AAWkF;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEjCnGM,K;AAgBX,yBAAc;AAAA;;AACZ,eAAKC,SAAL,GAAiB,EAAjB;AACA,eAAKC,OAAL,GAAe,EAAf;AACA,eAAKC,IAAL,GAAY,EAAZ;AACA,eAAKC,aAAL,GAAqB,CAArB;AACA,eAAKC,OAAL,GAAe,CAAf;AACA,eAAKC,QAAL,GAAgB,IAAIC,SAAJ,CAAa,EAAb,EAAiB,EAAjB,CAAhB;AACA,eAAKC,OAAL,GAAe,CAAC,IAAIC,QAAJ,CAAY,EAAZ,EAAgB,EAAhB,CAAD,CAAf;AACA,eAAKC,KAAL,GAAa,KAAb;AACD;;;;iBAED,4BAAuB;AACrB,mBAAO,IAAIV,KAAJ,EAAP;AACD;;;;;;UAIUS,Q,GAEX,kBACSrB,KADT,EAESuB,MAFT,EAGS7T,EAHT,EAISyQ,OAJT,EAKSqD,UALT,EAMSC,SANT,EAM2B;AAAA;;AALlB,aAAAzB,KAAA,GAAAA,KAAA;AACA,aAAAuB,MAAA,GAAAA,MAAA;AACA,aAAA7T,EAAA,GAAAA,EAAA;AACA,aAAAyQ,OAAA,GAAAA,OAAA;AACA,aAAAqD,UAAA,GAAAA,UAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACJ,O;;UAIMC,W,GAEX,qBACS7D,IADT,EACqB;AAAA;;AAAZ,aAAAA,IAAA,GAAAA,IAAA;AACJ,O;;UAIMsD,S,GAEX,mBACSQ,aADT,EAEST,QAFT,EAGSxT,EAHT,EAGoB;AAAA;;AAFX,aAAAiU,aAAA,GAAAA,aAAA;AACA,aAAAT,QAAA,GAAAA,QAAA;AACA,aAAAxT,EAAA,GAAAA,EAAA;AACL,O;;UAIOkU,W,GAEX,qBACSlU,EADT,EAES+S,MAFT,EAGSc,MAHT,EAGuB;AAAA;;AAFd,aAAA7T,EAAA,GAAAA,EAAA;AACA,aAAA+S,MAAA,GAAAA,MAAA;AACA,aAAAc,MAAA,GAAAA,MAAA;AACL,O;;UAIOM,S,GAEX,mBACSnU,EADT,EAESyQ,OAFT,EAGS2D,IAHT,EAGqB;AAAA;;AAFZ,aAAApU,EAAA,GAAAA,EAAA;AACA,aAAAyQ,OAAA,GAAAA,OAAA;AACA,aAAA2D,IAAA,GAAAA,IAAA;AACL,O;;UAIOC,S,GAQX,qBAAc;AAAA;;AACZ,aAAKrU,EAAL,GAAU,IAAV;AACA,aAAK8I,IAAL,GAAY,EAAZ;AACA,aAAKgL,UAAL,GAAkB,EAAlB;AACA,aAAKQ,UAAL,GAAkB,EAAlB;AACA,aAAKC,SAAL,GAAiB,CAAC,IAAIC,SAAJ,EAAD,CAAjB;AACD,O;;UAIUA,S,GASX,qBAAc;AAAA;;AACZ,aAAKxU,EAAL,GAAU,IAAV;AACA,aAAKyU,YAAL,GAAoB,IAApB;AACA,aAAKhE,OAAL,GAAe,IAAf;AACA,aAAKqD,UAAL,GAAkB,IAAlB;AACA,aAAKQ,UAAL,GAAkB,IAAlB;AACA,aAAKnE,IAAL,GAAY,IAAI+C,KAAJ,EAAZ;AACD,O;;UAIUwB,U,GAKX,oBAAchE,OAAd,EAAuBD,OAAvB,EAAgCkE,KAAhC,EAAqC;AAAA;;AACnC,aAAKjE,OAAL,GAAgBA,OAAhB;AACA,aAAKD,OAAL,GAAgBA,OAAhB;AACA,aAAKkE,KAAL,GAAgBA,KAAhB;AACD,O;;UAGUC,O,GAUX,mBAAc;AAAA;;AACZ,aAAK9L,IAAL,GAAY,EAAZ;AACD,O;;UAGU+L,Y,GAWX,wBAAc;AAAA;;AACZ,aAAK1E,IAAL,GAAY,EAAZ;AACA,aAAKqD,QAAL,GAAgB,IAAIC,SAAJ,CAAa,EAAb,EAAiB,EAAjB,CAAhB;AACD,O;;UAKUqB,oB,GAIX,gCAAc;AAAA;;AACZ,aAAKC,YAAL,GAAoB,IAAIC,+BAAJ,EAApB;AACA,aAAK3E,KAAL,GAAa,EAAb;AACD,O;;UAEU2E,+B,GAMX,2CAAc;AAAA;;AACZ,aAAKC,EAAL,GAAU,CAAV;AACA,aAAKC,MAAL,GAAc,CAAd;AACA,aAAKC,QAAL,GAAgB,CAAhB;AACA,aAAKC,SAAL,GAAiB,CAAjB;AACD,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzLI,UAAMC,WAAU,GAAG,mBAAnB;AACA,UAAMC,mBAAkB,GAAG,2BAA3B;AACA,UAAMC,iBAAgB,GAAG,yBAAzB;AAEA,UAAMC,YAAW,GAAG,oBAApB;AACA,UAAMC,oBAAmB,GAAG,4BAA5B;AACA,UAAMC,kBAAiB,GAAG,0BAA1B;AAEA,UAAMC,eAAc,GAAG,uBAAvB;AACA,UAAMC,uBAAsB,GAAG,+BAA/B;AACA,UAAMC,qBAAoB,GAAG,6BAA7B;AAEA,UAAMC,YAAW,GAAG,oBAApB;AACA,UAAMC,oBAAmB,GAAG,4BAA5B;AACA,UAAMC,kBAAiB,GAAG,0BAA1B;AAEA,UAAMC,aAAY,GAAG,qBAArB;AACA,UAAMC,qBAAoB,GAAG,6BAA7B;AACA,UAAMC,mBAAkB,GAAG,2BAA3B;AAEA,UAAMC,mBAAkB,GAAG,2BAA3B;AACA,UAAMC,sBAAqB,GAAG,8BAA9B;AACA,UAAMC,yBAAwB,GAAG,iCAAjC;AAEA,UAAMC,aAAY,GAAG,qBAArB;AACA,UAAMC,qBAAoB,GAAG,6BAA7B;AACA,UAAMC,mBAAkB,GAAG,2BAA3B;AAEA,UAAMC,YAAW,GAAG,oBAApB;AACA,UAAMC,oBAAmB,GAAG,4BAA5B;AACA,UAAMC,kBAAiB,GAAG,0BAA1B;AAEA,UAAMC,gBAAe,GAAG,wBAAxB;AACA,UAAMC,wBAAuB,GAAG,gCAAhC;AACA,UAAMC,sBAAqB,GAAG,8BAA9B;AAEA,UAAMC,oBAAmB,GAAG,4BAA5B;AACA,UAAMC,4BAA2B,GAAG,oCAApC;AACA,UAAMC,0BAAyB,GAAG,kCAAlC;AAEA,UAAMC,uBAAsB,GAAG,+BAA/B;AACA,UAAMC,+BAA8B,GAAG,uCAAvC;AACA,UAAMC,6BAA4B,GAAG,qCAArC;AAEA,UAAMC,mBAAkB,GAAG,2BAA3B;AACA,UAAMC,2BAA0B,GAAG,mCAAnC;AACA,UAAMC,yBAAwB,GAAG,iCAAjC;AAEA,UAAMC,WAAU,GAAG,mBAAnB;AACA,UAAMC,mBAAkB,GAAG,2BAA3B;AACA,UAAMC,iBAAgB,GAAG,yBAAzB;AAEA,UAAMC,kBAAiB,GAAG,0BAA1B,C,CAAsD;;AAG7D;;UACaC,U,GAEX,oBAAmBxR,OAAnB,EAAqE;AAAA;;AAAlD,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOkP,YAAP;AAC8D,O;;UAG5DsC,iB,GAEX,2BAAmBzR,OAAnB,EAAiC;AAAA;;AAAd,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOmP,oBAAP;AAC0B,O;;UAGxBsC,e,GAAb;AAAA;;AACW,aAAAzR,IAAA,GAAOoP,kBAAP;AACV,O;AAGD;;;UACasC,a,GAEX,uBAAmB3R,OAAnB,EAAqE;AAAA;;AAAlD,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOqP,eAAP;AAC8D,O;;UAG5DsC,oB,GAEX,8BAAmB5R,OAAnB,EAAiC;AAAA;;AAAd,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOsP,uBAAP;AAC0B,O;;UAGxBsC,kB,GAAb;AAAA;;AACW,aAAA5R,IAAA,GAAOuP,qBAAP;AACV,O;AAGD;;;;;;UAIasC,Q,GAEX,kBAAmB9R,OAAnB,EAAoC;AAAA;;AAAjB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAO+O,WAAP;AAC6B,O;;UAG3B+C,e,GAEX,yBAAmB/R,OAAnB,EAAkC;AAAA;;AAAf,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOgP,mBAAP;AAC2B,O;;UAGzB+C,a,GAAb;AAAA;;AACW,aAAA/R,IAAA,GAAOiP,iBAAP;AACV,O;AAGD;;;;;;UAIa+C,W,GAEX,qBAAmBjS,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOwP,YAAP;AACqC,O;;UAGnCyC,kB,GAEX,4BAAmBlS,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOyP,oBAAP;AACqC,O;;UAGnCyC,gB,GAAb;AAAA;;AACW,aAAAlS,IAAA,GAAO0P,kBAAP;AACV,O;AAGD;;;UACayC,Y,GAEX,sBAAmBpS,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAO2P,aAAP;AACqC,O;;UAGnCyC,mB,GAEX,6BAAmBrS,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAO4P,qBAAP;AACqC,O;;UAGnCyC,iB,GAAb;AAAA;;AACW,aAAArS,IAAA,GAAO6P,mBAAP;AACV,O;AAGD;;;;;;UAIayC,iB,GAEX,2BAAmBvS,OAAnB,EAAmD;AAAA;;AAAhC,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAO8P,mBAAP;AAC4C,O;;UAE1CyC,mB,GAEX,6BAAmBxS,OAAnB,EAAyD;AAAA;;AAAtC,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAO+P,sBAAP;AACkD,O;;UAEhDyC,sB,GAEX,gCAAmBzS,OAAnB,EAA4D;AAAA;;AAAzC,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOgQ,yBAAP;AACqD,O;AAIhE;;;;;;UAIayC,Y,GAEX,sBAAmB1S,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOiQ,aAAP;AACqC,O;;UAGnCyC,mB,GAEX,6BAAmB3S,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOkQ,qBAAP;AACqC,O;;UAGnCyC,iB,GAAb;AAAA;;AACW,aAAA3S,IAAA,GAAOmQ,mBAAP;AACV,O;AAGD;;;;;;AAKA;;;;;UAGayC,W,GAAb;AAAA;;AACW,aAAA5S,IAAA,GAAOoQ,YAAP;AACV,O;;UAEYyC,kB,GAEX,4BAAmB9S,OAAnB,EAAsC;AAAA;;AAAnB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOqQ,oBAAP;AAC+B,O;;UAG7ByC,gB,GAAb;AAAA;;AACW,aAAA9S,IAAA,GAAOsQ,kBAAP;AACV,O;AAED;;;;;UAGayC,c,GAEX,wBAAmBhT,OAAnB,EAAyC;AAAA;;AAAtB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOuQ,gBAAP;AACkC,O;;UAGhCyC,qB,GAEX,+BAAmBjT,OAAnB,EAAsC;AAAA;;AAAnB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOwQ,wBAAP;AAC+B,O;;UAG7ByC,mB,GAAb;AAAA;;AACW,aAAAjT,IAAA,GAAOyQ,sBAAP;AACV,O;AAED;;;;;UAGayC,kB,GAEX,4BAAmBnT,OAAnB,EAAwD;AAAA;;AAArC,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAO0Q,oBAAP;AACiD,O;;UAG/CyC,yB,GAEX,mCAAmBpT,OAAnB,EAAsC;AAAA;;AAAnB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAO2Q,4BAAP;AAC+B,O;;UAG7ByC,uB,GAAb;AAAA;;AACW,aAAApT,IAAA,GAAO4Q,0BAAP;AACV,O;AAED;;;;;UAGayC,qB,GAEX,+BAAmBtT,OAAnB,EAAwD;AAAA;;AAArC,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAO6Q,uBAAP;AACiD,O;;UAG/CyC,4B,GAEX,sCAAmBvT,OAAnB,EAAsC;AAAA;;AAAnB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAO8Q,+BAAP;AAC+B,O;;UAG7ByC,0B,GAAb;AAAA;;AACW,aAAAvT,IAAA,GAAO+Q,6BAAP;AACV,O;AAED;;;;;UAGayC,iB,GAEX,2BAAmBzT,OAAnB,EAAwD;AAAA;;AAArC,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOgR,mBAAP;AACiD,O;;UAG/CyC,wB,GAEX,kCAAmB1T,OAAnB,EAAsC;AAAA;;AAAnB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOiR,2BAAP;AAC+B,O;;UAG7ByC,sB,GAAb;AAAA;;AACW,aAAA1T,IAAA,GAAOkR,yBAAP;AACV,O;AAED;;;;;UAGayC,U,GAEX,oBAAmB5T,OAAnB,EAAoC;AAAA;;AAAjB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOmR,WAAP;AAC6B,O;;UAG3ByC,iB,GAEX,2BAAmB7T,OAAnB,EAAsC;AAAA;;AAAnB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAAC,IAAA,GAAOoR,mBAAP;AAC+B,O;;UAG7ByC,e,GAAb;AAAA;;AACW,aAAA7T,IAAA,GAAOqR,iBAAP;AACV,O;AAMD;;;UACayC,gB,GAAb;AAAA;;AACW,aAAA9T,IAAA,GAAOsR,kBAAP;AACV,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5RM,UAAMxO,cAAY,GAAc;AACnCiR,cAAM,EAAE,EAD2B;AAEnCC,uBAAe,EAAE;AAACC,qBAAW,EAAE,IAAd;AAAoBC,iBAAO,EAAE,IAA7B;AAAmCC,mBAAS,EAAE,IAA9C;AAAoDC,sBAAY,EAAE;AAAlE,SAFkB;AAGnCC,iBAAS,EAAE,EAHwB;AAInCC,0BAAkB,EAAE;AAACL,qBAAW,EAAE,IAAd;AAAoBC,iBAAO,EAAE,IAA7B;AAAmCC,mBAAS,EAAE,IAA9C;AAAoDC,sBAAY,EAAE;AAAlE,SAJe;AAKnCtK,gBAAQ,EAAE,KALyB;AAMnCyK,sBAAc,EAAE,KANmB;AAOnCC,qBAAa,EAAE,KAPoB;AAQnCC,eAAO,EAAE;AAR0B,OAAhC;;AAgBA,eAAS1R,SAAT,GAAqE;AAAA,YAApDC,KAAoD,uEAA5CF,cAA4C;AAAA,YAA9BzB,MAA8B;AAC1EnH,eAAO,CAACC,GAAR,CAAY6I,KAAZ,EAAmB3B,MAAnB;AACAnH,eAAO,CAACC,GAAR,CAAY,oBAAZ;;AAEA,gBAAQkH,MAAM,CAACrB,IAAf;AAEE,eAAK,sDAAL;AAA8B;AAC5B,qBAAO,MAAP,OAAO,CAAP,kBACKgD,KADL,CAAO,EACG;AACRgR,+BAAe,EAAE;AACfC,6BAAW,EAAE5S,MAAM,CAACtB,OAAP,CAAekU,WADb;AAEfC,yBAAO,EAAE7S,MAAM,CAACtB,OAAP,CAAemU;AAFT,iBADT;AAKRK,8BAAc,EAAE,KALR;AAMRzK,wBAAQ,EAAE;AANF,eADH,CAAP;AASD;;AAED,eAAK,8DAAL;AAAsC;AACpC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR+Q,sBAAM,EAAE1S,MAAM,CAACtB,OAAP,CAAe9B,IADf;AAER+V,+BAAe,EAAE;AACfC,6BAAW,EAAE5S,MAAM,CAACtB,OAAP,CAAe2U,YADb;AAEfR,yBAAO,EAAES,MAAM,CAACtT,MAAM,CAACtB,OAAP,CAAe6U,QAAhB,CAFA;AAGfT,2BAAS,EAAE9S,MAAM,CAACtB,OAAP,CAAe8U,SAHX;AAIfT,8BAAY,EAAE/S,MAAM,CAACtB,OAAP,CAAe+U;AAJd,iBAFT;AAQRP,8BAAc,EAAE,IARR;AASRzK,wBAAQ,EAAE;AATF,eADH,CAAP;AAYD;;AAED,eAAK,yDAAL;AAAiC;AAC/B,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACRsR,kCAAkB,EAAE;AAClBL,6BAAW,EAAE5S,MAAM,CAACtB,OAAP,CAAekU,WADV;AAElBC,yBAAO,EAAE7S,MAAM,CAACtB,OAAP,CAAemU;AAFN,iBADZ;AAKRM,6BAAa,EAAE,KALP;AAMR1K,wBAAQ,EAAE;AANF,eADH,CAAP;AASD;;AAED,eAAK,iEAAL;AAAyC;AACvC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACRqR,yBAAS,EAAEhT,MAAM,CAACtB,OAAP,CAAe9B,IADlB;AAERqW,kCAAkB,EAAE;AAClBL,6BAAW,EAAE5S,MAAM,CAACtB,OAAP,CAAe2U,YADV;AAElBR,yBAAO,EAAES,MAAM,CAACtT,MAAM,CAACtB,OAAP,CAAe6U,QAAhB,CAFG;AAGlBT,2BAAS,EAAE9S,MAAM,CAACtB,OAAP,CAAe8U,SAHR;AAIlBT,8BAAY,EAAE/S,MAAM,CAACtB,OAAP,CAAe+U;AAJX,iBAFZ;AAQRN,6BAAa,EAAE,IARP;AASR1K,wBAAQ,EAAE;AATF,eADH,CAAP;AAYD;;AAED,eAAK,sDAAL;AAA8B;AAC5B,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED,eAAK,8DAAL;AAAsC;AACpC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR+Q,sBAAM,EAAE/Q,KAAK,CAAC+Q,MAAN,CAAa7J,MAAb,CAAqB,UAACL,IAAD;AAAA,yBAAUA,IAAI,CAACnQ,EAAL,KAAY2H,MAAM,CAACtB,OAAP,CAAerG,EAArC;AAAA,iBAArB,CADA;AAER2a,yBAAS,+BACJrR,KAAK,CAACqR,SADF,sBAEJU,MAAM,CAACC,MAAP,CAAchS,KAAK,CAAC+Q,MAAN,CAAa7J,MAAb,CAAoB,UAACL,IAAD;AAAA,yBAAUA,IAAI,CAACnQ,EAAL,KAAY2H,MAAM,CAACtB,OAAP,CAAerG,EAArC;AAAA,iBAApB,CAAd,EAA4E;AAAEub,4BAAU,EAAE;AAAExI,0BAAM,EAAE;AAAV;AAAd,iBAA5E,CAFI,EAFD;AAMR3C,wBAAQ,EAAE,IANF;AAORyK,8BAAc,EAAE,KAPR;AAQRC,6BAAa,EAAE;AARP,eADH,CAAP;AAWD;;AAED,eAAK,+DAAL;AAAuC;AACrC,qBAAO,MAAP,OAAO,CAAP,kBACKxR,KADL,CAAO,EACG;AACR+Q,sBAAM,+BACD/Q,KAAK,CAAC+Q,MADL,sBAEA/Q,KAAK,CAACqR,SAAN,CAAgBnK,MAAhB,CAAwB,UAACL,IAAD;AAAA,yBAAUA,IAAI,CAACnQ,EAAL,KAAY2H,MAAM,CAACtB,OAAP,CAAerG,EAArC;AAAA,iBAAxB,CAFA,EADE;AAKR2a,yBAAS,EAAErR,KAAK,CAACqR,SAAN,CAAgBnK,MAAhB,CAAwB,UAACL,IAAD;AAAA,yBAAUA,IAAI,CAACnQ,EAAL,KAAY2H,MAAM,CAACtB,OAAP,CAAerG,EAArC;AAAA,iBAAxB,CALH;AAMRoQ,wBAAQ,EAAE,KANF;AAORyK,8BAAc,EAAE,KAPR;AAQRC,6BAAa,EAAE;AARP,eADH,CAAP;AAWD;;AAED;;;;;;AAKA;;;;AAGA,eAAK,sDAAL;AAA8B;AAC5B,qBAAO,MAAP,OAAO,CAAP,kBACKxR,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AACD,eAAK,8DAAL;AAAsC;AACpC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE,IADF;AAER2K,uBAAO,EAAEpT,MAAM,CAACtB;AAFR,eADH,CAAP;AAKD;;AACD,eAAK,4DAAL;AAAoC;AAClC,qBAAO,MAAP,OAAO,CAAP,kBACKiD,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED;;;;AAGA,eAAK,0DAAL;AAAkC;AAChC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AACD,eAAK,kEAAL;AAA0C;AACxC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE,IADF;AAER2K,uBAAO,EAAEpT,MAAM,CAACtB;AAFR,eADH,CAAP;AAKD;;AACD,eAAK,gEAAL;AAAwC;AACtC,qBAAO,MAAP,OAAO,CAAP,kBACKiD,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED;;;;AAGA,eAAK,8DAAL;AAAsC;AACpC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AACD,eAAK,sEAAL;AAA8C;AAC5C,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE,IADF;AAER2K,uBAAO,EAAEpT,MAAM,CAACtB;AAFR,eADH,CAAP;AAKD;;AACD,eAAK,oEAAL;AAA4C;AAC1C,qBAAO,MAAP,OAAO,CAAP,kBACKiD,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED;;;;AAGA,eAAK,iEAAL;AAAyC;AACvC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AACD,eAAK,yEAAL;AAAiD;AAC/C,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE,IADF;AAER2K,uBAAO,EAAEpT,MAAM,CAACtB;AAFR,eADH,CAAP;AAKD;;AACD,eAAK,uEAAL;AAA+C;AAC7C,qBAAO,MAAP,OAAO,CAAP,kBACKiD,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED;;;;AAGA,eAAK,6DAAL;AAAqC;AACnC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AACD,eAAK,qEAAL;AAA6C;AAC3C,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE,IADF;AAER2K,uBAAO,EAAEpT,MAAM,CAACtB;AAFR,eADH,CAAP;AAKD;;AACD,eAAK,mEAAL;AAA2C;AACzC,qBAAO,MAAP,OAAO,CAAP,kBACKiD,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED;;;;AAGA,eAAK,qDAAL;AAA6B;AAC3B,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AACD,eAAK,6DAAL;AAAqC;AACnC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE,IADF;AAER2K,uBAAO,EAAEpT,MAAM,CAACtB;AAFR,eADH,CAAP;AAKD;;AACD,eAAK,2DAAL;AAAmC;AACjC,qBAAO,MAAP,OAAO,CAAP,kBACKiD,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;AAID;;AACA,eAAK,6DAAL;AAAqC;AACnC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAEzI,MAAM,CAACtB,OAAP,CAAe+J;AADjB,eADH,CAAP;AAID;;AACD,eAAK,gEAAL;AAAwC;AACtC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACRuR,8BAAc,EAAElT,MAAM,CAACtB,OAAP,CAAewU;AADvB,eADH,CAAP;AAID;;AACD,eAAK,mEAAL;AAA2C;AACzC,qBAAO,MAAP,OAAO,CAAP,kBACKvR,KADL,CAAO,EACG;AACRwR,6BAAa,EAAEnT,MAAM,CAACtB,OAAP,CAAemV;AADtB,eADH,CAAP;AAID;;AAED,eAAK,uDAAL;AAA+B;AAC7B,qBAAO,MAAP,OAAO,CAAP,kBACKlS,KADL,CAAO,EACG;AACR8G,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED,eAAK,+DAAL;AAAuC;AACrC,qBAAO,MAAP,OAAO,CAAP,kBACK9G,KADL,CAAO,EACG;AACRqR,yBAAS,EAAErR,KAAK,CAACqR,SAAN,CAAgBnK,MAAhB,CAAwB,UAACL,IAAD;AAAA,yBAAUA,IAAI,CAACnQ,EAAL,KAAY2H,MAAM,CAACtB,OAAP,CAAerG,EAArC;AAAA,iBAAxB,CADH;AAERoQ,wBAAQ,EAAE;AAFF,eADH,CAAP;AAKD;;AAED,eAAK,4DAAL;AAAoC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAOhH,cAAP;AACD;;AAED;AAAS;AACP,qBAAOE,KAAP;AACD;AA9RH;AAiSD;;AAEM,UAAMmS,aAAY,GAAG,6CAAAjS,qBAAA,EAAiC,WAAjC,CAArB;;AAEA,UAAMoH,WAAS,GAAG,6CAAAlH,cAAA,EACvB+R,aADuB,EAEvB,UAACnS,KAAD;AAAA,eAAsBA,KAAK,CAAC+Q,MAA5B;AAAA,OAFuB,CAAlB;;AAKA,UAAMxJ,aAAW,GAAG,SAAdA,aAAc,CAACC,OAAD,EAAU9Q,EAAV;AAAA,eAAiB,6CAAA0J,cAAA,EAAe+R,aAAf,EAA6B,UAAC1K,QAAD,EAAc;AACrF,cAAIA,QAAJ,EAAc;AACZ,mBAAOA,QAAQ,CAACD,OAAD,CAAR,CAAkBE,IAAlB,CAAuB,UAAAC,IAAI,EAAI;AACpC,qBAAOA,IAAI,CAACjR,EAAL,KAAYA,EAAnB;AACD,aAFM,CAAP;AAGD,WAJD,MAIO;AACL,mBAAO,EAAP;AACD;AACF,SAR2C,CAAjB;AAAA,OAApB;;AAUA,UAAM0b,kBAAiB,GAAG,SAApBA,kBAAoB,CAAC3I,MAAD;AAAA,eAC/B,6CAAArJ,cAAA,EAAe+R,aAAf,EAA6B,UAAAnS,KAAK;AAAA,iBAAIA,KAAK,CAAC+Q,MAAN,CAAa7J,MAAb,CAAoB,UAAAmL,CAAC;AAAA,mBAAIA,CAAC,CAACJ,UAAF,CAAaxI,MAAb,KAAwBA,MAA5B;AAAA,WAArB,CAAJ;AAAA,SAAlC,CAD+B;AAAA,OAA1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCvUM6I,mB;AAwCX,qCAAqBtb,MAArB,EAAqC;AAAA;;AAAA;;AAAhB,eAAAA,MAAA,GAAAA,MAAA;AAtCX,eAAAub,QAAA,GAA0C,EAA1C;AAuCRC,oBAAU,CAAC;AAAA,mBAAM,MAAI,CAACC,cAAL,EAAN;AAAA,WAAD,CAAV;AACD;;;;iBAtCD,yBAAgBC,YAAhB,EAAoD;AAClD,iBAAKH,QAAL,CAAcI,OAAd,CAAsB,UAACC,IAAD,EAAkC;AACtD,kBAAIA,IAAI,KAAKF,YAAb,EAA2B;AACzBE,oBAAI,CAACC,QAAL,GAAgB,KAAhB;AACD;AACF,aAJD;AAKD;;;iBAED,iBAAQD,IAAR,EAAoC;AAClC,iBAAKL,QAAL,CAAcO,IAAd,CAAmBF,IAAnB;AACD;;;iBAED,qBAAYA,IAAZ,EAAwC;AACtC,gBAAMG,KAAK,GAAG,KAAKR,QAAL,CAAcS,OAAd,CAAsBJ,IAAtB,CAAd;;AACA,gBAAIG,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,mBAAKR,QAAL,CAAcU,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;AACD;AACF;;;iBAED,0BAAiB;AAAA;;AACf,iBAAKR,QAAL,CAAcI,OAAd,CAAsB,UAACC,IAAD,EAAkC;AACtD,kBAAIA,IAAI,CAACM,KAAT,EAAgB;AACd,oBAAMC,QAAQ,GAAG,MAAI,CAACnc,MAAL,CAAYoc,GAA7B;AACA,oBAAMC,UAAU,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAnB;;AACA,oBAAID,UAAU,CAACL,OAAX,CAAoBJ,IAAI,CAACM,KAAzB,IAAmC,CAAvC,EAA0C;AACxCN,sBAAI,CAACC,QAAL,GAAgB,IAAhB;;AACA,wBAAI,CAACU,eAAL,CAAqBX,IAArB;AACD;AACF;AACF,aATD;AAUD;;;iBAED,iCAAqB;AAAA;;AACnB,iBAAK5b,MAAL,CAAYwc,MAAZ,CAAmBtV,IAAnB,CAAwB,gDAAAgJ,MAAA,EAAO,UAAAuM,KAAK;AAAA,qBAAIA,KAAK,YAAY,6CAAAC,aAArB;AAAA,aAAZ,CAAxB,EAAyEpc,SAAzE,CAAmF,UAAAhB,CAAC;AAAA,qBAAI,MAAI,CAACmc,cAAL,EAAJ;AAAA,aAApF;AACD;;;;;;;yBAtCUH,mB,EAAkB,oH;AAAA,O;;;cAAlBA,mB;AAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCJlBqB,yB;AAIX,2CAA6CC,OAA7C,EAA8E;AAAA;;AAC5E,eAAKA,OAAL,GAAeA,OAAf;AACD;;;;iBAGD,iBAAQtd,CAAR,EAAgB;AACd,iBAAKsd,OAAL,CAAapL,MAAb;AACD;;;;;;;yBAXUmL,yB,EAAwB,gEAId,sDAAAE,sBAJc,C;AAIQ,O;;;cAJhCF,yB;AAAwB,mD;AAAA;AAAA;;qBAAxB,mB;AAAe,a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEfE,uB;AAoBX,yCAAwCC,GAAxC,EAAiE;AAAA;;AAC/D,eAAKA,GAAL,GAAWA,GAAX;AACD;;;;eAlBD,eAEY;AACV,mBAAO,KAAKC,SAAZ;AACD,W;eAED,aAAaC,KAAb,EAA6B;AAC3B,iBAAKD,SAAL,GAAiBC,KAAjB;;AACA,gBAAIA,KAAJ,EAAW;AACT,mBAAKF,GAAL,CAASP,eAAT,CAAyB,IAAzB;AACD;AACF;;;iBASD,oBAAQ;AACN,iBAAKO,GAAL,CAASG,OAAT,CAAiB,IAAjB;AAED;;;iBAED,uBAAW;AACT,iBAAKH,GAAL,CAASI,WAAT,CAAqB,IAArB;AACD;;;iBAED,kBAAM;AACJ,iBAAKrB,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACD;;;;;;;yBAnCUgB,uB,EAAsB,gEAoBb,kDAAAvB,kBApBa,C;AAoBK,O;;;cApB3BuB,uB;AAAsB,iD;AAAA,mB;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEtBxZ,6B;AAMX,+CACS8Z,SADT,EAEkClZ,IAFlC,EAGUlE,KAHV,EAG2B;AAAA;;AAFlB,eAAAod,SAAA,GAAAA,SAAA;AACyB,eAAAlZ,IAAA,GAAAA,IAAA;AACxB,eAAAlE,KAAA,GAAAA,KAAA;AARV,eAAAqd,KAAA,GAAQ,IAAI,2CAAAC,YAAJ,EAAR;AAEA,eAAAC,UAAA,GAAa,IAAI,+CAAA/I,WAAJ,EAAb;AACgB,eAAAgJ,cAAA,GAAiB,IAAjB;AAMX;;;;iBAEL,oBAAW;AACT,iBAAKD,UAAL,CAAgBpK,QAAhB,CAAyBS,aAAzB,GAAyC,KAAzC;AACA,iBAAK2J,UAAL,CAAgBE,SAAhB,GAA4B,KAAKvZ,IAAL,CAAUvE,EAAtC;AACA,iBAAK4d,UAAL,CAAgBG,OAAhB,GAA4B,CAA5B,CAHS,CAGsB;AAChC;;;iBAGD,0BAAiB;AACf,gBAAI,KAAKF,cAAT,EAAyB;AACvB,mBAAKD,UAAL,CAAgBpK,QAAhB,CAAyBS,aAAzB,GAAyC,KAAzC;AACD,aAFD,MAEO;AACL,mBAAK2J,UAAL,CAAgBpK,QAAhB,CAAyBS,aAAzB,GAAyC,KAAzC;AACD;AACF;;;iBAED,qBAAY+J,YAAZ,EAAmC;AACjC,iBAAKP,SAAL,CAAeQ,KAAf,CAAqBD,YAArB;AACD;;;iBAED,eAAMhe,EAAN,EAAmB;AACjB,iBAAKke,WAAL,CAAiB,IAAjB,EADiB,CAEjB;;AACA,iBAAK7d,KAAL,CAAWS,QAAX,CAAoB,IAAI,mEAAJ,CAA8B,KAAK8c,UAAnC,CAApB;AACA,iBAAKF,KAAL,CAAWS,IAAX;AACD;;;;;;;yBApCUxa,6B,EAA4B,mI,EAAA,gEAQ7B,sDAAAya,eAR6B,C,EAQd,+G;AAAA,O;;;cARdza,6B;AAA4B,mD;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,iuB;AAAA;AAAA;ACTzC;;AACI;;AACI;;AAAyC;;AAAyB;;AAClE;;AACI;;AAA0D;AAAA;AAAA,eAA4B,eAA5B,EAA4B;AAAA,qBAAkB,IAAA0a,cAAA,EAAlB;AAAkC,aAA9D;;AAAgE;;AAAqC;;AACnK;;AACJ;;AACF;;AAEF;;AAaE;;AACI;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AAEE;AAAA;AAAA;;AACgB;;AACpB;;AACF;;AACJ;;AAQF;;AAEA;;AACE;;AAAiC;AAAA,qBAAS,IAAAH,WAAA,CAAY,IAAZ,CAAT;AAA0B,aAA1B;;AAA4B;;AAAM;;AACnE;;AAA0C;AAAA,qBAAS,IAAAI,KAAA,aAAT;AAAuB,aAAvB;;AAAyB;;AAAG;;AAGxE;;;;AA7CiD;;AAAA;;AAEqB;;AAAA;;AAAgE;;AAAA;;AAuB1H;;AAAA,2GAAiC,SAAjC,EAAiC,mBAAjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCtBC7a,uB;AAEX,yCACSga,SADT,EAEkClZ,IAFlC,EAE2C;AAAA;;AADlC,eAAAkZ,SAAA,GAAAA,SAAA;AACyB,eAAAlZ,IAAA,GAAAA,IAAA;AAC7B;;;;iBAEL,qBAAYyZ,YAAZ,EAAmC;AACjC,iBAAKP,SAAL,CAAeQ,KAAf,CAAqBD,YAArB;AACD;;;;;;;yBATUva,uB,EAAsB,mI,EAAA,gEAIvB,sDAAA2a,eAJuB,C;AAIR,O;;;cAJd3a,uB;AAAsB,2C;AAAA,iB;AAAA,e;AAAA,qN;AAAA;AAAA;ACPnC;;AAAqB;;AAAc;;AACnC;;AACE;;AAAG;;AAAgB;;AACrB;;AACA;;AACE;;AAAmB;AAAA,qBAAS,IAAAya,WAAA,CAAY,KAAZ,CAAT;AAA2B,aAA3B;;AAA0C;;AAAE;;AAC/D;;AAAmB;AAAA,qBAAS,IAAAA,WAAA,CAAY,IAAZ,CAAT;AAA0B,aAA1B;;AAA0C;;AAAG;;AAClE;;;;AAPqB;;AAAA;;AAEhB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACwBa;;AACE;;AACE;;AAAgE;;AAAa;;AAC7E;;AAAuE;;AAAc;;AACvF;;AACF;;;;;;;;;AALyD;;AAElD;;AAAA;;AAA6D;;AAAA;;AAC7D;;AAAA;;AAAoE;;AAAA;;;;;;;;AAU3F;;AAA8E;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAM;;;;;;;;AAChH;;AAAqJ;AAAA;;AAAA;;AAAA,sCAAqB,IAArB;AAAyB,WAAzB;;AAA4B;;AAAI;;;;;;AAA/D;;;;;;;;AACtH;;AAAuF;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAO;;;;UCjC7Gxa,wB;AAIX,0CACS+Z,SADT,EAEkClZ,IAFlC,EAE4C;AAAA;;AADnC,eAAAkZ,SAAA,GAAAA,SAAA;AACyB,eAAAlZ,IAAA,GAAAA,IAAA;AALlC,eAAAga,QAAA,GAAW,IAAI,2CAAAZ,YAAJ,EAAX;AACA,eAAAa,MAAA,GAAS,IAAI,2CAAAb,YAAJ,EAAT;AAKK;;;;iBAEL,qBAAYK,YAAZ,EAAmC;AACjC,iBAAKP,SAAL,CAAeQ,KAAf,CAAqBD,YAArB;AACD;;;iBAED,kBAAShe,EAAT,EAAa;AACX,iBAAKke,WAAL,CAAiB,KAAjB;AACA,iBAAKK,QAAL,CAAcJ,IAAd,CAAmBne,EAAnB;AACD;;;iBAED,gBAAOA,EAAP,EAAW;AACT,iBAAKke,WAAL,CAAiB,KAAjB;AACA,iBAAKM,MAAL,CAAYL,IAAZ,CAAiBne,EAAjB;AACD;;;;;;;yBArBU0D,wB,EAAuB,mI,EAAA,gEAMxB,sDAAA0a,eANwB,C;AAMT,O;;;cANd1a,wB;AAAuB,6C;AAAA,iB;AAAA,gB;AAAA,+uB;AAAA;AAAA;ADRpC;;AAAqB;;AAAkB;;AACvC;;AACE;;AAEI;;AACI;;AACJ;;AAEA;;AACE;;AACF;;AAEA;;AACI;;AACJ;;AAEA;;AACE;;AACF;;AAEA;;AACI;;AACI;;AACI;;AAAgB;;AAAW;;AAC/B;;AACA;;AACI;;AAMJ;;AACJ;;AACJ;;AACJ;;AACF;;AAEA;;AACE;;AACA;;AACA;;AACF;;;;AA1CqB;;AAAA;;AAIsB;;AAAA;;AACjC;;AAAA;;AAQ2D;;AAAA;;AAAtD;;AAa4B;;AAAA;;AAaR;;AAAA;;AACC;;AAAA;;AACS;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;aErB7C;AACA;;;UACa+a,gB;AAkBX,kCACUC,IADV,EAEUC,MAFV,EAGUC,OAHV,EAIUC,QAJV,EAI6B;AAAA;;AAHnB,eAAAH,IAAA,GAAAA,IAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AApBD,eAAAC,cAAA,GAAiB,IAAjB;AAET,eAAAC,SAAA,GAAY,IAAZ;AAKU,eAAAC,aAAA,GAAgB,IAAI,2CAAArB,YAAJ,EAAhB;AAEV,eAAAsB,UAAA,GAAc,2EAAd;AACA,eAAAC,WAAA,GAAc;AACZ,wBAAY,2EADA;AAEZ,2BAAe,2EAFH;AAGZ,0BAAc;AAHF,WAAd;AAYC;;;;iBAED,oBAAW;AACT,iBAAKC,QAAL,GAAgB,KAAKT,IAAL,CAAUU,aAAV,CAAwBC,cAAxC;AACA,iBAAKC,MAAL,GAAgB,KAAKZ,IAAL,CAAUU,aAAV,CAAwBG,YAAxC;AACD;;;iBAED,2BAAe;AACb,iBAAKC,kBAAL,CAAwB,KAAKV,cAA7B;AACD;;;iBAEF,4BAAmBW,KAAnB,EAAmC;AACjC,gBAAIA,KAAJ,EAAW;AACV,mBAAKf,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BC,KAA9B,GAAsC,SAAtC;AACA,mBAAKjB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BE,QAA9B,GAAyC,MAAzC;AACA,mBAAKlB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BG,SAA9B,GAA0C,OAA1C;AACA,mBAAKnB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BI,SAA9B,GAA0C,KAA1C;AACA,mBAAKpB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BK,UAA9B,GAA2C,MAA3C;AACA,mBAAKrB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BM,UAA9B,GAA2C,YAA3C;AACA,mBAAKnB,QAAL,CAAcoB,QAAd,CAAuB,KAAKvB,IAAL,CAAUU,aAAjC,EAAgD,KAAhD,EAPU,CAQV;AACD,aATA,MASK;AACJ,mBAAKV,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BC,KAA9B,GAAsC,SAAtC;AACA,mBAAKjB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BE,QAA9B,GAAyC,MAAzC;AACA,mBAAKlB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BG,SAA9B,GAA0C,MAA1C;AACA,mBAAKnB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BI,SAA9B,GAA0C,KAA1C;AACA,mBAAKpB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BQ,WAA9B,GAA4C,EAA5C;AACA,mBAAKxB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BK,UAA9B,GAA2C,MAA3C;AACA,mBAAKrB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BM,UAA9B,GAA2C,SAA3C;AACA,mBAAKnB,QAAL,CAAcsB,WAAd,CAA0B,KAAKzB,IAAL,CAAUU,aAApC,EAAmD,KAAnD;AACD;AACD,W,CAEF;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEI;AACA;AAEA;AACA;AAEA;AACA;AACA;AACJ;;;;iBAGE,mBAAUrC,KAAV,EAAiB;AAEf,gBAAI,CAAC,KAAK+B,cAAV,EAA0B;AACxB,mBAAKU,kBAAL,CAAwB,KAAxB;AACA;AACD,aAHD,MAGO;AACL,mBAAKA,kBAAL,CAAwB,IAAxB;AACD;;AAED,gBAAMY,IAAI,GAAG,KAAK1B,IAAL,CAAUU,aAAvB;AAEA,gBAAMiB,WAAW,GAAGD,IAAI,CAAC9C,KAAzB,CAXe,CAWiB;;AAChC,gBAAIgD,IAAI,GAAGvD,KAAK,CAACwD,GAAjB;AACA,gBAAIC,QAAQ,GAAG,EAAf;AACA,gBAAIC,IAAJ;;AAEA,gBAAIJ,WAAW,CAACK,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,qBAAO,IAAP;AACD,aAFD,MAEO,IAAIL,WAAW,CAACK,MAAZ,IAAsB,CAA1B,EAA6B;AAClC;AACAF,sBAAQ,GAAGH,WAAX;AACD,aAHM,MAGA;AACL;AACAG,sBAAQ,GAAGH,WAAW,CAACM,MAAZ,CAAmBP,IAAI,CAACf,cAAL,GAAsB,CAAzC,EAA4C,CAA5C,CAAX,CAFK,CAGL;AACD;;AAED,gBAAItC,KAAK,CAAC6D,KAAN,IAAe,IAAnB,EAAyB;AACvB;AACAN,kBAAI,GAAGvD,KAAK,CAACwD,GAAb;AACD,aAHD,MAGM,IAAIxD,KAAK,CAAC6D,KAAN,GAAc,CAAlB,EAAqB;AACzB;AACAN,kBAAI,GAAGvD,KAAK,CAAC6D,KAAb,CAFyB,CAIzB;;AACA,kBAAI,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiBtE,OAAjB,CAAyBS,KAAK,CAACwD,GAA/B,MAAwC,CAA5C,EAA+C;AAC7C,uBAAO,IAAP;AACD;AACF,aARK,MAQA,CACJ;AACA;AACD,aAzCc,CA2Cf;;;AACA,gBAAIxD,KAAK,CAAC8D,QAAV,EAAoB;AAClBJ,kBAAI,GAAG1D,KAAK,CAAC+D,SAAN,IAAmB/D,KAAK,CAACgE,YAAhC;AACD,aAFD,MAEM,IAAI,OAAOhE,KAAK,CAACiE,OAAb,KAA0B,WAA9B,EAA2C;AAC/CP,kBAAI,GAAG1D,KAAK,CAACiE,OAAb;AACD;;AAED,gBAAMC,MAAM,GAAWb,IAAI,CAACb,YAA5B;AACA,iBAAKD,MAAL,GAAcc,IAAI,CAACb,YAAnB;AACA,iBAAKJ,QAAL,GAAgBiB,IAAI,CAACf,cAArB;;AAEA,gBAAI;AACF,kBAAM6B,UAAU,GAAG,KAAKjC,UAAL,CAAgB3C,OAAhB,CAAwBkE,QAAxB,CAAnB;;AAEA,kBAAIU,UAAU,KAAK,CAAC,CAAhB,IAAqBT,IAAzB,EAA+B;AAC7B,uBAAO,IAAP;AACD;;AAED,kBAAMU,KAAK,GAAG,KAAKjC,WAAL,CAAiB,UAAjB,EAA6ByB,MAA7B,CAAoCO,UAApC,EAAgD,CAAhD,CAAd;;AAEA,kBAAI,KAAKnC,SAAT,EAAoB;AAClB;AACA,qBAAKA,SAAL,GAAiB,KAAjB;AAEA,qBAAKqC,QAAL,GAAgBf,WAAW,CAACgB,SAAZ,CAAsB,CAAtB,EAAyBjB,IAAI,CAACf,cAAL,GAAsB,CAA/C,IACA8B,KADA,GAEAd,WAAW,CAACgB,SAAZ,CAAsBjB,IAAI,CAACb,YAA3B,EAAyCc,WAAW,CAACK,MAArD,CAFhB;AAGD,eAPD,MAOO;AACL,qBAAKU,QAAL,GAAgBf,WAAW,CAACgB,SAAZ,CAAsB,CAAtB,EAAyBjB,IAAI,CAACf,cAAL,GAAsB,CAA/C,IACA8B,KADA,GAEAd,WAAW,CAACgB,SAAZ,CAAsBjB,IAAI,CAACb,YAA3B,EAAyCc,WAAW,CAACK,MAArD,CAFhB;AAID;;AAEC,mBAAK1B,aAAL,CAAmBb,IAAnB,CAAwB,KAAKiD,QAA7B;;AACA,mBAAKzC,MAAL,CAAY2C,aAAZ,CAA0BC,UAA1B,CAAqC,KAAKH,QAA1C;AAEH,aA1BD,CA0BC,OAAOjZ,KAAP,EAAc;AACb3H,qBAAO,CAAC2H,KAAR,CAAcA,KAAd;AACD;;AAED,iBAAKqZ,SAAL;AACD;;;iBAGD,qBAAY;AACV;AACA,iBAAK9C,IAAL,CAAUU,aAAV,CAAwBqC,KAAxB;AACA,iBAAK/C,IAAL,CAAUU,aAAV,CAAwBsC,iBAAxB,CAA0C,KAAKvC,QAA/C,EAAyD,KAAKG,MAA9D;AACD;;;;;;;yBA7PUb,gB,EAAe,sH,EAAA,oH,EAAA,sH,EAAA,qH;AAAA,O;;;cAAfA,gB;AAAe,+C;AAAA;AAAA;;qBAAf,qB;AAAiB,a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACM9B,UAAMkD,SAAS,GAAG;AAChB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4JA;AACErY,aAAK,EAAE,OADT;AAEER,YAAI,EAAE,gBAFR;AAGErE,YAAI,EAAE,OAHR;AAIE6B,YAAI,EAAE,KAJR;AAKEsb,YAAI,EAAE,SALR;AAME9d,gBAAQ,EAAE,CACR;AAAEwF,eAAK,EAAE,iBAAT;AAA4BR,cAAI,EAAE,WAAlC;AAA+CxC,cAAI,EAAE;AAArD,SADQ,EAER;AAAEgD,eAAK,EAAE,cAAT;AAAyBR,cAAI,EAAE,cAA/B;AAA+CxC,cAAI,EAAE;AAArD,SAFQ,EAIR;AACEgD,eAAK,EAAE,eADT;AAEER,cAAI,EAAE,eAFR;AAGExC,cAAI,EAAE,UAHR;AAIEub,qBAAW,EAAE,CACX;AACEvY,iBAAK,EAAE,MADT;AAEER,gBAAI,EAAE,YAFR;AAGExC,gBAAI,EAAE;AAHR,WADW,EAMX;AACEgD,iBAAK,EAAE,UADT;AAEER,gBAAI,EAAE,eAFR;AAGExC,gBAAI,EAAE;AAHR,WANW;AAJf,SAJQ;AANZ,OA7JgB,EA0LhB;AACEgD,aAAK,EAAE,MADT;AAEER,YAAI,EAAE,WAFR;AAGErE,YAAI,EAAE,MAHR;AAIE6B,YAAI,EAAE,KAJR;AAKEsb,YAAI,EAAE,UALR;AAME9d,gBAAQ,EAAE,CACR;AAACwF,eAAK,EAAE,SAAR;AAAmBR,cAAI,EAAE,gBAAzB;AAA2CxC,cAAI,EAAE;AAAjD,SADQ,EAER;AAACgD,eAAK,EAAE,MAAR;AAAgBR,cAAI,EAAE,eAAtB;AAAuCxC,cAAI,EAAE;AAA7C,SAFQ;AANZ,OA1LgB,EAqMhB;AACEgD,aAAK,EAAE,QADT;AAEER,YAAI,EAAE,aAFR;AAGErE,YAAI,EAAE,aAHR;AAIE6B,YAAI,EAAE,KAJR;AAKEsb,YAAI,EAAE,oBALR;AAME9d,gBAAQ,EAAE,CACR;AAACwF,eAAK,EAAE,WAAR;AAAqBR,cAAI,EAAE,WAA3B;AAAwCxC,cAAI,EAAE;AAA9C,SADQ,EAER;AAACgD,eAAK,EAAE,QAAR;AAAkBR,cAAI,EAAE,aAAxB;AAAuCxC,cAAI,EAAE;AAA7C,SAFQ,EAGR;AAACgD,eAAK,EAAE,MAAR;AAAgBR,cAAI,EAAE,WAAtB;AAAmCxC,cAAI,EAAE;AAAzC,SAHQ;AANZ,OArMgB,EAiNhB;AACEgD,aAAK,EAAE,MADT;AAEER,YAAI,EAAE,MAFR;AAGErE,YAAI,EAAE,YAHR;AAIE6B,YAAI,EAAE,KAJR;AAKEsb,YAAI,EAAE,eALR;AAME9d,gBAAQ,EAAE,CACR;AAACwF,eAAK,EAAE,WAAR;AAAqBR,cAAI,EAAE,gBAA3B;AAA6CxC,cAAI,EAAE;AAAnD,SADQ,EAER;AAACgD,eAAK,EAAE,OAAR;AAAiBR,cAAI,EAAE,YAAvB;AAAqCxC,cAAI,EAAE;AAA3C,SAFQ,EAGR;AACEgD,eAAK,EAAE,IADT;AAEER,cAAI,EAAE,SAFR;AAEmBxC,cAAI,EAAE,MAFzB,CAGE;AACA;AACA;;AALF,SAHQ,EAUR;AAACgD,eAAK,EAAE,QAAR;AAAkBR,cAAI,EAAE,aAAxB;AAAuCxC,cAAI,EAAE;AAA7C,SAVQ,EAWR;AACEgD,eAAK,EAAE,OADT;AAEER,cAAI,EAAE,OAFR;AAEiBxC,cAAI,EAAE,MAFvB,CAGE;AACA;AACA;;AALF,SAXQ;AANZ,OAjNgB,EA2OhB;AACEgD,aAAK,EAAE,SADT;AAEER,YAAI,EAAE,YAFR;AAGErE,YAAI,EAAE,SAHR;AAIE6B,YAAI,EAAE,KAJR;AAKEsb,YAAI,EAAE,SALR;AAME9d,gBAAQ,EAAE,CACR;AAACwF,eAAK,EAAE,SAAR;AAAmBR,cAAI,EAAE,SAAzB;AAAoCxC,cAAI,EAAE;AAA1C,SADQ,EAER;AAACgD,eAAK,EAAE,QAAR;AAAkBR,cAAI,EAAE,SAAxB;AAAmCxC,cAAI,EAAE;AAAzC,SAFQ;AAGR;;AAEA;AAACgD,eAAK,EAAE,QAAR;AAAkBR,cAAI,EAAE,QAAxB;AAAkCxC,cAAI,EAAE;AAAxC,SALQ,CAMR;AANQ;AANZ,OA3OgB,CAAlB;;UA+Pawb,U;AAFb;AAAA;;AAGE,eAAAC,KAAA,GAAQ,CAAR;AAUD;;;;iBARC,kBAAS,CACP;AACD;;;iBAED,uBAAW;AACT,mBAAOJ,SAAP;AACD;;;;;;;yBATUG,U;AAAS,O;;;eAATA,U;AAAS,iBAATA,UAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC3RT1P,M,GAUX,kBAAc;AAAA;;AACZ,aAAKpS,EAAL,GAAU,IAAV;AACD,O;;UAGUgiB,M;;;;UAIAC,K;;;;UAMA9Y,Q,GAaX;AAAA;;AACE,aAAKoK,OAAL,GAAkB,IAAlB;AACA,aAAK2O,GAAL,GAAkB,IAAlB;AACA,aAAKC,MAAL,GAAkB,IAAlB;AACA,aAAKC,EAAL,GAAkB,IAAlB;AACA,aAAKC,KAAL,GAAkB,IAAlB;AACA,aAAKC,OAAL,GAAkB,IAAlB;AACA,aAAKxa,KAAL,GAAkB,IAAlB;AACA,aAAKya,KAAL,GAAkB,IAAlB;AACA,aAAKC,UAAL,GAAkB,EAAlB;AACA,aAAKC,UAAL,GAAkB,EAAlB;AAED,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCtCUne,U;AAIX,4BACYlE,IADZ,EAEYE,MAFZ,EAGYmE,IAHZ,EAGkC;AAAA;;AAFtB,eAAArE,IAAA,GAAAA,IAAA;AACA,eAAAE,MAAA,GAAAA,MAAA;AACA,eAAAmE,IAAA,GAAAA,IAAA;AALZ,eAAAie,eAAA,GAAiC,IAAI,kCAAAC,OAAJ,EAAjC;AAMI;;;;iBAEJ,qBACEC,IADF,EAEEtZ,KAFF,EAE4B;AAAA;;AAE1B,iBAAK5I,WAAL,GAAmB,KAAKN,IAAL,CAAUO,SAAV,CAAoB6G,IAApB,CAAyB,gDAAAqb,SAAA,EAAU,KAAKH,eAAf,CAAzB,EAA0D9hB,SAA1D,CACf,UAAAC,QAAQ,EAAI;AACV,kBAAI,CAACA,QAAL,EAAgB;AACd,sBAAI,CAACP,MAAL,CAAYmI,QAAZ,CAAqB,CAAC,uBAAD,CAArB;AACD;;AACD,oBAAI,CAAChE,IAAL,CAAUqe,UAAV;AACD,aANc,CAAnB;AASA,mBAAO,IAAP;AACD;;;iBAED,uBAAc;AACZ,iBAAKJ,eAAL,CAAqBE,IAArB;AACD;;;;;;;yBA5BUte,U,EAAS,8G,EAAA,2G,EAAA,yH;AAAA,O;;;eAATA,U;AAAS,iBAATA,UAAS,K;AAAA,oBAFR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHd;;;UAKaye,Y;AAQX,8BACYlQ,OADZ,EAEYmQ,IAFZ,EAE4B;AAAA;;AADhB,eAAAnQ,OAAA,GAAAA,OAAA;AACA,eAAAmQ,IAAA,GAAAA,IAAA;AARJ,eAAAC,OAAA,GAAU,uDAAA/f,WAAA,OAAV,CAQoB,CAN5B;;AACA,eAAArC,QAAA,GAAoB,KAApB;AACA,eAAAF,SAAA,GAAY,IAAI,kCAAAuiB,eAAJ,CAA6B,KAAKriB,QAAlC,CAAZ;;AAME,cAAI,KAAKgS,OAAL,CAAaG,UAAb,CAAwB,YAAxB,CAAJ,EAA2C;AACzC,iBAAKrS,SAAL,CAAeiiB,IAAf,CAAoB,IAApB;AACA,iBAAK/hB,QAAL,GAAgB,IAAhB;AACD;AACF;;;;iBAEM,sBAAa;AAClB,mBAAO,CAAC,CAAC,KAAKgS,OAAL,CAAaG,UAAb,CAAwB,YAAxB,CAAT;AACD;;;iBAEM,qBAAY;AACjBxS,mBAAO,CAACC,GAAR,CAAY,UAAZ;AACA,iBAAKE,SAAL,CAAeiiB,IAAf,CAAoB,KAApB;AACA,iBAAK/hB,QAAL,GAAgB,KAAhB;AACA,iBAAKgS,OAAL,CAAasQ,OAAb;AACD;;;iBAEM,gBAAOrb,KAAP,EAAsBC,QAAtB,EAAwC;AAC7C,mBAAO,KAAKib,IAAL,CAAUI,IAAV,CAAoB,KAAKH,OAAL,GAAe,eAAnC,EAAoD;AAAEnb,mBAAK,EAALA,KAAF;AAASC,sBAAQ,EAARA;AAAT,aAApD,CAAP;AACD,W,CAED;;;;iBACO,kBAASsb,SAAT,EAA0B;AAC/B,gBAAK,CAACA,SAAS,CAACta,KAAZ,IAAuB,CAACsa,SAAS,CAACva,IAAtC,EAA6C;AAC3C;AACD;;AAED,iBAAKnI,SAAL,CAAeiiB,IAAf,CAAoB,IAApB;AACA,iBAAK/hB,QAAL,GAAgB,IAAhB;AAEA,iBAAKgS,OAAL,CAAaxK,WAAb,CAAyBgb,SAAzB;AACD;;;iBAEM,sBAAata,KAAb,EAAoB;AACzB;;;;AAIA;;AAEA;;;AAIA,mBAAO,KAAKia,IAAL,CAAUI,IAAV,CAAoB,KAAKH,OAAL,GAAe,iBAAf,GAAmCla,KAAvD,EAA+D,IAA/D,CAAP;AACD;;;iBAEM,2BAAkB;AACvB,mBAAO,KAAK8J,OAAL,CAAavK,cAApB;AACD;;;;;;;yBA7DUya,Y,EAAW,oH,EAAA,oH;AAAA,O;;;eAAXA,Y;AAAW,iBAAXA,YAAW,K;AAAA,oBAFV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCJDO,U;AAIX,8BAAc;AAAA;;AACX,eAAKvR,EAAL,GAAU,KAAKwR,UAAL,GAAkBC,UAAU,CAAC,mBAAD,CAAtC;AACF;;;;iBAED,eAAOC,WAAP,EAAqBC,YAArB,EAAoC;AAClC;AACA,iBAAK3R,EAAL,CAAQ4R,KAAR,CAAcF,WAAd,EAA2BC,YAA3B;AACD;;;iBAED,mBAAU5a,IAAV,EAAgB;AACd,mBAAO,KAAKiJ,EAAL,CAAQ6R,MAAR,CAAeC,SAAf,CAAyB/a,IAAzB,CAAP;AACD;;;iBAED,iBAAQA,IAAR,EAAY;AACV,mBAAO,KAAKiJ,EAAL,CAAQ6R,MAAR,CAAeE,OAAf,CAAuBhb,IAAvB,CAAP;AACD;;;;;;;yBAnBUwa,U;AAAS,O;;;eAATA,U;AAAS,iBAATA,UAAS,K;AAAA,oBAFR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCgBD9hB,uB;AAKT,yCACUuiB,aADV,EAEU1c,WAFV,EAGS2c,QAHT,EAIU3jB,KAJV,EAI2B;AAAA;;AAHjB,eAAA0jB,aAAA,GAAAA,aAAA;AACA,eAAA1c,WAAA,GAAAA,WAAA;AACD,eAAA2c,QAAA,GAAAA,QAAA;AACC,eAAA3jB,KAAA,GAAAA,KAAA;AAPZ,eAAA4jB,iBAAA,GAAoB,KAApB;AACA,eAAAC,YAAA,GAAwC,IAAI,kCAAAhB,eAAJ,CAA4B,IAA5B,CAAxC;AAOM;;;;iBAEJ,kBAAS1jB,GAAT,EAAgCuJ,KAAhC,EAA6C;AAC3C,mBAAOvJ,GAAG,CAAC2kB,KAAJ,CAAU;AAAEC,wBAAU,EAAE;AAAEC,6BAAa,EAAE,YAAYtb;AAA7B;AAAd,aAAV,CAAP;AACD;;;iBAED,mBAAUub,OAAV,EAAqC1B,IAArC,EAAsD;AAAA;;AAEpD,mBAAOA,IAAI,CAAC2B,MAAL,CAAY,KAAKC,QAAL,CAAcF,OAAd,EAAuB,KAAKP,aAAL,CAAmB/Q,UAAnB,CAA8B,YAA9B,CAAvB,CAAZ,EACNxL,IADM,CAEL,gDAAAid,GAAA,EAAI,UAAA1H,KAAK,EAAI;AACX,kBAAIA,KAAK,YAAY,kDAAA2H,YAArB,EAAmC;AACjC;AACA,oBAAI3H,KAAK,CAAChK,MAAN,KAAiB,GAArB,EAA0B,CAAE;AAC1B;AACD,iBAFD,MAEM,IAAIgK,KAAK,CAAChK,MAAN,KAAiB,GAArB,EAA0B;AAAE;AAChC,yBAAI,CAACiR,QAAL,CAAcW,IAAd,CAAmB5H,KAAK,CAAC6H,UAAzB,EAAqC,SAArC,EAAgD;AAACC,4BAAQ,EAAE;AAAX,mBAAhD;AACD,iBAFK,MAEA,IAAI9H,KAAK,CAAChK,MAAN,KAAiB,GAArB,EAA0B;AAAE;AAChC,yBAAI,CAACiR,QAAL,CAAcW,IAAd,CAAmB5H,KAAK,CAAC6H,UAAzB,EAAqC,SAArC,EAAgD;AAACC,4BAAQ,EAAE;AAAX,mBAAhD;AACD,iBAFK,MAEA,IAAI9H,KAAK,CAAChK,MAAN,KAAiB,GAArB,EAA0B;AAAE;AAChC,yBAAI,CAACiR,QAAL,CAAcW,IAAd,CAAmB5H,KAAK,CAAC6H,UAAzB,EAAqC,SAArC,EAAgD;AAACC,4BAAQ,EAAE;AAAX,mBAAhD;AACD;AACF;AACF,aAbD,EAaG,UAAA1c,KAAK,EAAI;AACV;AACA,sBAAQA,KAAK,CAAC4K,MAAd;AACE,qBAAK,GAAL;AACI,yBAAO,OAAI,CAAC+R,cAAL,CAAoB3c,KAApB,CAAP;;AACJ,qBAAK,GAAL;AACE,yBAAO,OAAI,CAAC4c,cAAL,CAAoBT,OAApB,EAA6B1B,IAA7B,CAAP;;AACF,qBAAK,GAAL;AACE,yBAAO,OAAI,CAACoB,QAAL,CAAcW,IAAd,CAAmBxc,KAAK,CAACA,KAAzB,EAAgC,SAAhC,CAAP;;AACF,qBAAK,GAAL;AACE,yBAAO,OAAI,CAAC6b,QAAL,CAAcW,IAAd,CAAmB,eAAnB,EAAoC,SAApC,CAAP;AARJ;AAUD,aAzBD,CAFK,CAAP;AA6BA;;;;;;;;;;;;;;AAiBD;;;iBAID,wBAAenlB,GAAf,EAAsCojB,IAAtC,EAAyD;AAEzD;AACEpiB,mBAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,iBAAKJ,KAAL,CAAWS,QAAX,CAAoB,IAAI,uEAAJ,EAApB,EAJuD,CAKvD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCH;;;iBAEC,wBAAeqH,KAAf,EAAsB;AACpB,iBAAK9H,KAAL,CAAWS,QAAX,CAAoB,IAAI,uEAAJ,EAApB,EADoB,CAElB;AACA;AACA;AACA;AAEA;AACH;;;;;;;yBAvHQU,uB,EAAsB,oH,EAAA,8G,EAAA,4H,EAAA,sG;AAAA,O;;;eAAtBA,uB;AAAsB,iBAAtBA,uBAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPtBwjB,iB;AAOX,mCACUnS,OADV,EAEUvS,MAFV,EAGU2kB,KAHV,EAIU5kB,KAJV,EAI2B;AAAA;;AAHjB,eAAAwS,OAAA,GAAAA,OAAA;AACA,eAAAvS,MAAA,GAAAA,MAAA;AACA,eAAA2kB,KAAA,GAAAA,KAAA;AACA,eAAA5kB,KAAA,GAAAA,KAAA;AANV,eAAAqiB,eAAA,GAAiC,IAAI,kCAAAC,OAAJ,EAAjC;AAOK;;;;iBAEL,oBAAW,CACV;;;iBAED,sBAAa;AAAA;;AACX,iBAAKuC,cAAL,GAAsB,KAAK5kB,MAAL,CAAYwc,MAAZ,CACnBtV,IADmB,CACd,gDAAAqb,SAAA,EAAU,KAAKH,eAAf,CADc,EAEnB9hB,SAFmB,CAET,UAAAmc,KAAK,EAAI;AAClB,kBAAIA,KAAK,YAAY,6CAAAoI,gBAArB,EAAuC;AACrC,uBAAI,CAACC,UAAL,CAAgBrI,KAAhB;AACD;AAAC;;;;AAGH,aARmB,CAAtB;AASD;;;iBAEO,oBAAWA,KAAX,EAAkC;AACxC,gBAAI,KAAKvY,QAAL,CAAcuY,KAAd,CAAJ,EAA0B;AACxB;AACD;;AAED,gBAAI,CAAC,KAAKsI,cAAL,CAAoBtI,KAApB,CAAL,EAAiC;AAC/B;AACD;AACF;;;iBAEO,wBAAeA,KAAf,EAAwC;AAC9C;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,mBAAO,IAAP;AACD;;;iBAEO,kBAASA,KAAT,EAAkC;AACxC,mBAAOA,KAAK,CAACzT,KAAN,CAAYgc,IAAZ,CAAiBC,UAAjB,CAA4BhhB,IAA5B,CAAiCC,QAAxC;AACD;;;iBAEO,mBAAUuY,KAAV,EAAiB;AACvB,gBAAIyI,MAAM,GAAI,KAAd;AAEA,gBAAMC,OAAO,GAAG1I,KAAK,CAACL,GAAN,CAAUE,KAAV,CAAgB,GAAhB,CAAhB;AACA,iBAAK8I,iBAAL,GAAyB,KAAKrlB,KAAL,CAAWoS,MAAX,CAAkB,UAAAkT,SAAS;AAAA,qBAAIA,SAAS,CAACjT,SAAV,CAAoB1K,IAApB,CAAyBgB,KAA7B;AAAA,aAA3B,EACtBxB,IADsB,CACjB,gDAAAqb,SAAA,EAAU,KAAKH,eAAf,CADiB,EAEtB9hB,SAFsB,CAEZ,UAAAoI,KAAK,EAAI;AAElB,kBAAIyc,OAAO,CAACG,QAAR,CAAiB,gBAAjB,KAAsCH,OAAO,CAACG,QAAR,CAAiB,WAAjB,CAA1C,EAAyE;AACvEJ,sBAAM,GAAG,IAAT;AACD;;AAED,kBAAIxc,KAAJ,EAAW;AACTqS,sBAAM,CAACtb,IAAP,CAAYiJ,KAAZ,EAAmBiT,OAAnB,CAA2B,UAASsE,GAAT,EAAc;AACvClF,wBAAM,CAACtb,IAAP,CAAYiJ,KAAK,CAACuX,GAAD,CAAL,CAAWsF,WAAvB,EAAoC5J,OAApC,CAA4C,UAAS6J,QAAT,EAAmB;AAC7D;AACA;AACA,wBAAIL,OAAO,CAACG,QAAR,CAAiB5c,KAAK,CAACuX,GAAD,CAAL,CAAWsF,WAAX,CAAuBC,QAAvB,EAAiCC,UAAlD,CAAJ,EAAmE;AACjEP,4BAAM,GAAG,IAAT;AACD;AACF,mBAND;AAOH,iBARC;AASD;AACF,aAnBsB,CAAzB,CAJuB,CAyBvB;;AACA,gBAAIA,MAAJ,EAAY;AACV;AACD,aA5BsB,CA6BvB;;;AACA,gBAAI,CAACA,MAAL,EAAa;AACX,mBAAKllB,MAAL,CAAYmI,QAAZ,CAAqB,CAAC,qBAAD,CAArB;AACD;AACF;;;iBAED,uBAAc;AACZ,iBAAKia,eAAL,CAAqBE,IAArB,GADY,CAEZ;AACA;AACD;;;;;;;yBA/FUoC,iB,EAAgB,oH,EAAA,2G,EAAA,mH,EAAA,sG;AAAA,O;;;eAAhBA,iB;AAAgB,iBAAhBA,iBAAgB,K;AAAA,oBAFf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCIDgB,e;AAeX,iCACU3lB,KADV,EAEU2iB,IAFV,EAE0B;AAAA;;AADhB,eAAA3iB,KAAA,GAAAA,KAAA;AACA,eAAA2iB,IAAA,GAAAA,IAAA;AAfF,eAAAiD,iBAAA,GAA4B,CAA5B,CAekB,CAfa;;AAC/B,eAAAC,kBAAA,GAA8B,KAA9B;AAGD,eAAAlmB,EAAA,GAAK,EAAL;AACA,eAAA8I,IAAA,GAAO,OAAP;AACA,eAAAhB,KAAA,GAAQ,EAAR;AAKP,eAAA4a,eAAA,GAAiC,IAAI,kCAAAC,OAAJ,EAAjC;AAKI;;;;iBAEG,mBAAO;AACZwD,0BAAc,CAACC,KAAf;AAEA,iBAAKC,WAAL,GAAmB,IAAnB;AACA,iBAAKvd,IAAL,GAAY,OAAZ;AACA,iBAAKhB,KAAL,GAAa,EAAb;AACA,iBAAKkB,KAAL,GAAa,EAAb;AACA,iBAAKsd,SAAL,GAAiB,EAAjB;AACD;;;iBAEM,qBAAYjD,SAAZ,EAA6B;AAClC;AACA,gBAAMkD,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,gBAAI,CAACE,WAAL,CAAiBF,IAAI,CAACG,WAAL,KAAqB,KAAKT,iBAA3C;AAEAE,0BAAc,CAACQ,OAAf,CAAuB,IAAvB,EAAqCtD,SAAS,CAACrjB,EAA/C;AACAmmB,0BAAc,CAACQ,OAAf,CAAuB,MAAvB,EAAqCtD,SAAS,CAACva,IAA/C;AACAqd,0BAAc,CAACQ,OAAf,CAAuB,OAAvB,EAAqCtD,SAAS,CAACvb,KAA/C;;AACA,gBAAGub,SAAS,CAACta,KAAb,EAAmB;AACjBod,4BAAc,CAACQ,OAAf,CAAuB,YAAvB,EAAqCtD,SAAS,CAACta,KAAV,CAAgBA,KAArD;AACD;;AACDod,0BAAc,CAACQ,OAAf,CAAuB,OAAvB,EAAqCC,IAAI,CAACC,SAAL,CAAexD,SAAS,CAACra,KAAzB,CAArC;AACAmd,0BAAc,CAACQ,OAAf,CAAuB,QAAvB,EAAqCJ,IAAI,CAACO,MAAL,EAArC,EAZkC,CAalC;AAEA;;AACAX,0BAAc,CAACQ,OAAf,CAAuB,SAAvB,EAAiCC,IAAI,CAACC,SAAL,CAAexD,SAAS,CAACna,OAAzB,CAAjC;AAEA,iBAAKlJ,EAAL,GAAmB,KAAKgT,UAAL,CAAgB,IAAhB,CAAnB;AACA,iBAAKlK,IAAL,GAAmB,KAAKkK,UAAL,CAAgB,MAAhB,CAAnB;AACA,iBAAKlL,KAAL,GAAmB,KAAKkL,UAAL,CAAgB,OAAhB,CAAnB;AACA,iBAAKqT,WAAL,GAAmB,KAAKrT,UAAL,CAAgB,kBAAhB,CAAnB;AACA,iBAAKhK,KAAL,GAAmB,KAAKgK,UAAL,CAAgB,OAAhB,CAAnB;AACA,iBAAKsT,SAAL,GAAmB,KAAKtT,UAAL,CAAgB,WAAhB,CAAnB;AAEA,mBAAO,IAAP;AACD;AAED;;;;;;;iBAIO,0BAAiB;AAAA;;AACtB,gBAAI,CAAC,KAAKA,UAAL,CAAgB,YAAhB,CAAL,EAAoC;AAClC,qBAAO,KAAK+T,oBAAL,EAAP,CADkC,CAElC;AACD;;AAED,mBAAO,IAAI,kCAAAne,UAAJ,CAAe,UAAAoe,QAAQ,EAAI;AAChC,kBAAI9d,OAAO,GAAG0d,IAAI,CAACK,KAAL,CAAW,OAAI,CAACjU,UAAL,CAAgB,SAAhB,CAAX,CAAd;AACAxS,qBAAO,CAACC,GAAR,CAAYyI,OAAZ;AACA,kBAAMlB,IAAI,GAAG;AACXhI,kBAAE,EAAO,OAAI,CAACgT,UAAL,CAAgB,IAAhB,CADE;AAEXlL,qBAAK,EAAI,OAAI,CAACkL,UAAL,CAAgB,OAAhB,CAFE;AAGXlK,oBAAI,EAAK,OAAI,CAACkK,UAAL,CAAgB,MAAhB,CAHE;AAIXjK,qBAAK,EAAI;AAAEA,uBAAK,EAAE,OAAI,CAACiK,UAAL,CAAgB,YAAhB;AAAT,iBAJE;AAKXhK,qBAAK,EAAI4d,IAAI,CAACK,KAAL,CAAW,OAAI,CAACjU,UAAL,CAAgB,OAAhB,CAAX,CALE;AAMX/J,uBAAO,EAAE2d,IAAI,CAACK,KAAL,CAAW,OAAI,CAACjU,UAAL,CAAgB,WAAhB,CAAX,CANE;AAOX9J,uBAAO,EAAE;AACP,wBAAeA,OAAO,CAAClJ,EADhB;AAEP,6BAAekJ,OAAO,CAACqK,OAFhB;AAGP,yBAAerK,OAAO,CAACgZ,GAHhB;AAIP,4BAAehZ,OAAO,CAACiZ,MAJhB;AAKP,2BAAejZ,OAAO,CAACmZ,KALhB;AAMP,wBAAenZ,OAAO,CAACkZ,EANhB;AAOP,6BAAelZ,OAAO,CAACoZ,OAPhB;AAQP,2BAAepZ,OAAO,CAACpB,KARhB;AASP,2BAAeoB,OAAO,CAACqZ,KAThB;AAUP,gCAAerZ,OAAO,CAACsZ,UAVhB;AAWP,gCAAetZ,OAAO,CAACuZ;AAXhB;AAPE,eAAb;AAqBEuE,sBAAQ,CAACpE,IAAT,CAAc5a,IAAd;AACAgf,sBAAQ,CAACE,QAAT;AACH,aA1BM,CAAP;AA4BD;AAED;;;;;;;iBAIO,8BAAqB;AAC1B,mBAAO,KAAKlE,IAAL,CAAUmE,GAAV,CAAmB,uDAAAjkB,WAAA,UAAqB,cAAxC,CAAP;AACD;AAED;;;;;;;;;;iBAOA,uBAAc;AACZ,gBAAG,KAAKgjB,kBAAR,EAA4B;AAC1B,kBAAIkB,OAAO,GAAG,IAAIZ,IAAJ,EAAd,CAD0B,CAE1B;;AAEA,kBAAIa,WAAW,GAAG,IAAIb,IAAJ,CAASL,cAAc,CAACmB,OAAf,CAAuB,QAAvB,CAAT,CAAlB,CAJ0B,CAK1B;AACA;;AAEA,kBAAGF,OAAO,CAACV,WAAR,KAAwBW,WAAW,CAACX,WAAZ,EAA3B,EAAsD;AACpDlmB,uBAAO,CAACC,GAAR,CAAY,UAAZ;AACA,qBAAK8mB,eAAL;AACA,uBAAO,KAAP;AACD,eAJD,MAIM,IAAGH,OAAO,CAACI,QAAR,KAAqBH,WAAW,CAACG,QAAZ,EAAxB,EAAgD;AACpDhnB,uBAAO,CAACC,GAAR,CAAY,UAAZ;AACA,qBAAK8mB,eAAL;AACA,uBAAO,KAAP;AACD,eAJK,MAIA,IAAGH,OAAO,CAACK,MAAR,KAAmBJ,WAAW,CAACI,MAAZ,EAAtB,EAA4C;AAChDjnB,uBAAO,CAACC,GAAR,CAAY,UAAZ;AACA,qBAAK8mB,eAAL;AACA,uBAAO,KAAP;AACD;;AAED,kBAAIG,OAAO,GAAON,OAAO,CAACO,QAAR,KAAmB,GAAnB,GAAuBP,OAAO,CAACQ,UAAR,EAAvB,GAA4C,GAA5C,GAAgDR,OAAO,CAACS,UAAR,EAAlE;AACA,kBAAIC,WAAW,GAAGT,WAAW,CAACM,QAAZ,KAAuB,GAAvB,GAA2BN,WAAW,CAACO,UAAZ,EAA3B,GAAoD,GAApD,GAAwDP,WAAW,CAACQ,UAAZ,EAA1E,CAvB0B,CAwB1B;;AACA,kBAAIE,MAAM,GAAG,iCAAb;;AACA,kBAAIC,QAAQ,CAACN,OAAO,CAACO,OAAR,CAAgBF,MAAhB,EAAwB,QAAxB,CAAD,CAAR,GAA8CC,QAAQ,CAACF,WAAW,CAAEG,OAAb,CAAqBF,MAArB,EAA6B,QAA7B,CAAD,CAA1D,EAAmG;AACjGvnB,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBinB,OAAxB,EAAiCI,WAAjC;AACA,qBAAKP,eAAL;AACA,uBAAO,KAAP;AACD;AACF;;AAED,mBAAO,IAAP;AACD;;;iBAED,2BAAe;AACb,iBAAK7E,eAAL,CAAqBE,IAArB,GADa,CAEb;;AACA,iBAAKviB,KAAL,CAAWS,QAAX,CAAoB,IAAI,0EAAJ,EAApB;AACD;AAED;;;;;;;iBAIO,gCAAuB;AAE5B,mBAAO,IAAI,kCAAA8H,UAAJ,CAAe,UAAAoe,QAAQ,EAAI;AAChC,kBAAMhf,IAAI,GAAG;AACXF,qBAAK,EAAE,IADI;AAEXgB,oBAAI,EAAE,IAFK;AAGXC,qBAAK,EAAE;AAAEA,uBAAK,EAAE;AAAT,iBAHI;AAIXC,qBAAK,EAAE,IAJI;AAKXC,uBAAO,EAAE;AALE,eAAb;AAOA+d,sBAAQ,CAACpE,IAAT,CAAc5a,IAAd,EARgC,CAQX;AACrB;;AACAgf,sBAAQ,CAACE,QAAT,GAVgC,CAUX;AACrB;AACD,aAZM,CAAP;AAcD,W,CAED;;;;iBACO,oBAAW3G,GAAX,EAAwB;AAC7B,mBAAO4F,cAAc,CAACmB,OAAf,CAAuB/G,GAAvB,CAAP;AACD;AAED;;;;;;iBAGO,mBAAU9b,IAAV,EAAwB;AAC7B,gBAAIyjB,KAAK,GAAG,KAAZ;;AAEA,gBAAI,KAAKC,WAAL,EAAJ,EAAwB;AAEtB,mBAAK9nB,KAAL,CAAWoS,MAAX,CAAkB,UAAAnJ,KAAK;AAAA,uBAAIA,KAAK,CAACoJ,SAAN,CAAgB1K,IAAhB,CAAqBgB,KAAzB;AAAA,eAAvB,EACCxB,IADD,CACM,gDAAAqb,SAAA,EAAU,KAAKH,eAAf,CADN,EAEC9hB,SAFD,CAEW,UAAAwnB,IAAI,EAAI;AACjB,oBAAGA,IAAH,EAAQ;AACR;AACIA,sBAAI,CAACnM,OAAL,CAAa,UAACoM,SAAD,EAAqB;AAChC,wBAAIA,SAAS,CAAC5jB,IAAV,KAAmBA,IAAvB,EAA6B;AAC3ByjB,2BAAK,GAAG,IAAR;AACD;AACF,mBAJD;AAKH;AACF,eAXD;AAaD,aAfD,MAeK,CACH;AACD;;AAED,mBAAOA,KAAP;AACD;;;iBAED,uBAAc;AACZ;AACA,iBAAKxF,eAAL,CAAqBE,IAArB;AACD;;;;;;;yBAtNUoD,e,EAAc,sG,EAAA,oH;AAAA,O;;;eAAdA,e;AAAc,iBAAdA,eAAc,K;AAAA,oBAFb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCSD3jB,a;;;;;yBAAAA,a;AAAY,O;;;cAAZA;;;mBAFA,CAAE,oDAAAyf,SAAF;;;;4HAEAzf,a,EAAY;AAAA,yBAbrB,wCAAA4a,wBAaqB,EAZrB,wCAAAE,sBAYqB,EAXrB,wCAAAvB,kBAWqB,EAVrB,0DAAA6C,eAUqB;AAVN,oBAGf,wCAAAxB,wBAHe,EAIf,wCAAAE,sBAJe,EAKf,wCAAAvB,kBALe,EAMf,0DAAA6C,eANe;AAUM,S;AAJN,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZJ;;AACP;;AACE;;AACA;;AACF;;AACJ;;;;UAGSnb,iB;AAKT,mCAAoBhD,MAApB,EAA8DgoB,QAA9D,EAAkF;AAAA;;AAAA;;AAA9D,eAAAhoB,MAAA,GAAAA,MAAA;AAA0C,eAAAgoB,QAAA,GAAAA,QAAA;AAJvD,eAAAC,gBAAA,GAAmB,IAAnB;AAES,eAAAC,eAAA,GAAkB,yBAAlB;AAGd,eAAKloB,MAAL,CAAYwc,MAAZ,CAAmBlc,SAAnB,CAA6B,UAAAmc,KAAK,EAAI;AAClC,gBAAIA,KAAK,YAAY,6CAAA0L,eAArB,EAAsC;AAClC,qBAAI,CAACF,gBAAL,GAAwB,IAAxB;AACH,aAFD,MAEO,IAAKxL,KAAK,YAAY,6CAAAC,aAAjB,IAAkCD,KAAK,YAAY,6CAAA2L,gBAAnD,IAAuE3L,KAAK,YAAY,6CAAA4L,eAA7F,EAA8G;AACjH,qBAAI,CAACJ,gBAAL,GAAwB,KAAxB;AACH;AACJ,WAND,EAMG,YAAM;AACL,mBAAI,CAACA,gBAAL,GAAwB,KAAxB;AACH,WARD;AASD;;;;iBAED,uBAAW;AACP,iBAAKA,gBAAL,GAAwB,KAAxB;AACH;;;;;;;yBAnBQjlB,iB,EAAgB,oH,EAAA,gEAKmB,6CAAAslB,QALnB,C;AAK2B,O;;;cAL3CtlB,iB;AAAgB,oC;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,mI;AAAA;AAAA;AARd;;;;AAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIhC,UAAMZ,SAAQ,GAA+B;AAClDgQ,iBAAS,EAAE,uEADuC;AAElDmW,iBAAS,EAAE,6DAFuC;AAGlDC,kBAAU,EAAE;AAHsC,OAA7C;;AAMA,eAASC,OAAT,CAAgB1f,OAAhB,EAAgD;AACrD,eAAO,UAASC,KAAT,EAA0B3B,MAA1B,EAAqC;AAC1CnH,iBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB6I,KAArB;AACA9I,iBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBkH,MAAtB,EAF0C,CAK1C;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAO0B,OAAO,CAACC,KAAD,EAAQ3B,MAAR,CAAd;AACD,SAbD;AAcD;;AAEM,UAAMhF,aAAY,GAA4B,CAAC,uDAAAO,WAAA,WAAD,GACjD,CAAC6lB,OAAD,CADiD,GAEjD,EAFG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCjCP;AACA;AACA;AACA;;;AAEO,UAAM7lB,YAAW,GAAG;AACzB8lB,kBAAU,EAAE,KADa;;AAGzB;;AAGAC,cAAM,EAAE,+BANiB;AAOzBC,kBAAU,EAAE,uCAPa;AAQzBC,cAAM,EAAE;AACN5I,aAAG,EAAE,sBADC;AAEN6I,iBAAO,EAAE;AAFH,SARiB;AAazBC,sBAAc,EAAE;AACdC,gBAAM,EAAE,yCADM;AAEdC,oBAAU,EAAE,0BAFE;AAGdC,mBAAS,EAAE,UAHG;AAIdC,uBAAa,EAAE,sBAJD;AAKdC,2BAAiB,EAAE,eALL;AAMdC,eAAK,EAAE,4CANO;AAOdC,uBAAa,EAAE;AAPD;AAbS,OAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCP,UAAI,uDAAA1mB,WAAA,WAAJ,EAA4B;AAC1B,uDAAA2mB,cAAA;AACD;;AAED,6DAAAC,eAAA,GAAyBC,eAAzB,CAAyC,6CAAA3oB,SAAzC,WACS,UAAA4oB,GAAG;AAAA,eAAIxpB,OAAO,CAACC,GAAR,CAAYupB,GAAZ,CAAJ;AAAA,OADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport {Component, OnDestroy, OnInit} from '@angular/core';\n\nimport { Subscription } from 'Rxjs';\n\nimport { Store } from '@ngrx/store';\nimport * as userReducer from './authentication/store/user.reducer';\nimport * as userActions from './authentication/store/user.actions';\nimport { UserState } from './store/app.state';\nimport { AuthService } from './shared/services/auth.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit, OnDestroy {\n  loggedInSub: Subscription;\n\n  constructor (\n    private auth: AuthService,\n    private store: Store<UserState>,\n    private router: Router,\n    private _location: Location\n  ) {}\n\n  ngOnInit() {\n    console.log('app comp init!');\n    this.loggedInSub = this.auth.loggedIn$.subscribe(\n      loggedIn => {\n        this.store.dispatch(new userActions.GetUserSettings());\n        // redirect if logged in\n        // this._location.back();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.loggedInSub.unsubscribe();\n  }\n}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<router-outlet><app-spinner></app-spinner></router-outlet>\n\n","import * as $ from 'jquery';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { AppRoutes } from './app.routing';\nimport { AppComponent } from './app.component';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FullComponent } from './layouts/full/full.component';\nimport { AppBlankComponent } from './layouts/blank/blank.component';\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DemoMaterialModule} from './demo-material-module';\n\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\n\nimport { SharedModule } from './shared/shared.module';\nimport { SpinnerComponent } from './shared/spinner.component';\nimport { HttpInterceptorService} from './shared/services/http-interceptor.service';\nimport { ConfirmDialogComponent } from './shared/component/confirm-dialog/confirm-dialog.component';\nimport { ViewNewsDialogComponent } from './shared/component/view-news-dialog/view-news-dialog.component';\nimport { AddTickerNewsDialogComponent } from './shared/component/add-ticker-news-dialog/add-ticker-news-dialog.component';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { reducers, metaReducers } from './store/app.reducer';\nimport { UserEffects } from './authentication/store/user.effects';\n\nimport { ContextMenuModule } from 'ngx-contextmenu';\n//import { SmsComponent } from './sms/sms.component';\n\nimport { environment } from \"../environments/environment\";\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFirestoreModule } from \"@angular/fire/firestore\";\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n  wheelSpeed: 2,\n  wheelPropagation: true,\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FullComponent,\n    AppHeaderComponent,\n    SpinnerComponent,\n    AppBlankComponent,\n    AppSidebarComponent,\n    ConfirmDialogComponent,\n    ViewNewsDialogComponent,\n    AddTickerNewsDialogComponent,\n    //SmsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    DemoMaterialModule,\n    FormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    PerfectScrollbarModule,\n    SharedModule,\n    RouterModule.forRoot(AppRoutes, { relativeLinkResolution: 'legacy' }),\n    StoreModule.forRoot(reducers, {metaReducers}),\n    EffectsModule.forRoot([UserEffects]),\n    StoreDevtoolsModule.instrument({maxAge: 50}),\n    ContextMenuModule.forRoot(),\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpInterceptorService,\n      multi: true,\n    },\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n    }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ConfirmDialogComponent, ViewNewsDialogComponent, AddTickerNewsDialogComponent]\n})\nexport class AppModule { }\n\n","import { Routes, CanActivate } from '@angular/router';\n\nimport { FullComponent } from './layouts/full/full.component';\nimport { AppBlankComponent } from './layouts/blank/blank.component';\nimport { AuthGuard } from './shared/services/auth.guard';\n\nexport const AppRoutes: Routes = [{\n  path: '',\n  component: FullComponent,\n  children: [\n    {\n      path: 'admin',\n      loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule),\n      // canActivate: [AuthGuard],\n      // data: { isPublic: false, role: 'editor' }\n  },{\n    path: '',\n    redirectTo: '/user',\n    pathMatch: 'full'\n  },{\n    path: 'user',\n    loadChildren: () => import('./dashboards/dashboards.module').then(m => m.DashboardsModule),\n    canActivate: [AuthGuard],\n    data: { isPublic: true, role: 'user' }\n  },\n  {\n    path: 'editor',\n    loadChildren: () => import('./editor/editor.module').then(m => m.EditorModule),\n    // canActivate: [AuthGuard],\n    // data: { isPublic: false, role: 'editor' }\n  },\n  {\n    path: 'news',\n    loadChildren: () => import('./news/news.module').then(m => m.NewsModule),\n    canActivate: [AuthGuard],\n    data: { isPublic: false, role: 'journalist' }\n  },\n  {\n    path: 'control',\n    loadChildren: () => import('./control/control.module').then(m => m.ControlModule),\n    canActivate: [AuthGuard],\n    data: { isPublic: false, role: 'journalist' }\n  },\n  {\n    path: 'material',\n    loadChildren: () => import('./material-component/material.module').then(m => m.MaterialComponentsModule)\n  },\n  {\n    path: 'apps',\n    loadChildren: () => import('./apps/apps.module').then(m => m.AppsModule)\n  },\n  {\n    path: 'forms',\n    loadChildren: () => import('./forms/forms.module').then(m => m.FormModule)\n  },\n  {\n    path: 'tables',\n    loadChildren: () => import('./tables/tables.module').then(m => m.TablesModule)\n  },\n  {\n    path: 'datatables',\n    loadChildren: () => import('./datatables/datatables.module').then(m => m.DataTablesModule)\n  },\n  {\n    path: 'pages',\n    loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule)\n  },\n  {\n    path: 'widgets',\n    loadChildren: () => import('./widgets/widgets.module').then(m => m.WidgetsModule)\n  },\n  {\n    path: 'charts',\n    loadChildren: () => import('./charts/chartslib.module').then(m => m.ChartslibModule)\n  }]\n},\n  {\n  path: '',\n  component: AppBlankComponent,\n  children: [{\n    path: 'authentication',\n    loadChildren: () => import('./authentication/authentication.module').then(m => m.AuthenticationModule)\n  }],\n  data: { isPublic: true }\n},\n  {\n  path: '**',\n  redirectTo: 'authentication/404'\n}];\n","import { Action } from '@ngrx/store';\nimport { User } from './../../shared/models/user';\n\nexport const USER_LOGIN = '[User] USER_LOGIN';\nexport const USER_LOGIN_SUCCESS = '[User] USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_ERROR = '[User] USER_LOGIN_ERROR';\n\nexport const USER_LOGOUT = '[User] USER_LOGOUT';\nexport const USER_LOGOUT_SUCCESS = '[User] USER_LOGOUT_SUCCESS';\nexport const USER_LOGOUT_ERROR = '[User] USER_LOGOUT_ERROR';\n\nexport const USER_GET_SETTINGS = '[User] USER_GET_SETTINGS';\nexport const USER_GET_SETTINGS_SUCCESS = '[User] USER_GET_SETTINGS_SUCCESS';\nexport const USER_GET_SETTINGS_ERROR = '[User] USER_GET_SETTINGS_ERROR';\n\nexport const SERVER_USER_GET_SETTINGS = '[User] SERVER_USER_GET_SETTINGS';\nexport const SERVER_USER_GET_SETTINGS_SUCCESS = '[User] SERVER_USER_GET_SETTINGS_SUCCESS';\nexport const SERVER_USER_GET_SETTINGS_ERROR = '[User] SERVER_USER_GET_SETTINGS_ERROR';\n\nexport const USER_GET_ROLES = '[User] USER_GET_ROLES';\n\nexport const USER_401 = '[User] USER_401';\n\n\nexport class UserLogin implements Action {\n  readonly type = USER_LOGIN;\n  constructor(public payload: any) {}\n}\n\nexport class UserLoginSuccess implements Action {\n  readonly type = USER_LOGIN_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class UserLoginError implements Action {\n  readonly type = USER_LOGIN_ERROR;\n}\n\nexport class UserLogout implements Action {\n  readonly type = USER_LOGOUT;\n}\n\nexport class UserLogoutSuccess implements Action {\n  readonly type = USER_LOGOUT_SUCCESS;\n  //constructor(public payload: User) {}\n}\n\nexport class UserLogoutError implements Action {\n  readonly type = USER_LOGOUT_ERROR;\n}\n\nexport class User401 implements Action {\n  readonly type = USER_401;\n}\n\nexport class GetUserSettings implements Action {\n  readonly type = USER_GET_SETTINGS;\n}\n\nexport class GetUserSettingsSuccess implements Action {\n  readonly type = USER_GET_SETTINGS_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class GetUserSettingsError implements Action {\n  readonly type = USER_GET_SETTINGS_ERROR;\n}\n\nexport class GetUserRoles implements Action {\n  readonly type = USER_GET_ROLES;\n}\n\n\n\n/**\n * Fetch user settings from server\n */\nexport class ServerGetUserSettings implements Action {\n  readonly type = SERVER_USER_GET_SETTINGS;\n}\n\nexport class ServerGetUserSettingsSuccess implements Action {\n  readonly type = SERVER_USER_GET_SETTINGS_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class ServerGetUserSettingsError implements Action {\n  readonly type = SERVER_USER_GET_SETTINGS_ERROR;\n}\n\nexport type All = UserLogin | UserLoginSuccess | UserLoginError | GetUserSettings |\n                  GetUserSettingsSuccess | GetUserSettingsError | GetUserRoles;\n","\nimport {of as observableOf,  Observable } from 'rxjs';\n\nimport {catchError, switchMap, map} from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport {Effect, Actions, ofType} from '@ngrx/effects';\n\n\n\n\n\nimport { AuthService } from '../../shared/services/auth.service';\nimport * as UserActions from './user.actions';\nimport * as NewsActions from '../../news/store/news.actions';\nimport * as EditorActions from '../../editor/store/news-editor.actions';\nimport { SessionService } from '../../shared/services/session.service';\nimport { User } from '../../shared/models/user';\n\n@Injectable()\nexport class UserEffects {\n\n  constructor(\n    private actions: Actions,\n    private authService: AuthService,\n    private sessionService: SessionService,\n    private store: Store<any>,\n    private router: Router\n  ) {}\n\n  @Effect()\n  LogIn: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.USER_LOGIN),\n      map((action: UserActions.UserLogin) => action.payload),\n      switchMap(payload => {\n        return this.authService.signIn(payload.email, payload.password).pipe(\n          map((user: User) => {\n            // console.log(user);\n            this.authService.doSignIn(user);\n            return new UserActions.UserLoginSuccess(user);\n          }),\n          catchError((error) => {\n            console.log(error);\n            return observableOf(new UserActions.UserLoginError());\n          }),);\n      }),\n    );\n\n  @Effect({ dispatch: false })\n  LogInSuccess: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.USER_LOGIN_SUCCESS),\n      map((action: UserActions.UserLoginSuccess) => action.payload),\n      map((user: User) => {\n        // console.log(user);\n        if (this.sessionService.saveSession(user)) {\n          // this.router.navigate(['/dashboard/default']);\n          // this._location.back();\n        }\n        // localStorage.setItem('token', user.user.token.token);\n\n      }),\n    );\n\n  @Effect()\n  GetUserSettings: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.USER_GET_SETTINGS),\n      map((action: UserActions.GetUserSettings) => action),\n      switchMap(payload => {\n        return this.sessionService.getUserSetting()\n          .pipe(\n            map((user: User) => {\n              return new UserActions.GetUserSettingsSuccess(user);\n            }),\n            catchError((error) => {\n              console.log(error);\n              return observableOf(new UserActions.GetUserSettingsError());\n            })\n          )\n      }),\n    );\n\n  @Effect()\n  ServerGetUserSettings: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.SERVER_USER_GET_SETTINGS),\n      map((action: UserActions.ServerGetUserSettings) => action),\n      switchMap(payload => {\n        return this.sessionService.updateUserSettings().pipe(\n          map((user: User) => {\n            this.sessionService.saveSession(user);\n            return new UserActions.ServerGetUserSettingsSuccess(user);\n          }),\n          catchError((error) => {\n            console.log(error);\n            return observableOf(new UserActions.ServerGetUserSettingsError());\n          }),);\n      }),\n    );\n\n  @Effect()\n  UserLogout: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.USER_LOGOUT),\n      map((action: UserActions.UserLogout) => action),\n      switchMap(payload => {\n        this.store.dispatch(new NewsActions.LogoutNewsState());\n        this.store.dispatch(new EditorActions.LogoutEditorState());\n        this.authService.doSignOut();\n\n        this.router.navigate(['/authentication/login']);\n        // return Observable.of(new UserActions.UserLogoutSuccess(this.sessionService.getUserLogoutSetting()));\n        return observableOf(new UserActions.UserLogoutSuccess());\n      }),\n    );\n\n  UserLogoutSuccess: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.USER_LOGOUT_SUCCESS),\n      map((action: UserActions.UserLogoutSuccess) => {\n        //location.reload();\n        this.router.navigate(['/authentication/login']);\n      })\n    );\n\n  @Effect()\n  User401: Observable<any> = this.actions.\n    pipe(\n        ofType(UserActions.USER_401),\n        switchMap(payload => {\n          console.warn('401 user found!!');\n          return observableOf(new UserActions.UserLogout());\n        })\n    );\n\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { Action } from '@ngrx/store';\n\nimport * as UserActions from './user.actions';\nimport { UserState } from '../../store/app.state';\nimport { User, Profile } from '../../shared/models/user';\nimport { NewsState } from './../../store/app.state';\n\nconst myuser: UserState = { user: { email: null, name: null, token: {token: null}, roles: null, roles_a: null, profile: new Profile() } };\nexport const initialState: UserState = myuser;\n\nexport type Actions = UserActions.All;\nexport interface ActionWithPayload<T> extends Action {\n  payload: T;\n}\n\nexport function reducer(state = initialState, action: ActionWithPayload<any>): UserState {\n  switch (action.type) {\n    case UserActions.USER_LOGIN: {\n      return {\n        ...state\n      };\n    }\n\n    case UserActions.USER_LOGIN_SUCCESS: {\n      return {\n        ...state,\n        user: action.payload,\n      };\n    }\n\n    case UserActions.USER_GET_SETTINGS: {\n      return {\n        ...state\n      };\n    }\n\n    case UserActions.USER_GET_SETTINGS_SUCCESS: {\n      return {\n        ...state,\n        user: action.payload,\n      };\n    }\n\n    case UserActions.USER_LOGOUT: {\n      // return {\n      //   ...state\n      // };\n      return initialState;\n    }\n\n    case UserActions.USER_LOGOUT_SUCCESS: {\n      // return {\n      //   // ...state,\n      //   // user: action.payload,\n      //   user: { email: null, name: null, token: {token: null}, roles: null, roles_a: null }\n      // };\n      return initialState;\n    }\n\n\n\n\n    case UserActions.SERVER_USER_GET_SETTINGS: {\n      return {\n        ...state\n      };\n    }\n\n    case UserActions.SERVER_USER_GET_SETTINGS_SUCCESS: {\n      return {\n        ...state,\n        user: action.payload,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const getUserState = createFeatureSelector<UserState>('userState');\n\nexport const getUser = createSelector(\n  getUserState,\n  (state: UserState) => state.user\n);\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\n\n/**\n * NgModule that includes all Material modules that are required to serve the demo-app.\n */\n@NgModule({\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatTableModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatNativeDateModule,\n    CdkTableModule,\n    A11yModule,\n    BidiModule,\n    CdkAccordionModule,\n    ObserversModule,\n    OverlayModule,\n    PlatformModule,\n    PortalModule,\n  ]\n})\nexport class DemoMaterialModule {}\n","import { RejectNotes } from './../notes-dialog/notes-dialog.component';\nimport { Action } from '@ngrx/store';\nimport { News, NewsList, ListOrder } from './../../news/models/news';\n\nexport const GET_REVIEW_NEWS = '[NewsEditor] GET_REVIEW_NEWS';\nexport const GET_REVIEW_NEWS_SUCCESS = '[NewsEditor] GET_REVIEW_NEWS_SUCCESS';\nexport const GET_REVIEW_NEWS_ERROR = '[NewsEditor] GET_REVIEW_NEWS_ERROR';\n\nexport const APPROVE_NEWS = '[NewsEditor] APPROVE_NEWS';\nexport const APPROVE_NEWS_SUCCESS = '[NewsEditor] APPROVE_NEWS_SUCCESS';\nexport const APPROVE_NEWS_ERROR = '[NewsEditor] APPROVE_NEWS_ERROR';\n\nexport const REJECT_NEWS = '[NewsEditor] REJECT_NEWS';\nexport const REJECT_NEWS_SUCCESS = '[NewsEditor] REJECT_NEWS_SUCCESS';\nexport const REJECT_NEWS_ERROR = '[NewsEditor] REJECT_NEWS_ERROR';\n\n\n/**\n * ------------------------------------------------------------------------------> LIST ACTIONS\n */\nexport const GET_LISTS = '[NewsEditor] GET_LISTS';\nexport const GET_LISTS_SUCCESS = '[NewsEditor] GET_LISTS_SUCCESS';\nexport const GET_LISTS_ERROR = '[NewsEditor] GET_LISTS_ERROR';\n\nexport const GET_LISTS_BY_DATE = '[NewsEditor] GET_LISTS_BY_DATE';\nexport const GET_LISTS_BY_DATE_SUCCESS = '[NewsEditor] GET_LISTS_BY_DATE_SUCCESS';\nexport const GET_LISTS_BY_DATE_ERROR = '[NewsEditor] GET_LISTS_BY_DATE_ERROR';\n\nexport const ADD_TO_LIST = '[NewsEditor] ADD_TO_LISTS';\nexport const ADD_TO_LIST_SUCCESS = '[NewsEditor] ADD_TO_LISTS_SUCCESS';\nexport const ADD_TO_LIST_ERROR = '[NewsEditor] ADD_TO_LISTS_ERROR';\n\nexport const REMOVE_FROM_LIST = '[NewsEditor] REMOVE_FROM_LIST';\nexport const REMOVE_FROM_LIST_SUCCESS = '[NewsEditor] REMOVE_FROM_LIST_SUCCESS';\nexport const REMOVE_FROM_LIST_ERROR = '[NewsEditor] REMOVE_FROM_LIST_ERROR';\n\nexport const UPDATE_LIST_ORDER = '[NewsEditor] UPDATE_LIST_ORDER';\nexport const UPDATE_LIST_ORDER_SUCCESS = '[NewsEditor] UPDATE_LIST_ORDER_SUCCESS';\nexport const UPDATE_LIST_ORDER_ERROR = '[NewsEditor] UPDATE_LIST_ORDER_ERROR';\n\nexport const UPDATE_SELECTED_LIST = '[NewsEditor] UPDATE_SELECTED_LIST';\nexport const UPDATE_SELECTED_LIST_SUCCESS = '[NewsEditor] UPDATE_SELECTED_LIST_SUCCESS';\nexport const UPDATE_SELECTED_LIST_ERROR = '[NewsEditor] UPDATE_SELECTED_LIST_ERROR';\n\nexport const GET_SELECTED_LIST = '[NewsEditor] GET_SELECTED_LIST';\nexport const GET_SELECTED_LIST_SUCCESS = '[NewsEditor] GET_SELECTED_LIST_SUCCESS';\nexport const GET_SELECTED_LIST_ERROR = '[NewsEditor] GET_SELECTED_LIST_ERROR';\n\n\nexport const CHANGE_REVIEW_NEWS_LOADED = '[NewsEditor] CHANGE_REVIEW_NEWS_LOADED';\nexport const LOGOUT_EDITOR_STATE = '[NewsEditor] LOGOUT_EDITOR_STATE';\n\n/**\n * ---------------------------------------------------------------------------------------------------\n * ------------------------------------------------------------------------------> REVIEW NEWS ACTIONS\n * ---------------------------------------------------------------------------------------------------\n *\n *\n * ------------------------------------------------------------------------------> GET REVIEW NEWS\n */\nexport class GetReviewNews implements Action {\n  readonly type = GET_REVIEW_NEWS;\n  constructor() {}\n}\n\nexport class GetReviewNewsSuccess implements Action {\n  readonly type = GET_REVIEW_NEWS_SUCCESS;\n  constructor(public payload: News[]) {}\n}\n\nexport class GetReviewNewsError implements Action {\n  readonly type = GET_REVIEW_NEWS_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> APPROVE NEWS\n */\nexport class ApproveNews implements Action {\n  readonly type = APPROVE_NEWS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class ApproveNewsSuccess implements Action {\n  readonly type = APPROVE_NEWS_SUCCESS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class ApproveNewsError implements Action {\n  readonly type = APPROVE_NEWS_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> REJECT NEWS\n */\nexport class RejectNews implements Action {\n  readonly type = REJECT_NEWS;\n  constructor(public payload: RejectNotes ) {}\n}\n\nexport class RejectNewsSuccess implements Action {\n  readonly type = REJECT_NEWS_SUCCESS;\n  constructor(public payload: RejectNotes) {}\n}\n\nexport class RejectNewsError implements Action {\n  readonly type = REJECT_NEWS_ERROR;\n}\n\n\n/**\n * -------------------------------------------------------------------------------------------------\n * ------------------------------------------------------------------------------> NEWS LIST ACTIONS\n * -------------------------------------------------------------------------------------------------\n *\n *\n * ------------------------------------------------------------------------------> GET LISTS\n */\nexport class GetLists implements Action {\n  readonly type = GET_LISTS;\n  constructor() {};\n}\n\nexport class GetListsSuccess implements Action {\n  readonly type = GET_LISTS_SUCCESS;\n  constructor(public payload: NewsList[]) {}\n}\n\nexport class GetListsError implements Action {\n  readonly type = GET_LISTS_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> GET LISTS BY DATE\n */\nexport class GetListsByDate implements Action {\n  readonly type = GET_LISTS_BY_DATE;\n  constructor(public payload: { date: string }) {};\n}\n\nexport class GetListsByDateSuccess implements Action {\n  readonly type = GET_LISTS_BY_DATE_SUCCESS;\n  constructor(public payload: NewsList[]) {}\n}\n\nexport class GetListsByDateError implements Action {\n  readonly type = GET_LISTS_BY_DATE_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> ADD NEWS TO LIST\n */\nexport class AddToList implements Action {\n  readonly type = ADD_TO_LIST;\n  constructor(public payload: { list_id: number, news_id: number }) {};\n}\n\nexport class AddToListSuccess implements Action {\n  readonly type = ADD_TO_LIST_SUCCESS;\n  constructor(public payload: News[]) {}\n}\n\nexport class AddToListError implements Action {\n  readonly type = ADD_TO_LIST_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> REMOVE NEWS FROM LIST\n */\nexport class RemoveFromList implements Action {\n  readonly type = REMOVE_FROM_LIST;\n  constructor(public payload: { id: number }) {};\n}\n\nexport class RemoveFromListSuccess implements Action {\n  readonly type = REMOVE_FROM_LIST_SUCCESS;\n  constructor(public payload: News[]) {}\n}\n\nexport class RemoveFromListError implements Action {\n  readonly type = REMOVE_FROM_LIST_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> UPDATE LIST ORDER\n */\nexport class UpdateListOrder implements Action {\n  readonly type = UPDATE_LIST_ORDER;\n  constructor(public payload: ListOrder[]) {};\n}\n\nexport class UpdateListOrderSuccess implements Action {\n  readonly type = UPDATE_LIST_ORDER_SUCCESS;\n  constructor(public payload: News[]) {}\n}\n\nexport class UpdateListOrderError implements Action {\n  readonly type = UPDATE_LIST_ORDER_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> GET SELECTED LIST\n */\nexport class GetSelectedList implements Action {\n  readonly type = GET_SELECTED_LIST;\n  // constructor(public payload: { list_id: number }) {};\n}\n\nexport class GetSelectedListSuccess implements Action {\n  readonly type = GET_SELECTED_LIST_SUCCESS;\n  constructor(public payload: { list_id: number }) {}\n}\n\nexport class GetSelectedListError implements Action {\n  readonly type = GET_SELECTED_LIST_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> UPDATE SELECTED LIST\n */\nexport class UpdateSelectedList implements Action {\n  readonly type = UPDATE_SELECTED_LIST;\n  constructor(public payload: { list_id: number }) {};\n}\n\nexport class UpdateSelectedListSuccess implements Action {\n  readonly type = UPDATE_SELECTED_LIST_SUCCESS;\n  constructor(public payload: { list_id: number }) {}\n}\n\nexport class UpdateSelectedListError implements Action {\n  readonly type = UPDATE_SELECTED_LIST_ERROR;\n}\n\n\n\n\nexport class LogoutEditorState implements Action {\n  readonly type = LOGOUT_EDITOR_STATE;\n}\n\nexport class UpdateReviewNewsLoaded implements Action {\n  readonly type = CHANGE_REVIEW_NEWS_LOADED;\n  constructor(public payload: { isLoaded: boolean }) {}\n}\n\nexport type All = GetReviewNews | GetReviewNewsSuccess | GetReviewNewsError |\n                  ApproveNews | ApproveNewsSuccess | ApproveNewsError |\n                  RejectNews | RejectNewsSuccess | RejectNewsError;\n","import { News } from '../../news/models/news';\nimport { Action, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as EditorActions from './news-editor.actions';\nimport { ReviewNewsState } from '../../store/app.state';\n\n\n\n\n\nexport const initialState: ReviewNewsState = {\n    news: [],\n    isLoaded: false,\n    // pageState: {currentPage: null, perPage: null, lastPages: null, totalResults: null},\n    lists: [],\n    isListLoaded: false,\n    selectedList: null,\n  };\n\nexport type Actions = EditorActions.All;\nexport interface ActionWithPayload<T> extends Action {\n  payload: T;\n}\n\nexport function reducer(state = initialState, action: ActionWithPayload<any>): ReviewNewsState {\n  console.log(state, action);\n\n  switch (action.type) {\n\n    /**\n     * --------------------------------------------------------------------------------------> REVIEW NEWS\n     */\n    case EditorActions.GET_REVIEW_NEWS: {\n      return {\n        ...state,\n        news: [],\n        isLoaded: false\n      };\n    }\n\n    case EditorActions.GET_REVIEW_NEWS_SUCCESS: {\n      return {\n        ...state,\n        news: action.payload,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> APPROVE NEWS\n     */\n    case EditorActions.APPROVE_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n\n    case EditorActions.APPROVE_NEWS_SUCCESS: {\n      return {\n        ...state,\n        news: [\n         ...(state.news.filter( (news) => news.id !== action.payload.id )),\n        ],\n        isLoaded: true\n      };\n    }\n\n    case EditorActions.APPROVE_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> REJECT NEWS\n     */\n    case EditorActions.REJECT_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n\n    case EditorActions.REJECT_NEWS_SUCCESS: {\n      return {\n        ...state,\n        news: [\n         ...(state.news.filter( (news) => news.id !== action.payload.news_id )),\n        ],\n        isLoaded: true\n      };\n    }\n\n    case EditorActions.REJECT_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------------------------------------------\n     * --------------------------------------------------------------------------------------> NEWS LIST ACTIONS\n     * ---------------------------------------------------------------------------------------------------------\n     */\n    /**\n     * --------------------------------------------------------------------------------------> GET LIST\n     */\n    case EditorActions.GET_LISTS: {\n      return {\n        ...state,\n        isListLoaded: false\n      }\n    }\n\n    case EditorActions.GET_LISTS_SUCCESS: {\n      return {\n        ...state,\n        lists: action.payload,\n        isListLoaded: true\n      }\n    }\n\n    case EditorActions.GET_LISTS_ERROR: {\n      return {\n        ...state,\n        isListLoaded: true\n      }\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> GET LIST BY DATE\n     */\n\n    case EditorActions.GET_LISTS_BY_DATE: {\n      return {\n        ...state,\n        isListLoaded: false\n      }\n    }\n\n    case EditorActions.GET_LISTS_BY_DATE_SUCCESS: {\n      return {\n        ...state,\n        lists: action.payload,\n        isListLoaded: true\n      }\n    }\n\n    case EditorActions.GET_LISTS_BY_DATE_ERROR: {\n      return {\n        ...state,\n        isListLoaded: true\n      }\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> ADD TO LIST\n     */\n    case EditorActions.ADD_TO_LIST: {\n      return {\n        ...state,\n        isListLoaded: true\n      }\n    }\n\n    case EditorActions.ADD_TO_LIST_SUCCESS: {\n      return {\n        ...state,\n        isListLoaded: false,\n        // lists: [action.payload, ...state.lists]\n        // lists: [\n        //   ...(state.lists.filter( (list) => list.id !== action.payload.id )),\n        // ]\n\n        // lists: state.lists.map(\n        //   list => list.id === action.payload.id ? {\n        //       ...list,\n        //       lists: action.payload,\n        //   } : list,\n        // ),\n        // lists: {\n        //   ...state.lists,\n        //   [action.payload.id] : action.payload\n        // }\n        lists: action.payload\n      }\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> REMOVE FROM LIST\n     */\n    case EditorActions.REMOVE_FROM_LIST: {\n      return {\n        ...state,\n        isListLoaded: true\n      }\n    }\n\n    case EditorActions.REMOVE_FROM_LIST_SUCCESS: {\n      return {\n        ...state,\n        isListLoaded: false,\n        lists: action.payload\n      }\n    }\n    /**\n     * --------------------------------------------------------------------------------------> UPDATE LIST ORDER\n     */\n    case EditorActions.UPDATE_LIST_ORDER: {\n      return {\n        ...state,\n        isListLoaded: true\n      }\n    }\n\n    case EditorActions.UPDATE_LIST_ORDER_SUCCESS: {\n      return {\n        ...state,\n        isListLoaded: false,\n        lists: action.payload\n      }\n    }\n    /**\n     * --------------------------------------------------------------------------------------> GET SELECTED LIST\n     */\n    case EditorActions.GET_SELECTED_LIST_SUCCESS: {\n      return {\n        ...state,\n        selectedList: action.payload.list_id\n      }\n    }\n    /**\n     * --------------------------------------------------------------------------------------> UPDATE SELECTED LIST\n     */\n    case EditorActions.UPDATE_SELECTED_LIST_SUCCESS: {\n      return {\n        ...state,\n        selectedList: action.payload.list_id\n      }\n    }\n\n\n    /**\n     * --------------------------------------------------------------------------------------> OTHER ACTIONS\n     */\n    case EditorActions.CHANGE_REVIEW_NEWS_LOADED: {\n      return {\n        ...state,\n        isLoaded: action.payload.isLoaded\n      };\n    }\n\n    case EditorActions.LOGOUT_EDITOR_STATE: {\n      return initialState;\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const getReviewNewsState = createFeatureSelector<ReviewNewsState>('ReviewNewsState');\n\nexport const getMyNews = createSelector(\n  getReviewNewsState,\n  (state: ReviewNewsState) => state.news\n);\n\nexport const getNewsById = (newsBox, id) => createSelector(getReviewNewsState, (allItems) => {\n  if (allItems) {\n    return allItems[newsBox].find(item => {\n      return item.id === id;\n    });\n  } else {\n    return {};\n  }\n});\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-blank',\n  templateUrl: './blank.component.html',\n  styleUrls: []\n})\nexport class AppBlankComponent {}\n","<!-- ============================================================== -->\n<!-- Only router without any element -->\n<!-- ============================================================== -->\n<mat-sidenav-container>\n  <router-outlet></router-outlet>\n</mat-sidenav-container>","import * as $ from 'jquery';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Router } from '@angular/router';\nimport {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  ViewChild,\n  HostListener,\n  Directive,\n  AfterViewInit\n} from '@angular/core';\nimport { MenuItems } from '../../shared/menu-items/menu-items';\nimport { AppHeaderComponent } from './header/header.component';\nimport { AppSidebarComponent } from './sidebar/sidebar.component';\n\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\n/** @title Responsive sidenav */\n@Component({\n  selector: 'app-full-layout',\n  templateUrl: 'full.component.html',\n  styleUrls: []\n})\nexport class FullComponent implements OnDestroy, AfterViewInit {\n  mobileQuery: MediaQueryList;\n  dir = 'ltr';\n  green: boolean;\n  blue: boolean;\n  dark: boolean;\n  minisidebar: boolean;\n  boxed: boolean;\n  danger: boolean;\n  showHide: boolean;\n  sidebarOpened;\n\n  public config: PerfectScrollbarConfigInterface = {};\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public menuItems: MenuItems\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n  ngAfterViewInit() {\n    // This is for the topbar search\n    (<any>$('.srh-btn, .cl-srh-btn')).on('click', function() {\n      (<any>$('.app-search')).toggle(200);\n    });\n    // This is for the megamenu\n  }\n\n  // Mini sidebar\n}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<div class=\"main-container\" [dir]=\"dir\" [ngClass]=\"{'minisidebar': minisidebar, 'boxed': boxed, 'danger': danger, 'blue': blue, 'green': green, 'dark': dark }\">\n    <!-- ============================================================== -->\n    <!-- Topbar - style you can find in header.scss -->\n    <!-- ============================================================== -->\n    <mat-toolbar color=\"primary\" class=\"topbar telative\">\n        <!-- ============================================================== -->\n        <!-- Logo - style you can find in header.scss -->\n        <!-- ============================================================== -->\n        <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" href=\"/\">\n                <!-- Logo icon -->\n                <b>\n                    <!--You can put here icon as well // <i class=\"wi wi-sunset\"></i> //-->\n                    <!-- Dark Logo icon -->\n                    <img src=\"assets/images/logo-icon.png\" alt=\"homepage\" class=\"dark-logo\">\n                    <!-- Light Logo icon -->\n                    <img src=\"assets/images/logo-light-icon.png\" alt=\"homepage\" class=\"light-logo\">\n                </b>\n                <!--End Logo icon -->\n                <!-- Logo text -->\n                <span fxShow=\"false\" fxShow.gt-xs>\n                    <!-- dark Logo text -->\n                    <img src=\"assets/images/logo-text.png\" alt=\"homepage\" class=\"dark-logo\">\n                    <!-- Light Logo text -->\n                    <img src=\"assets/images/logo-light-text.png\" class=\"light-logo\" alt=\"homepage\">\n                </span>\n            </a>\n        </div>\n        <!-- ============================================================== -->\n        <!-- sidebar toggle -->\n        <!-- ============================================================== -->\n\n        <button mat-icon-button (click)=\"snav.toggle()\" value=\"sidebarclosed\">\n            <mat-icon>menu</mat-icon>\n        </button>\n        <!-- ============================================================== -->\n        <!-- Search - style you can find in header.scss -->\n        <!-- ============================================================== -->\n        <!-- <button mat-icon-button class=\"srh-btn\">\n            <mat-icon>search</mat-icon>\n        </button>\n        <form class=\"app-search\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search &amp; enter\">\n            <a class=\"cl-srh-btn\">\n                <i class=\"ti-close\"></i>\n            </a>\n        </form> -->\n        <span fxFlex></span>\n        <!-- ============================================================== -->\n        <!-- app header component - style you can find in header.scss / header.component.ts-->\n        <!-- ============================================================== -->\n        <app-header></app-header>\n        <!-- ============================================================== -->\n        <!-- Right sidebar toggle - style you can find in rightsidebar.component.scss -->\n        <!-- ============================================================== -->\n        <!-- <button (click)=\"end.toggle()\" mat-icon-button class=\"ml-xs overflow-visible\">\n            <mat-icon>settings</mat-icon>\n        </button> -->\n    </mat-toolbar>\n    <!-- ============================================================== -->\n    <!-- End Topbar - style you can find in pages.scss -->\n    <!-- ============================================================== -->\n    <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 0 : 0\"\n        [ngClass]=\"{'minisidebar': minisidebar}\">\n        <!-- ============================================================== -->\n        <!-- Sidebar - style you can find in sidebar.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav #snav id=\"snav\" class=\"pl-xs\" [mode]=\"mobileQuery.matches ? 'side' : 'over'\" fixedTopGap=\"0\"\n            [opened]=\"mobileQuery.matches\" [disableClose]=\"mobileQuery.matches\" (open)=\"sidebarOpened = true\" (close)=\"sidebarOpened = false\"\n            [perfectScrollbar]=\"config\">\n\n            <app-sidebar class=\"app-sidebar\"></app-sidebar>\n\n        </mat-sidenav>\n        <!-- ============================================================== -->\n        <!-- Sidebar - style you can find in sidebar.scss -->\n        <!-- ============================================================== -->\n        <!-- ============================================================== -->\n        <!-- Right Sidebar - style you can find in rightsidebar.component.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav #end position=\"end\" class=\"chat-panel\" mode=\"over\" opened=\"false\">\n            <div class=\"scroll\">\n                <mat-nav-list>\n\n                    <h3 mat-subheader class=\"text-uppercase font-weight-bold\">Settings</h3>\n                    <mat-list-item>\n                        <mat-slide-toggle color=\"warn\" (change)=\"dir = (dir == 'rtl' ? 'ltr' : 'rtl')\">RTL</mat-slide-toggle>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <mat-slide-toggle color=\"warn\" [(ngModel)]=\"boxed\">Boxed Layout</mat-slide-toggle>\n                    </mat-list-item>\n                    <!--<mat-list-item>\n                    <mat-slide-toggle [(ngModel)]=\"minisidebar\">Mini Sidebar</mat-slide-toggle>\n                  </mat-list-item>    -->\n                    <mat-divider></mat-divider>\n                    <h3 mat-subheader class=\"text-uppercase font-weight-bold\">Colors</h3>\n                    <mat-list-item>\n                        <mat-checkbox color=\"warn\" [(ngModel)]=\"danger\" (change)=\"green = blue = false\" class=\"text-danger\">Red</mat-checkbox>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <mat-checkbox color=\"warn\" [(ngModel)]=\"green\" (change)=\"danger = blue = false\" class=\"text-megna\">Teal\n                            Green</mat-checkbox>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <mat-checkbox color=\"warn\" [(ngModel)]=\"blue\" (change)=\"green = danger = false\" class=\"text-info\">Blue</mat-checkbox>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <mat-checkbox color=\"warn\" [(ngModel)]=\"dark\" (change)=\"green = blue = danger = false\">Dark</mat-checkbox>\n                    </mat-list-item>\n                </mat-nav-list>\n            </div>\n        </mat-sidenav>\n\n        <!-- ============================================================== -->\n        <!-- Page container - style you can find in pages.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav-content class=\"page-wrapper\">\n\n                <div class=\"page-content\">\n\n                    <router-outlet>\n                        <app-spinner></app-spinner>\n                    </router-outlet>\n\n                </div>\n\n        </mat-sidenav-content>\n        <!-- ============================================================== -->\n        <!-- Page container - style you can find in pages.scss -->\n        <!-- ============================================================== -->\n    </mat-sidenav-container>\n</div>\n","<!-- ============================================================== -->\n<!-- Display login button if user is not logged in -->\n<!-- ============================================================== -->\n<button mat-icon-button alt=\"log in\" class=\"m-r-5\" *ngIf=\"!logged_in\" [routerLink]=\"['/authentication/login/']\">\n  <mat-icon style=\"color:#ffffff\">account_circle</mat-icon>\n</button>\n\n<!-- ============================================================== -->\n<!-- Notification - style you can find in header.scss -->\n<!-- ============================================================== -->\n<!-- <button [matMenuTriggerFor]=\"notification\" mat-icon-button class=\"m-r-10\">\n    <mat-icon>message</mat-icon>\n    <div class=\"notify\">\n        <span class=\"heartbit\"></span>\n        <span class=\"point\"></span>\n    </div>\n</button>\n<mat-menu #notification=\"matMenu\" class=\"mymegamenu\">\n    <div class=\"mailbox\">\n        <ul>\n            <li>\n                <div class=\"drop-title\">Notifications</div>\n            </li>\n            <li>\n                <div class=\"message-center\">\n                    <perfect-scrollbar [config]=\"config\">\n\n                        <a href=\"#\" *ngFor=\"let notification of notifications\">\n                            <div class=\"round {{notification.round}}\">\n                                <i class=\"{{notification.icon}}\"></i>\n                            </div>\n                            <div class=\"mail-content\">\n                                <h5>{{notification.title}}</h5>\n                                <span class=\"mail-desc\">{{notification.subject}}</span>\n                                <span class=\"time\">{{notification.time}}</span>\n                            </div>\n                        </a>\n\n                    </perfect-scrollbar>\n                </div>\n            </li>\n\n        </ul>\n    </div>\n</mat-menu> -->\n<!-- ============================================================== -->\n<!-- Profile - style you can find in header.scss -->\n<!-- ============================================================== -->\n<button [matMenuTriggerFor]=\"message\" mat-icon-button class=\"m-r-10\">\n    <!-- <mat-icon>email</mat-icon> -->\n    <!-- <div class=\"notify\">\n        <span class=\"heartbit\"></span>\n        <span class=\"point\"></span>\n    </div> -->\n</button>\n<mat-menu #message=\"matMenu\" class=\"mymessage\">\n    <div class=\"mailbox\">\n        <ul>\n            <!-- <li>\n                <div class=\"drop-title\">You have 4 new Mymessages</div>\n            </li> -->\n            <li>\n                <div class=\"message-center\">\n                    <perfect-scrollbar [config]=\"config\">\n\n                        <a href=\"#\" *ngFor=\"let mymessage of chatArray\">\n                            <div class=\"user-img\">\n                                <img src=\"{{storagePath}}profiles/user/{{mymessage.userimage}}\" alt=\"user\" class=\"img-circle\" width=\"40\">\n                                <!-- <span class=\"profile-status {{mymessage.status}} pull-right\"></span> -->\n                            </div>\n                            <div class=\"mail-content\">\n                                <h5>{{mymessage.username}}</h5>\n                                <span class=\"mail-desc\">{{mymessage.text}}</span>\n                                <!-- <span class=\"time\">{{mymessage.time}}</span> -->\n                            </div>\n                        </a>\n                    </perfect-scrollbar>\n                </div>\n            </li>\n        </ul>\n    </div>\n</mat-menu>\n<!-- ============================================================== -->\n<!-- Profile - style you can find in header.scss -->\n<!-- ============================================================== -->\n<button [matMenuTriggerFor]=\"profile\" mat-icon-button class=\"m-r-5\" *ngIf=\"logged_in\">\n  <mat-icon>account_circle</mat-icon>\n</button>\n<mat-menu #profile=\"matMenu\" class=\"mymegamenu\">\n    <!-- <button mat-menu-item>\n        <mat-icon>settings</mat-icon> Settings </button> -->\n    <button mat-menu-item [routerLink]=\"['/user/profile']\">\n        <mat-icon>account_box</mat-icon> Profile </button>\n    <!-- <button mat-menu-item>\n        <mat-icon>notifications_off</mat-icon> Disable notifications </button> -->\n    <button mat-menu-item (click)=\"logOut()\">\n        <mat-icon>exit_to_app</mat-icon> Sign Out </button>\n</mat-menu>\n","import { Component } from '@angular/core';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { Subscription } from 'Rxjs';\n\nimport { AuthService } from '../../../shared/services/auth.service';\n\nimport * as userActions from '../../../authentication/store/user.actions';\nimport { UserState } from '../../../store/app.state';\nimport { Store } from '@ngrx/store';\nimport { Router } from '../../../../../node_modules/@angular/router';\n\nimport { DsService } from '../../../shared/services/ds.service';\nimport { User } from '../../../shared/models/user';\nimport { environment } from '../../../../environments/environment';\ndeclare var deepstream: any;\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: []\n})\nexport class AppHeaderComponent {\n  public config: PerfectScrollbarConfigInterface = {};\n  loggedInSub: Subscription;\n  logged_in = false;\n  show_top_icons = false;\n  public userData: User = new User();\n\n\n\n\n  storagePath: string = null;\n  title = 'deepChat';\n  username;\n  text: string = 'first chat record';\n  chats;\n  chatArray = [];\n\n\n  constructor(\n    private auth: AuthService,\n    private store: Store<UserState>,\n    private ds: DsService,\n    private store2: Store<any>,\n  ) {\n    this.storagePath = environment.storageUrl;\n\n    // get user authentication status\n    this.loggedInSub = this.auth.loggedIn$.subscribe( loggedIn => this.logged_in = loggedIn );\n\n    this.store2.select(store => store.UserState).subscribe(userdata => {\n      this.userData = userdata.user;\n      //this.chantInit();\n    });\n  }\n\n  logOut(): void {\n    // this.auth.doSignOut();\n    this.store.dispatch(new userActions.UserLogout());\n\n  }\n\n\n    // chantInit(){\n    //   this.username = this.userData.email;\n    //   // Login without credentials\n    //   this.ds.login(null, this.loginHandler);\n\n    //   this.chats = this.ds.getList('chats');\n    //   this.chats.on('entry-added', recordName => {\n    //     this.ds.getRecord( recordName ).whenReady( record => {\n    //       record.subscribe( (data) => {\n    //         if(data.username && data.text) {\n    //           // Update bindable property\n    //           this.chatArray.push(data);\n    //           console.log(this.chatArray)\n    //         }\n    //       }, true );\n    //     });\n    //   })\n\n\n    //   const recordName = 'chat/' + this.ds.dsInstance.getUid();\n\n    //   const chatRecord = this.ds.getRecord(recordName);\n    //   chatRecord.set({uid: this.userData.id ,username: this.username, text: this.text, userimage: this.userData.profile.profilepic});\n    //   this.text = '';\n    //   // Update the chats list\n    //   this.chats.addEntry(recordName);\n    // }\n\n\n    // loginHandler(success, data) {\n    //   console.log('logged in', success, data);\n    // }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n// This is for Notifications\n  // notifications: Object[] = [\n  //   {\n  //     round: 'round-danger',\n  //     icon: 'ti-link',\n  //     title: 'Launch Admin',\n  //     subject: 'Just see the my new admin!',\n  //     time: '9:30 AM'\n  //   },\n  //   {\n  //     round: 'round-success',\n  //     icon: 'ti-calendar',\n  //     title: 'Event today',\n  //     subject: 'Just a reminder that you have event',\n  //     time: '9:10 AM'\n  //   },\n  //   {\n  //     round: 'round-info',\n  //     icon: 'ti-settings',\n  //     title: 'Settings',\n  //     subject: 'You can customize this template as you want',\n  //     time: '9:08 AM'\n  //   },\n  //   {\n  //     round: 'round-primary',\n  //     icon: 'ti-user',\n  //     title: 'Pavan kumar',\n  //     subject: 'Just see the my admin!',\n  //     time: '9:00 AM'\n  //   }\n  // ];\n\n  // This is for Mymessages\n  // mymessages: Object[] = [\n  //   {\n  //     useravatar: 'assets/images/users/1.jpg',\n  //     status: 'online',\n  //     from: 'Pavan kumar',\n  //     subject: 'Just see the my admin!',\n  //     time: '9:30 AM'\n  //   },\n  //   {\n  //     useravatar: 'assets/images/users/2.jpg',\n  //     status: 'busy',\n  //     from: 'Sonu Nigam',\n  //     subject: 'I have sung a song! See you at',\n  //     time: '9:10 AM'\n  //   },\n  //   {\n  //     useravatar: 'assets/images/users/2.jpg',\n  //     status: 'away',\n  //     from: 'Arijit Sinh',\n  //     subject: 'I am a singer!',\n  //     time: '9:08 AM'\n  //   },\n  //   {\n  //     useravatar: 'assets/images/users/4.jpg',\n  //     status: 'offline',\n  //     from: 'Pavan kumar',\n  //     subject: 'Just see the my admin!',\n  //     time: '9:00 AM'\n  //   }\n  // ];\n","<!-- ============================================================== -->\n<!-- sidebar -->\n<!-- ============================================================== -->\n<div class=\"user-profile\" style=\"background: url(assets/images/background/user-info.jpg) no-repeat;\">\n    <!-- User profile image -->\n    <div class=\"profile-img\" *ngIf=\"userData.id == null\">\n        <img src=\"{{storagePath+'profiles/default.jpg'}}\" alt=\"user\" *ngIf=\"userData == null\">\n    </div>\n    <div class=\"profile-img\" *ngIf=\"userData.id != null\">\n        <img src=\"{{storagePath+'profiles/user/'+userData.profile.profilepic}}\" alt=\"user\" *ngIf=\"userData.profile.profilepic\">\n    </div>\n    <!-- User profile text-->\n    <!-- ============================================================== -->\n    <!-- Profile - style you can find in header.scss -->\n    <!-- ============================================================== -->\n    <div class=\"profile-text\">\n        <a [matMenuTriggerFor]=\"sdprofile\" class=\"\" *ngIf=\"logged_in\"> {{ username }} <i class=\"ti-angle-down font-12 m-l-5\"></i></a>\n        <a class=\"\" *ngIf=\"!logged_in\"> {{ username }} </a>\n    </div>\n    <mat-menu #sdprofile=\"matMenu\" class=\"mymegamenu\">\n        <!-- <button mat-menu-item>\n            <mat-icon>settings</mat-icon> Settings </button> -->\n        <button mat-menu-item [routerLink]=\"['/user/profile']\">\n            <mat-icon>account_box</mat-icon> Profile </button>\n        <!--<button mat-menu-item>\n            <mat-icon>notifications_off</mat-icon> Disable notifications </button>-->\n        <button mat-menu-item (click)=\"logOut()\">\n            <mat-icon>exit_to_app</mat-icon> Sign Out </button>\n    </mat-menu>\n</div>\n\n<mat-nav-list appAccordion>\n    <!-- <div *ngIf=\"checkRole(menuitem.role)\"> -->\n    <mat-list-item appAccordionLink routerLinkActive=\"selected\" group=\"{{menuitem.state}}\" *ngFor=\"let menuitem of menuItems.getMenuitem()\">\n        <a class=\"\" appAccordionToggle [routerLink]=\"['/', menuitem.state]\" *ngIf=\"menuitem.type === 'link' && checkRole(menuitem.role)\">\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\n            <span>{{ menuitem.name }}</span>\n            <span fxFlex></span>\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\n        </a>\n\n        <a class=\"\" appAccordionToggle href=\"{{menuitem.state}}\" *ngIf=\"menuitem.type === 'extLink' && checkRole(menuitem.role)\">\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\n            <span>{{ menuitem.name }}</span>\n            <span fxFlex></span>\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\n        </a>\n        <a class=\"\" appAccordionToggle href=\"{{menuitem.state}}\" target=\"_blank\" *ngIf=\"menuitem.type === 'extTabLink' && checkRole(menuitem.role)\">\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\n            <span>{{ menuitem.name}}</span>\n            <span fxFlex></span>\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\n        </a>\n\n        <a class=\"\" appAccordionToggle href=\"javascript:;\" *ngIf=\"menuitem.type === 'sub' && checkRole(menuitem.role)\">\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\n            <span>{{ menuitem.name }}</span>\n            <span fxFlex></span>\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\n            <mat-icon class=\"dd-icon\">keyboard_arrow_down</mat-icon>\n        </a>\n        <mat-nav-list class=\"sub-item\" *ngIf=\"menuitem.type === 'sub' && checkRole(menuitem.role)\">\n            <mat-list-item *ngFor=\"let childitem of menuitem.children\" routerLinkActive=\"selected\">\n                <a [routerLink]=\"['/', menuitem.state, childitem.state ]\" *ngIf=\"childitem.type === 'link'\" class=\"relative\"\n                    routerLinkActive=\"selected\">{{ childitem.name}}</a>\n            </mat-list-item>\n            <mat-list-item *ngFor=\"let childitem of menuitem.children\">\n                <a class=\"\" href=\"javascript: void(0);\" *ngIf=\"childitem.type === 'subchild'\" (click)=\"clickEvent()\"\n                    [ngClass]=\"status ? 'selected' : ''\">\n                    <span>{{ childitem.name }}</span>\n                    <span fxFlex></span>\n                    <mat-icon class=\"dd-icon\">keyboard_arrow_down</mat-icon>\n                </a>\n                <mat-nav-list class=\"child-sub-item\" *ngIf=\"childitem.type === 'subchild'\">\n                    <mat-list-item *ngFor=\"let child of childitem.subchildren\" routerLinkActive=\"selected\">\n                        <a [routerLink]=\"['/', menuitem.state, childitem.state, child.state ]\" routerLinkActive=\"selected\">{{child.name}}</a>\n                    </mat-list-item>\n                </mat-nav-list>\n            </mat-list-item>\n\n        </mat-nav-list>\n\n        <div class=\"saperator text-muted\" *ngIf=\"menuitem.type === 'saperator'\">\n            <span>{{ menuitem.name }}</span>\n        </div>\n    </mat-list-item>\n    <!-- </div> -->\n</mat-nav-list>\n","import { ChangeDetectorRef, Component, NgZone, OnInit, OnDestroy, ViewChild, HostListener, Directive, AfterViewInit } from '@angular/core';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { MenuItems } from '../../../shared/menu-items/menu-items';\nimport { SessionService } from '../../../shared/services/session.service';\nimport { Subscription } from 'Rxjs';\nimport { AuthService } from '../../../shared/services/auth.service';\n\nimport { Store } from '@ngrx/store';\nimport { UserState } from '../../../store/app.state';\nimport * as userActions from '../../../authentication/store/user.actions';\nimport { User } from '../../../shared/models/user';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: []\n})\nexport class AppSidebarComponent implements OnInit, OnDestroy {\n  public username = 'Guest';\n  public config: PerfectScrollbarConfigInterface = {};\n  mobileQuery: MediaQueryList;\n  loggedInSub: Subscription;\n  logged_in = false;\n\n  public userData: User = new User();\n  public storagePath: string;\n\n  private _mobileQueryListener: () => void;\n  status: boolean = false;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public menuItems: MenuItems,\n    private session: SessionService,\n    private auth: AuthService,\n    private store: Store<UserState>,\n    private store2: Store<any>,\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n\n    // get user authentication status\n    this.loggedInSub = this.auth.loggedIn$.subscribe( loggedIn => this.logged_in = loggedIn );\n    this.username = session.getSession('name');\n  }\n\n  ngOnInit() {\n    this.storagePath = environment.storageUrl;\n    this.store2.select(store => store.UserState).subscribe(userdata => {\n      this.userData = userdata.user;\n    });\n  }\n\n\n  clickEvent() {\n    this.status = !this.status;\n  }\n\n  subclickEvent() {\n    this.status = true;\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  checkRole(role: string) {\n    return this.session.checkRole(role);\n  }\n\n  logOut(): void {\n    this.store.dispatch(new userActions.UserLogout());\n  }\n}\n","export class News {\n  public id?: number;\n  public news_name?: string;\n  public heading?: string;\n  public body?: string;\n  public newsstatus_id?: number;\n  public user_id?: number;\n  public language?: Language;\n  public newsbar?: NewsBar[];\n  public tickernews?: TickerNews[];\n  public newsstatus?: Newsstatus;\n  public newsnotes?: NewNotes[];\n  public draft?: boolean;\n  public loading?: boolean;\n  public list_news?: ListNews[];\n\n  constructor() {\n    this.news_name = '';\n    this.heading = '';\n    this.body = '';\n    this.newsstatus_id = 0;\n    this.user_id = 0;\n    this.language = new Language('', '');\n    this.newsbar = [new NewsBar('', '')];\n    this.draft = false;\n  }\n\n  static generateMockNews(): News {\n    return new News();\n  }\n\n}\n\nexport class NewsBar {\n\n  constructor(\n    public title: string,\n    public detail: string,\n    public id?: number,\n    public news_id?: number,\n    public created_at?: string,\n    public updated_a?: string\n  ) { }\n\n}\n\nexport class TickerNews {\n\n  constructor(\n    public news: string\n  ) { }\n\n}\n\nexport class Language {\n\n  constructor(\n    public language_code: string,\n    public language?: string,\n    public id?: number\n  ) {}\n\n}\n\nexport class Newsstatus {\n\n  constructor(\n    public id: string,\n    public status: string,\n    public detail: string,\n  ) {}\n\n}\n\nexport class NewNotes {\n\n  constructor(\n    public id: number,\n    public news_id: number,\n    public note: string,\n  ) {}\n\n}\n\nexport class NewsList {\n\n  public id: number;\n  public name: string;\n  public created_at: string;\n  public updated_at: string;\n  public list_news: ListNews[];\n\n  constructor() {\n    this.id = null;\n    this.name = '';\n    this.created_at = '';\n    this.updated_at = '';\n    this.list_news = [new ListNews()];\n  }\n\n}\n\nexport class ListNews {\n\n  public id: number;\n  public news_list_id: number;\n  public news_id: number;\n  public created_at: string;\n  public updated_at: string;\n  public news: News;\n\n  constructor() {\n    this.id = null;\n    this.news_list_id = null;\n    this.news_id = null;\n    this.created_at = null;\n    this.updated_at = null;\n    this.news = new News();\n  }\n\n}\n\nexport class ListOrder{\n  list_id: number;\n  news_id: number;\n  order: number;\n\n  constructor ( list_id, news_id, order ) {\n    this.list_id  = list_id;\n    this.news_id  = news_id;\n    this.order    = order;\n  }\n}\n\nexport class Ticker {\n  public id?: number;\n  public name?: string;\n  public color?: string;\n  public separator?: string;\n  public enabled?: number;\n  public tickernews?: TickersNews[];\n  public created_at?: string;\n  public updated_at?: string;\n\n  constructor() {\n    this.name = '';\n  }\n}\n\nexport class TickersNews {\n  public id?: number;\n  public news: string;\n  public name?: string;\n  public language_id?: number;\n  public enabled?: number;\n  public ticker_id?: number;\n  public language?: Language;\n  public created_at?: string;\n  public updated_at?: string;\n\n  constructor() {\n    this.news = '';\n    this.language = new Language('', '');\n  }\n}\n\n\n\nexport class JournalistDashboard {\n  public news_numbers?: JournalistDashboardNewsNumbers;\n  public lists?: NewsList[];\n\n  constructor() {\n    this.news_numbers = new JournalistDashboardNewsNumbers();\n    this.lists = [];\n  }\n}\nexport class JournalistDashboardNewsNumbers {\n  public my: number;\n  public reject: number;\n  public approved: number;\n  public in_review: number;\n\n  constructor() {\n    this.my = 0;\n    this.reject = 0;\n    this.approved = 0;\n    this.in_review = 0;\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { News, Ticker, TickersNews } from './../../news/models/news';\n\nexport const GET_A_NEWS = '[News] GET_A_NEWS';\nexport const GET_A_NEWS_SUCCESS = '[News] GET_A_NEWS_SUCCESS';\nexport const GET_A_NEWS_ERROR = '[News] GET_A_NEWS_ERROR';\n\nexport const GET_MY_NEWS = '[News] GET_MY_NEWS';\nexport const GET_MY_NEWS_SUCCESS = '[News] GET_MY_NEWS_SUCCESS';\nexport const GET_MY_NEWS_ERROR = '[News] GET_MY_NEWS_ERROR';\n\nexport const GET_TRASH_NEWS = '[News] GET_TRASH_NEWS';\nexport const GET_TRASH_NEWS_SUCCESS = '[News] GET_TRASH_NEWS_SUCCESS';\nexport const GET_TRASH_NEWS_ERROR = '[News] GET_TRASH_NEWS_ERROR';\n\nexport const DELETE_NEWS = '[News] DELETE_NEWS';\nexport const DELETE_NEWS_SUCCESS = '[News] DELETE_NEWS_SUCCESS';\nexport const DELETE_NEWS_ERROR = '[News] DELETE_NEWS_ERROR';\n\nexport const RESTORE_NEWS = '[News] RESTORE_NEWS';\nexport const RESTORE_NEWS_SUCCESS = '[News] RESTORE_NEWS_SUCCESS';\nexport const RESTORE_NEWS_ERROR = '[News] RESTORE_NEWS_ERROR';\n\nexport const CHANGE_NEWS_LOADED = '[News] CHANGE_NEWS_LOADED';\nexport const CHANGE_MY_NEWS_LOADED = '[News] CHANGE_MY_NEWS_LOADED';\nexport const CHANGE_TRASH_NEWS_LOADED = '[News] CHANGE_TRASH_NEWS_LOADED';\n\nexport const DESTROY_NEWS = '[News] DESTROY_NEWS';\nexport const DESTROY_NEWS_SUCCESS = '[News] DESTROY_NEWS_SUCCESS';\nexport const DESTROY_NEWS_ERROR = '[News] DESTROY_NEWS_ERROR';\n\nexport const GET_TICKERS = '[News] GET_TICKERS';\nexport const GET_TICKERS_SUCCESS = '[News] GET_TICKERS_SUCCESS';\nexport const GET_TICKERS_ERROR = '[News] GET_TICKERS_ERROR';\n\nexport const ADD_TICKER_NEWS = '[News] ADD_TICKER_NEWS';\nexport const ADD_TICKER_NEWS_SUCCESS = '[News] ADD_TICKER_NEWS_SUCCESS';\nexport const ADD_TICKER_NEWS_ERROR = '[News] ADD_TICKER_NEWS_ERROR';\n\nexport const APPROVE_TICKER_NEWS = '[News] APPROVE_TICKER_NEWS';\nexport const APPROVE_TICKER_NEWS_SUCCESS = '[News] APPROVE_TICKER_NEWS_SUCCESS';\nexport const APPROVE_TICKER_NEWS_ERROR = '[News] APPROVE_TICKER_NEWS_ERROR';\n\nexport const DISAPPROVE_TICKER_NEWS = '[News] DISAPPROVE_TICKER_NEWS';\nexport const DISAPPROVE_TICKER_NEWS_SUCCESS = '[News] DISAPPROVE_TICKER_NEWS_SUCCESS';\nexport const DISAPPROVE_TICKER_NEWS_ERROR = '[News] DISAPPROVE_TICKER_NEWS_ERROR';\n\nexport const DELETE_TICKER_NEWS = '[News] DELETE_TICKER_NEWS';\nexport const DELETE_TICKER_NEWS_SUCCESS = '[News] DELETE_TICKER_NEWS_SUCCESS';\nexport const DELETE_TICKER_NEWS_ERROR = '[News] DELETE_TICKER_NEWS_ERROR';\n\nexport const ADD_TICKER = '[News] ADD_TICKER';\nexport const ADD_TICKER_SUCCESS = '[News] ADD_TICKER_SUCCESS';\nexport const ADD_TICKER_ERROR = '[News] ADD_TICKER_ERROR';\n\nexport const LOGOUT_NEWS_STATE = '[News] LOGOUT_NEWS_STATE'; // clears news state when user logout is called\n\n\n/** -------------------------------------------------->MY NEWS LOADING ACTIONS */\nexport class GetMyNews implements Action {\n  readonly type = GET_MY_NEWS;\n  constructor(public payload: { perPage?: any, currentPage?: number }) {}\n}\n\nexport class GetMyNewsSuccess implements Action {\n  readonly type = GET_MY_NEWS_SUCCESS;\n  constructor(public payload: any) {}\n}\n\nexport class GetMyNewsError implements Action {\n  readonly type = GET_MY_NEWS_ERROR;\n}\n\n\n/** -------------------------------------------------->TRASH NEWS LOADING ACTIONS */\nexport class GetTrashNews implements Action {\n  readonly type = GET_TRASH_NEWS;\n  constructor(public payload: { perPage?: any, currentPage?: number }) {}\n}\n\nexport class GetTrashNewsSuccess implements Action {\n  readonly type = GET_TRASH_NEWS_SUCCESS;\n  constructor(public payload: any) {}\n}\n\nexport class GetTrashNewsError implements Action {\n  readonly type = GET_TRASH_NEWS_ERROR;\n}\n\n\n/**\n * -------------------------------------------------->GET ONE NEWS FROM STORE\n * --------------------------------------------------//TODO - remove later\n * */\nexport class GetNews implements Action {\n  readonly type = GET_A_NEWS;\n  constructor(public payload: string) {}\n}\n\nexport class GetNewsSuccess implements Action {\n  readonly type = GET_A_NEWS_SUCCESS;\n  constructor(public payload: News) {}\n}\n\nexport class GetNewsError implements Action {\n  readonly type = GET_A_NEWS_ERROR;\n}\n\n\n/**\n * -------------------------------------------------->NEWS DELETING (TRASHING) ACTIONS,\n * -------------------------------------------------->sets news status to deleted\n*/\nexport class DeleteNews implements Action {\n  readonly type = DELETE_NEWS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class DeleteNewsSuccess implements Action {\n  readonly type = DELETE_NEWS_SUCCESS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class DeleteNewsError implements Action {\n  readonly type = DELETE_NEWS_ERROR;\n}\n\n\n/** -------------------------------------------------->NEWS RESTORING ACTIONS */\nexport class RestoreNews implements Action {\n  readonly type = RESTORE_NEWS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class RestoreNewsSuccess implements Action {\n  readonly type = RESTORE_NEWS_SUCCESS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class RestoreNewsError implements Action {\n  readonly type = RESTORE_NEWS_ERROR;\n}\n\n\n/**\n * -------------------------------------------------->ACTIONS TO SET LOADING FLAGS\n * -------------------------------------------------->inorder for the controllers to load new news from api\n */\nexport class UpdateNewsLoaded implements Action {\n  readonly type = CHANGE_NEWS_LOADED;\n  constructor(public payload: { isLoaded: boolean }) {}\n}\nexport class UpdateMyNewsLoaded implements Action {\n  readonly type = CHANGE_MY_NEWS_LOADED;\n  constructor(public payload: { isMyNewsLoaded: boolean }) {}\n}\nexport class UpdateTrashNewsLoaded implements Action {\n  readonly type = CHANGE_TRASH_NEWS_LOADED;\n  constructor(public payload: { isTrashNewsLoaded: boolean }) {}\n}\n\n\n/**\n * -------------------------------------------------->ACTIONS FOR REMOVING NEWS FROM DATABASE\n * -------------------------------------------------->compleatly destroy them\n */\nexport class DestroyNews implements Action {\n  readonly type = DESTROY_NEWS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class DestroyNewsSuccess implements Action {\n  readonly type = DESTROY_NEWS_SUCCESS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class DestroyNewsError implements Action {\n  readonly type = DESTROY_NEWS_ERROR;\n}\n\n\n/**\n * -------------------------------------------------->TICKER ACTIONS\n * -------------------------------------------------->users cannot remove, disable or enable ticker or ticker news\n * -------------------------------------------------->users can add ticker news, but the added news is marked unpublished (an editor have to publish the news)\n */\n/**\n * -------------------------------------------------->GET TICKERS\n */\nexport class GetTickers implements Action {\n  readonly type = GET_TICKERS;\n}\n\nexport class GetTickersSuccess implements Action {\n  readonly type = GET_TICKERS_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class GetTickersError implements Action {\n  readonly type = GET_TICKERS_ERROR;\n}\n\n/**\n * -------------------------------------------------->ADD TICKER NEWS\n */\nexport class AddTickerNews implements Action {\n  readonly type = ADD_TICKER_NEWS;\n  constructor(public payload: TickersNews) {}\n}\n\nexport class AddTickerNewsSuccess implements Action {\n  readonly type = ADD_TICKER_NEWS_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class AddTickerNewsError implements Action {\n  readonly type = ADD_TICKER_NEWS_ERROR;\n}\n\n/**\n * -------------------------------------------------->APPROVE TICKER NEWS\n */\nexport class ApproveTickerNews implements Action {\n  readonly type = APPROVE_TICKER_NEWS;\n  constructor(public payload: { ticker_news_id: number }) {}\n}\n\nexport class ApproveTickerNewsSuccess implements Action {\n  readonly type = APPROVE_TICKER_NEWS_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class ApproveTickerNewsError implements Action {\n  readonly type = APPROVE_TICKER_NEWS_ERROR;\n}\n\n/**\n * -------------------------------------------------->DISAPPROVE TICKER NEWS\n */\nexport class DisApproveTickerNews implements Action {\n  readonly type = DISAPPROVE_TICKER_NEWS;\n  constructor(public payload: { ticker_news_id: number }) {}\n}\n\nexport class DisApproveTickerNewsSuccess implements Action {\n  readonly type = DISAPPROVE_TICKER_NEWS_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class DisApproveTickerNewsError implements Action {\n  readonly type = DISAPPROVE_TICKER_NEWS_ERROR;\n}\n\n/**\n * -------------------------------------------------->DELETE TICKER NEWS\n */\nexport class DeleteTickerNews implements Action {\n  readonly type = DELETE_TICKER_NEWS;\n  constructor(public payload: { ticker_news_id: number }) {}\n}\n\nexport class DeleteTickerNewsSuccess implements Action {\n  readonly type = DELETE_TICKER_NEWS_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class DeleteTickerNewsError implements Action {\n  readonly type = DELETE_TICKER_NEWS_ERROR;\n}\n\n/**\n * -------------------------------------------------->ADD A TICKER\n */\nexport class AddTicker implements Action {\n  readonly type = ADD_TICKER;\n  constructor(public payload: Ticker) {}\n}\n\nexport class AddTickerSuccess implements Action {\n  readonly type = ADD_TICKER_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class AddTickerError implements Action {\n  readonly type = ADD_TICKER_ERROR;\n}\n\n\n\n\n\n/** action called when user logs out of the system to clear the \"NewsState\" */\nexport class LogoutNewsState implements Action {\n  readonly type = LOGOUT_NEWS_STATE;\n}\n\nexport type All = GetNews | GetNewsSuccess | GetNewsError |\n                  GetMyNews | GetMyNewsSuccess | GetMyNewsError |\n                  DeleteNews | DeleteNewsSuccess | DeleteNewsError |\n                  DestroyNews | DestroyNewsSuccess | DestroyNewsError |\n                  UpdateNewsLoaded | UpdateMyNewsLoaded | UpdateTrashNewsLoaded |\n                  LogoutNewsState;\n","import { News } from './../models/news';\nimport { Action, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as NewsActions from './news.actions';\nimport { NewsState } from '../../store/app.state';\n\n\n\n\n\nexport const initialState: NewsState = {\n    myNews: [],\n    myNewsPageState: {currentPage: null, perPage: null, lastPages: null, totalResults: null},\n    trashNews: [],\n    trashNewsPageState: {currentPage: null, perPage: null, lastPages: null, totalResults: null},\n    isLoaded: false,\n    isMyNewsLoaded: false,\n    isTrashLoaded: false,\n    tickers: null,\n  };\n\nexport type Actions = NewsActions.All;\nexport interface ActionWithPayload<T> extends Action {\n  payload: T;\n}\n\nexport function reducer(state = initialState, action: ActionWithPayload<any>): NewsState {\n  console.log(state, action);\n  console.log('News REDUCER Call!')\n\n  switch (action.type) {\n\n    case NewsActions.GET_MY_NEWS: {\n      return {\n        ...state,\n        myNewsPageState: {\n          currentPage: action.payload.currentPage,\n          perPage: action.payload.perPage,\n        },\n        isMyNewsLoaded: false,\n        isLoaded: false\n      };\n    }\n\n    case NewsActions.GET_MY_NEWS_SUCCESS: {\n      return {\n        ...state,\n        myNews: action.payload.data,\n        myNewsPageState: {\n          currentPage: action.payload.current_page,\n          perPage: Number(action.payload.per_page),\n          lastPages: action.payload.last_page,\n          totalResults: action.payload.total,\n        },\n        isMyNewsLoaded: true,\n        isLoaded: true\n      };\n    }\n\n    case NewsActions.GET_TRASH_NEWS: {\n      return {\n        ...state,\n        trashNewsPageState: {\n          currentPage: action.payload.currentPage,\n          perPage: action.payload.perPage,\n        },\n        isTrashLoaded: false,\n        isLoaded: false\n      };\n    }\n\n    case NewsActions.GET_TRASH_NEWS_SUCCESS: {\n      return {\n        ...state,\n        trashNews: action.payload.data,\n        trashNewsPageState: {\n          currentPage: action.payload.current_page,\n          perPage: Number(action.payload.per_page),\n          lastPages: action.payload.last_page,\n          totalResults: action.payload.total,\n        },\n        isTrashLoaded: true,\n        isLoaded: true\n      };\n    }\n\n    case NewsActions.DELETE_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n\n    case NewsActions.DELETE_NEWS_SUCCESS: {\n      return {\n        ...state,\n        myNews: state.myNews.filter( (news) => news.id !== action.payload.id ),\n        trashNews: [\n          ...state.trashNews,\n          ...Object.assign(state.myNews.filter((news) => news.id === action.payload.id), { newsstatus: { status: 'deleted' } })\n        ],\n        isLoaded: true,\n        isMyNewsLoaded: false,\n        isTrashLoaded: false\n      };\n    }\n\n    case NewsActions.RESTORE_NEWS_SUCCESS: {\n      return {\n        ...state,\n        myNews: [\n          ...state.myNews,\n          ...(state.trashNews.filter( (news) => news.id === action.payload.id ))\n        ],\n        trashNews: state.trashNews.filter( (news) => news.id !== action.payload.id ),\n        isLoaded: false,\n        isMyNewsLoaded: false,\n        isTrashLoaded: false\n      };\n    }\n\n    /**\n     * ----------------------------------------------------------------------------------\n     * ---------------------------------------------------------------------> Ticker News\n     * ----------------------------------------------------------------------------------\n     */\n    /**\n     * ---------------------------------------------------------------------> GET TICKERS\n     */\n    case NewsActions.GET_TICKERS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.GET_TICKERS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.GET_TICKERS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------> ADD TICKER NEWS\n     */\n    case NewsActions.ADD_TICKER_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.ADD_TICKER_NEWS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.ADD_TICKER_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------> APPROVE TICKER NEWS\n     */\n    case NewsActions.APPROVE_TICKER_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.APPROVE_TICKER_NEWS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.APPROVE_TICKER_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------> DISAPPROVE TICKER NEWS\n     */\n    case NewsActions.DISAPPROVE_TICKER_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.DISAPPROVE_TICKER_NEWS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.DISAPPROVE_TICKER_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------> DELETE TICKER NEWS\n     */\n    case NewsActions.DELETE_TICKER_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.DELETE_TICKER_NEWS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.DELETE_TICKER_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------> ADD TICKER\n     */\n    case NewsActions.ADD_TICKER: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.ADD_TICKER_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.ADD_TICKER_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n\n\n    // when set to false myNews will be fetched from api\n    case NewsActions.CHANGE_NEWS_LOADED: {\n      return {\n        ...state,\n        isLoaded: action.payload.isLoaded\n      };\n    }\n    case NewsActions.CHANGE_MY_NEWS_LOADED: {\n      return {\n        ...state,\n        isMyNewsLoaded: action.payload.isMyNewsLoaded\n      };\n    }\n    case NewsActions.CHANGE_TRASH_NEWS_LOADED: {\n      return {\n        ...state,\n        isTrashLoaded: action.payload.isTrashNewsLoaded\n      };\n    }\n\n    case NewsActions.DESTROY_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n\n    case NewsActions.DESTROY_NEWS_SUCCESS: {\n      return {\n        ...state,\n        trashNews: state.trashNews.filter( (news) => news.id !== action.payload.id ),\n        isLoaded: true\n      };\n    }\n\n    case NewsActions.LOGOUT_NEWS_STATE: {\n      // return {\n      //   myNews: [],\n      //   myNewsPageState: {currentPage: null, perPage: null, lastPages: null, totalResults: null},\n      //   trashNews: [],\n      //   trashNewsPageState: {currentPage: null, perPage: null, lastPages: null, totalResults: null},\n      //   isLoaded: false,\n      //   isMyNewsLoaded: false,\n      //   isTrashLoaded: false\n      // };\n      return initialState;\n    }\n\n    default: {\n      return state;\n    }\n\n  }\n}\n\nexport const getNewsState = createFeatureSelector<NewsState>('NewsState');\n\nexport const getMyNews = createSelector(\n  getNewsState,\n  (state: NewsState) => state.myNews\n);\n\nexport const getNewsById = (newsBox, id) => createSelector(getNewsState, (allItems) => {\n  if (allItems) {\n    return allItems[newsBox].find(item => {\n      return item.id === id;\n    });\n  } else {\n    return {};\n  }\n});\n\nexport const getMyNewsByStatus = (status) =>\n  createSelector(getNewsState, state => state.myNews.filter(x => x.newsstatus.status === status));\n\n","\nimport {filter} from 'rxjs/operators';\nimport { Directive, OnInit, AfterViewInit, AfterContentChecked } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\n\n@Directive({\n  selector: '[appAccordion]',\n})\nexport class AccordionDirective implements AfterContentChecked {\n\n  protected navlinks: Array<AccordionLinkDirective> = [];\n\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link !== selectedLink) {\n        link.selected = false;\n      }\n    });\n  }\n\n  addLink(link: AccordionLinkDirective): void {\n    this.navlinks.push(link);\n  }\n\n  removeGroup(link: AccordionLinkDirective): void {\n    const index = this.navlinks.indexOf(link);\n    if (index !== -1) {\n      this.navlinks.splice(index, 1);\n    }\n  }\n\n  checkOpenLinks() {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link.group) {\n        const routeUrl = this.router.url;\n        const currentUrl = routeUrl.split('/');\n        if (currentUrl.indexOf( link.group ) > 0) {\n          link.selected = true;\n          this.closeOtherLinks(link);\n        }\n      }\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(e => this.checkOpenLinks());\n  }\n\n  constructor( private router: Router) {\n    setTimeout(() => this.checkOpenLinks());\n  }\n}\n","import { Directive, HostListener, Inject } from '@angular/core';\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\n\n@Directive({\n  selector: '[appAccordionToggle]'\n})\nexport class AccordionAnchorDirective {\n\n  protected navlink: AccordionLinkDirective;\n\n  constructor( @Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\n    this.navlink = navlink;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(e: any) {\n    this.navlink.toggle();\n  }\n}\n","import {\n  Directive, HostBinding, Inject, Input, OnInit, OnDestroy\n} from '@angular/core';\n\nimport { AccordionDirective } from './accordion.directive';\n\n@Directive({\n  selector: '[appAccordionLink]'\n})\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\n\n  @Input() public group: any;\n\n  @HostBinding('class.selected')\n  @Input()\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  set selected(value: boolean) {\n    this._selected = value;\n    if (value) {\n      this.nav.closeOtherLinks(this);\n    }\n  }\n\n  protected _selected: boolean;\n  protected nav: AccordionDirective;\n\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\n    this.nav = nav;\n  }\n\n  ngOnInit(): any {\n    this.nav.addLink(this);\n\n  }\n\n  ngOnDestroy(): any {\n    this.nav.removeGroup(this);\n  }\n\n  toggle(): any {\n    this.selected = !this.selected;\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { TickersNews } from '../../../news/models/news';\n\nimport { Store } from '@ngrx/store';\nimport * as newsActions from '../../../news/store/news.actions';\n\n@Component({\n  selector: 'app-add-ticker-news-dialog',\n  templateUrl: './add-ticker-news-dialog.component.html'\n})\nexport class AddTickerNewsDialogComponent implements OnInit {\n  onAdd = new EventEmitter();\n\n  tickerNews = new TickersNews();\n  @Input() public dhivehiEnabled = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddTickerNewsDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: TickersNews,\n    private store: Store<any>,\n  ) { }\n\n  ngOnInit() {\n    this.tickerNews.language.language_code = 'Dhv';\n    this.tickerNews.ticker_id = this.data.id;\n    this.tickerNews.enabled   = 0; // ticker news are disabled when added\n  }\n\n\n  changeLanguage() {\n    if (this.dhivehiEnabled) {\n      this.tickerNews.language.language_code = 'Dhv';\n    } else {\n      this.tickerNews.language.language_code = 'Eng';\n    }\n  }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n  doAdd(id?: number) {\n    this.closeDialog(true);\n    //this.onAdd.emit(this.tickerNews);\n    this.store.dispatch(new newsActions.AddTickerNews(this.tickerNews));\n    this.onAdd.emit();\n  }\n\n}\n","<!-- <h3 mat-dialog-title>Add News to {{data.name}}</h3> -->\n\n<mat-toolbar color=\"secondary\" class=\"no-shadow\">\n    <mat-toolbar-row>\n        <span fxFlex fxShow=\"false\" fxShow.gt-xs>Add News to {{data.name}}</span>\n        <div fxShow=\"false\" fxShow.gt-xs>\n            <mat-slide-toggle labelPosition=\"after\" color=\"secondary\" [(ngModel)]=\"dhivehiEnabled\" (ngModelChange)=\"changeLanguage()\">{{tickerNews.language.language_code}}</mat-slide-toggle>\n        </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n\n<div mat-dialog-content>\n  <!-- <div fxLayout=\"row\" fxLayoutWrap=\"wrap\"> -->\n      <!-- title column -->\n      <!-- <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n          Add News to {{data.name}}\n      </div> -->\n      <!-- hr column -->\n      <!-- <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n        <mat-divider></mat-divider>\n      </div> -->\n      <!-- column -->\n  <!-- </div> -->\n\n  <div style=\"margin-top:20px;\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Ticker News</mat-label>\n          <textarea matInput mat-autosize matAutosizeMinRows=\"5\" #dhvInput required\n            [appDnrmsThaana]=\"dhivehiEnabled\"\n            [(ngModel)]=\"tickerNews.news\"\n            name=\"dhvInput\"></textarea>\n        </mat-form-field>\n      </div>\n  </div>\n\n  <!-- <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n          <code>{{tickerNews|json}}</code>\n      </div>\n  </div> -->\n\n</div>\n<!-- actions column -->\n<div align=\"end\" mat-dialog-actions align=\"end\">\n  <button mat-button color=\"basic\" (click)=\"closeDialog(true)\">Cancel</button>\n  <button mat-raised-button color=\"primary\" (click)=\"doAdd(data.id)\">Add</button>\n\n  <!-- <button mat-button color=\"basic\" *ngIf=\"data.newsstatus.status != 'published' && data.newsstatus.status != 'deleted'\" routerLink=\"/news/{{data.id}}\" (click)=\"closeDialog(true)\">Edit</button> -->\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html'\n})\nexport class ConfirmDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n}\n","<h1 mat-dialog-title>{{data.title}}</h1>\n<div mat-dialog-content>\n  <p>{{data.message}}</p>\n</div>\n<div mat-dialog-actions align=\"end\">\n  <button mat-button (click)=\"closeDialog(false)\" tabindex=\"2\">No</button>\n  <button mat-button (click)=\"closeDialog(true)\" tabindex=\"-1\">Yes</button>\n</div>\n","<h3 mat-dialog-title>{{data.news_name}}</h3>\n<div mat-dialog-content>\n  <div fxLayout=\"column\" fxLayoutWrap=\"wrap\">\n      <!-- title column -->\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" [class.dhv-title]=\"data.language.language_code == 'Dhv'\">\n          {{data.heading}}\n      </div>\n      <!-- hr column -->\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n        <mat-divider></mat-divider>\n      </div>\n      <!-- news body column -->\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n          <div [innerHTML]=\"data.body\" style=\"white-space: pre-wrap\" [class.dhv]=\"data.language.language_code == 'Dhv'\"></div>\n      </div>\n      <!-- hr column -->\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n        <mat-divider></mat-divider>\n      </div>\n      <!-- news bars column -->\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n          <mat-card>\n              <mat-card-content>\n                  <mat-card-title>News Bar(s)</mat-card-title>\n              </mat-card-content>\n              <mat-tab-group>\n                  <mat-tab *ngFor=\"let bar of data.newsbar; let i = index\" label=\"Bar {{i+1}}\">\n                    <mat-card-content>\n                      <p [class]=\"data.language.language_code == 'Dhv' ? 'dhv' : '' \">{{bar.title}}</p>\n                      <p [class]=\"data.language.language_code == 'Dhv' ? 'dhv m-t-20' : '' \">{{bar.detail}}</p>\n                    </mat-card-content>\n                  </mat-tab>\n              </mat-tab-group>\n          </mat-card>\n      </div>\n  </div>\n</div>\n<!-- actions column -->\n<div align=\"end\" mat-dialog-actions align=\"end\">\n  <button mat-button color=\"warn\" *ngIf=\"data.newsstatus.status != 'published'\" (click)=\"doDelete(data.id)\">Delete</button>\n  <button mat-button color=\"basic\" *ngIf=\"data.newsstatus.status != 'published' && data.newsstatus.status != 'deleted'\" routerLink=\"/news/{{data.id}}\" (click)=\"closeDialog(true)\">Edit</button>\n  <button mat-raised-button color=\"primary\" *ngIf=\"data.newsstatus.status === 'deleted'\" (click)=\"doUndo(data.id)\">Restore</button>\n</div>\n","import { Component, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {News} from \"../../../news/models/news\";\n\n@Component({\n  selector: 'app-view-news-dialog',\n  templateUrl: './view-news-dialog.component.html'\n})\nexport class ViewNewsDialogComponent {\n  onDelete = new EventEmitter();\n  onUndo = new EventEmitter();\n\n  constructor(\n    public dialogRef: MatDialogRef<ViewNewsDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: News\n  ) { }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n  doDelete(id) {\n    this.closeDialog(false);\n    this.onDelete.emit(id);\n  }\n\n  doUndo(id) {\n    this.closeDialog(false);\n    this.onUndo.emit(id);\n  }\n\n}\n","import {\n  Directive,\n  ElementRef,\n  AfterViewInit,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  Renderer2\n  } from '@angular/core';\nimport { NgModel, NgControl } from '@angular/forms';\n\n@Directive({\n  selector: '[appDnrmsThaana]',\n  // providers: [NgModel],\n    host: {\n      '(input)': 'translate($event)',\n  }\n})\n// '[value]': 'appDnrmsThaana',\n// '(ngModelChange)': 'keyupEvent()'\nexport class ThaanaDirective implements AfterViewInit, OnInit {\n\n  @Input() appDnrmsThaana = true;\n  new_text: string;\n  firstChar = true;\n  selStart: number;\n  selEnd: number;\n  model_value: string;\n\n  @Output() ngModelChange = new EventEmitter();\n\n  _transFrom  = 'qwertyuiop[]\\\\asdfghjkl;\\'zxcvbnm,./QWERTYUIOP{}|ASDFGHJKL:\\\"ZXCVBNM<>?()';\n  _transToKbd = {\n    'phonetic': 'ްއެރތޔުިޮޕ][\\\\ަސދފގހޖކލ؛\\'ޒ×ޗވބނމ،./ޤޢޭޜޓޠޫީޯ÷}{|ާށޑﷲޣޙޛޚޅ:\\\"ޡޘޝޥޞޏޟ><؟)(',\n    'phonetic-hh': 'ޤަެރތޔުިޮޕ][\\\\އސދފގހޖކލ؛\\'ޒޝްވބނމ،./ﷲާޭޜޓޠޫީޯޕ}{|ޢށޑޟޣޙޛޚޅ:\\\"ޡޘޗޥޞޏމ><؟)(',\n    'typewriter': 'ޫޮާީޭގރމތހލ[]ިުްަެވއނކފﷲޒޑސޔޅދބށޓޯ×’“/:ޤޜޣޠޙ÷{}<>.،\\\"ޥޢޘޚޡ؛ޖޕޏޗޟޛޝ\\\\ޞ؟)('\n  };\n\n  constructor(\n    private elem: ElementRef,\n    private _model: NgModel,\n    private control: NgControl,\n    private renderer: Renderer2,\n  ) {\n  }\n\n  ngOnInit() {\n    this.selStart = this.elem.nativeElement.selectionStart;\n    this.selEnd   = this.elem.nativeElement.selectionEnd;\n  }\n\n  ngAfterViewInit(): void {\n    this.applyDhivehiStyles(this.appDnrmsThaana);\n  }\n\n applyDhivehiStyles(apply: boolean) {\n   if (apply) {\n    this.elem.nativeElement.style.color = '#2d2b2d';\n    this.elem.nativeElement.style.fontSize = '20px';\n    this.elem.nativeElement.style.textAlign = 'right';\n    this.elem.nativeElement.style.direction = 'rtl';\n    this.elem.nativeElement.style.lineHeight = '38px';\n    this.elem.nativeElement.style.fontFamily = 'MV Faseyha';\n    this.renderer.addClass(this.elem.nativeElement, 'dhv');\n    // this.elem.nativeElement.style.unicodeBidi = 'bidi-override';\n  }else {\n    this.elem.nativeElement.style.color = '#2d2b2d';\n    this.elem.nativeElement.style.fontSize = '16px';\n    this.elem.nativeElement.style.textAlign = 'left';\n    this.elem.nativeElement.style.direction = 'ltr';\n    this.elem.nativeElement.style.unicodeBidi = '';\n    this.elem.nativeElement.style.lineHeight = '28px';\n    this.elem.nativeElement.style.fontFamily = 'Poppins';\n    this.renderer.removeClass(this.elem.nativeElement, 'dhv');\n  }\n }\n\n//  @HostListener('ngModelChange', ['$event'])\n//   onEvent(event) {\n\n//     if (!this.appDnrmsThaana) {\n//       this.applyDhivehiStyles(false);\n//       return;\n//     } else {\n//       this.applyDhivehiStyles(true);\n//     }\n\n//     const nElm = this.elem.nativeElement;\n\n//     const _inputValue = nElm.value; // nElm.value;\n//     let _key = event.key;\n//     let _keyChar = '';\n//     let ctrl: any;\n\n\n//     if (_inputValue.length === 0) {\n//       return true;\n//     } else if (_inputValue.length <= 1) {\n//       // _keyChar = this.elem.nativeElement.value;\n//       _keyChar = _inputValue;\n//     } else {\n//       // _keyChar = this.elem.nativeElement.value.substr(this.elem.nativeElement.selectionStart - 1, 1);\n//       // _keyChar = _inputValue.substr(nElm.selectionStart - 1, 1);\n//       _keyChar = _inputValue.substr(_inputValue.length - 1, 1);\n//     }\n\n//     if (event.which == null) {\n//       // IE:\n//       _key = event.key;\n//     }else if (event.which > 0) {\n//       // Non-IE printable chars:\n//       _key = event.which;\n\n//       // Handle special keys misfire in Opera\n//       if ([45, 46, 35, 36].indexOf(event.key) === 1) {\n//         return true;\n//       }\n//     }else {\n//       // Ignore special keys\n//       return true;\n//     }\n//     // Check for CTRL modifier key\n//     if (event.modifier) {\n//       ctrl = event.modifiers && event.CONTROL_MASK;\n//     }else if (typeof(event.ctrlKey) !== 'undefined') {\n//       ctrl = event.ctrlKey;\n//     }\n//     const selOld: number = nElm.selectionEnd;\n\n//     try {\n//       const transIndex = this._transFrom.indexOf(_keyChar);\n\n//       if (transIndex === -1 || ctrl) {\n//         return true;\n//       }\n\n//       const tChar = this._transToKbd['phonetic'].substr(transIndex, 1);\n\n//       if (this.firstChar) {\n//         // this.new_text  = tChar;\n//         this.firstChar = false;\n\n//         this.new_text = _inputValue.substring(0, nElm.selectionStart - 1)\n//                       + tChar\n//                       + _inputValue.substring(nElm.selectionEnd, _inputValue.length);\n//       } else {\n//         this.new_text = _inputValue.substring(0, nElm.selectionStart - 1)\n//                       + tChar\n//                       + _inputValue.substring(nElm.selectionEnd, _inputValue.length);\n\n//       }\n\n//         this.elem.nativeElement.value = this.new_text;\n//         // this._model.valueAccessor.writeValue(this.new_text);\n//         this.ngModelChange.emit(this.new_text);\n\n//         // console.log(this.new_text);\n//         // console.log(nElm.value);\n//         // this.render.setElementProperty(this.elem.nativeElement, 'value', this.new_text);\n//       }catch (error) {\n//         console.error(error);\n//       }\n//       nElm.setSelectionRange(selOld, selOld);\n//       nElm.focus();\n//   }\n\n// @HostListener('focus', ['$event'])\n//   onFocus(event) {\n\n    // const nElm = this.elem.nativeElement;\n    // const _inputValue = nElm.value;\n\n    // nElm.setSelectionRange(nElm.selectionStart, nElm.selectionStart);\n    // nElm.focus();\n\n    // this.model_value = _inputValue;\n    // this.selStart = nElm.selectionStart;\n    // this.selEnd   = nElm.selectionEnd;\n//  }\n\n\n  translate(event) {\n\n    if (!this.appDnrmsThaana) {\n      this.applyDhivehiStyles(false);\n      return;\n    } else {\n      this.applyDhivehiStyles(true);\n    }\n\n    const nElm = this.elem.nativeElement;\n\n    const _inputValue = nElm.value; // nElm.value;\n    let _key = event.key;\n    let _keyChar = '';\n    let ctrl: any;\n\n    if (_inputValue.length === 0) {\n      return true;\n    } else if (_inputValue.length <= 1) {\n      // _keyChar = this.elem.nativeElement.value;\n      _keyChar = _inputValue;\n    } else {\n      // _keyChar = this.elem.nativeElement.value.substr(this.elem.nativeElement.selectionStart - 1, 1);\n      _keyChar = _inputValue.substr(nElm.selectionStart - 1, 1);\n      // _keyChar = _inputValue.substr(_inputValue.length - 1, 1);\n    }\n\n    if (event.which == null) {\n      // IE:\n      _key = event.key;\n    }else if (event.which > 0) {\n      // Non-IE printable chars:\n      _key = event.which;\n\n      // Handle special keys misfire in Opera\n      if ([45, 46, 35, 36].indexOf(event.key) === 1) {\n        return true;\n      }\n    }else {\n      // Ignore special keys\n      // return true;\n    }\n\n    // Check for CTRL modifier key\n    if (event.modifier) {\n      ctrl = event.modifiers && event.CONTROL_MASK;\n    }else if (typeof(event.ctrlKey) !== 'undefined') {\n      ctrl = event.ctrlKey;\n    }\n\n    const selOld: number = nElm.selectionEnd;\n    this.selEnd = nElm.selectionEnd;\n    this.selStart = nElm.selectionStart;\n\n    try {\n      const transIndex = this._transFrom.indexOf(_keyChar);\n\n      if (transIndex === -1 || ctrl) {\n        return true;\n      }\n\n      const tChar = this._transToKbd['phonetic'].substr(transIndex, 1);\n\n      if (this.firstChar) {\n        // this.new_text  = tChar;\n        this.firstChar = false;\n\n        this.new_text = _inputValue.substring(0, nElm.selectionStart - 1)\n                      + tChar\n                      + _inputValue.substring(nElm.selectionEnd, _inputValue.length);\n      } else {\n        this.new_text = _inputValue.substring(0, nElm.selectionStart - 1)\n                      + tChar\n                      + _inputValue.substring(nElm.selectionEnd, _inputValue.length);\n\n      }\n\n        this.ngModelChange.emit(this.new_text);\n        this._model.valueAccessor.writeValue(this.new_text);\n\n    }catch (error) {\n      console.error(error);\n    }\n\n    this.setCursor();\n  }\n\n\n  setCursor() {\n    // console.log('SELECTION: '+this.selStart+'||||'+this.selEnd)\n    this.elem.nativeElement.focus();\n    this.elem.nativeElement.setSelectionRange(this.selStart, this.selEnd);\n  }\n\n}\n","import { Injectable, OnInit } from '@angular/core';\n\nexport interface BadgeItem {\n  type: string;\n  value: string;\n}\nexport interface Saperator {\n  name: string;\n  type?: string;\n}\nexport interface ChildrenItems {\n  state: string;\n  name: string;\n  type?: string;\n  badge?: BadgeItem[];\n}\n\nexport interface Menu {\n  state: string;\n  name: string;\n  type: string;\n  icon: string;\n  role?: string;\n  badge?: BadgeItem[];\n  saperator?: Saperator[];\n  children?: ChildrenItems[];\n}\n\nconst MENUITEMS = [\n  /*{ state: '',\n    name: 'Personal',\n    type: 'saperator',\n    icon: 'av_timer'\n  }, {\n    state: 'dashboards',\n    name: 'Dashboards',\n    type: 'sub',\n    icon: 'av_timer',\n    children: [\n      {state: 'dashboard1', name: 'Dashboard 1'},\n      {state: 'dashboard2', name: 'Dashboard 2'},\n    ]\n  },\n    {\n    state: 'material',\n    name: 'Material Ui',\n    type: 'sub',\n    icon: 'bubble_chart',\n    badge: [\n      {type: 'red', value: '17'}\n    ],\n    children: [\n      {state: 'button', name: 'Buttons'},\n      {state: 'cards', name: 'Cards'},\n      {state: 'grid', name: 'Grid List'},\n      {state: 'lists', name: 'Lists'},\n      {state: 'menu', name: 'Menu'},\n      {state: 'tabs', name: 'Tabs'},\n      {state: 'stepper', name: 'Stepper'},\n      {state: 'expansion', name: 'Expansion Panel'},\n      {state: 'chips', name: 'Chips'},\n      {state: 'toolbar', name: 'Toolbar'},\n      {state: 'progress-snipper', name: 'Progress snipper'},\n      {state: 'progress', name: 'Progress Bar'},\n      {state: 'dialog', name: 'Dialog'},\n      {state: 'tooltip', name: 'Tooltip'},\n      {state: 'snackbar', name: 'Snackbar'},\n      {state: 'slider', name: 'Slider'},\n      {state: 'slide-toggle', name: 'Slide Toggle'}\n    ]\n  },\n  {\n    state: 'apps',\n    name: 'Apps',\n    type: 'sub',\n    icon: 'apps',\n    children: [\n      {state: 'calendar', name: 'Calendar'},\n      {state: 'messages', name: 'Mail box'},\n      {state: 'chat', name: 'Chat'},\n      {state: 'taskboard', name: 'Taskboard'}\n    ]\n  },\n    {\n    state: '',\n    name: 'Forms, Table & Widgets',\n    type: 'saperator',\n    icon: 'av_timer'\n  }, {\n    state: 'forms',\n    name: 'Forms',\n    type: 'sub',\n    icon: 'insert_drive_file',\n\n    children: [\n\n      {state: 'form-layout', name: 'Form-Layout'},\n      {state: 'autocomplete', name: 'Autocomplete'},\n      {state: 'checkbox', name: 'Checkbox'},\n      {state: 'datepicker', name: 'Datepicker'},\n      {state: 'editor', name: 'Editor'},\n      {state: 'form-validation', name: 'Form Validation'},\n      {state: 'file-upload', name: 'File Upload'},\n      {state: 'wizard', name: 'Wizard'}\n\n    ]\n  }, {\n    state: 'tables',\n    name: 'Tables',\n    type: 'sub',\n    icon: 'web',\n\n    children: [\n\n      {state: 'basictable', name: 'Basic Table'},\n      {state: 'filterable', name: 'Filterable Table'},\n      {state: 'pagination', name: 'Pagination Table'},\n      {state: 'sortable', name: 'Sortable Table'},\n      {state: 'mix', name: 'Mix Table'},\n      {state: 'smarttable', name: 'Smart Table'}\n\n    ]\n  }, {\n    state: 'datatables',\n    name: 'Data Tables',\n    type: 'sub',\n    icon: 'border_all',\n\n    children: [\n      {state: 'basicdatatable', name: 'Basic Data Table'},\n      {state: 'filter', name: 'Filterable'},\n      {state: 'editing', name: 'Editing'},\n    ]\n  }, {\n    state: 'widgets',\n    name: 'Widgets',\n    type: 'link',\n    icon: 'widgets'\n  }, {\n    state: '',\n    name: 'Extra Component',\n    type: 'saperator',\n    icon: 'av_timer'\n  },\n    {\n    state: 'authentication',\n    name: 'Authentication',\n    type: 'sub',\n    icon: 'perm_contact_calendar',\n\n    children: [\n      {state: 'login', name: 'Login'},\n      {state: 'register', name: 'Register'},\n      {state: 'forgot', name: 'Forgot'},\n      {state: 'lockscreen', name: 'Lockscreen'},\n      {state: '404', name: 'Error'}\n\n    ]\n  }, {\n    state: 'charts',\n    name: 'Charts',\n    type: 'sub',\n    icon: 'insert_chart',\n\n    children: [\n      {state: 'chartjs', name: 'Chart Js'},\n      {state: 'chartistjs', name: 'Chartist Js'},\n      {state: 'ngxchart', name: 'Ngx Charts'}\n\n    ]\n  }, {\n    state: 'pages',\n    name: 'Pages',\n    type: 'sub',\n    icon: 'content_copy',\n\n    children: [\n      {state: 'icons', name: 'Material Icons'},\n      {state: 'timeline', name: 'Timeline'},\n      {state: 'invoice', name: 'Invoice'},\n      {state: 'pricing', name: 'Pricing'},\n      {state: 'helper', name: 'Helper Classes'}\n    ]\n  }*/\n\n  {\n    state: 'admin',\n    name: 'App Management',\n    role: 'admin',\n    type: 'sub',\n    icon: 'vpn_key',\n    children: [\n      { state: 'admin-dashboard', name: 'Dashboard', type: 'link' },\n      { state: 'user-console', name: 'User Console', type: 'link' },\n\n      {\n        state: 'news-settings',\n        name: 'News Settings',\n        type: 'subchild',\n        subchildren: [\n          {\n            state: 'list',\n            name: 'News Lists',\n            type: 'link'\n          },\n          {\n            state: 'breakers',\n            name: 'News Breakers',\n            type: 'link'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    state: 'user',\n    name: 'Dashboard',\n    role: 'user',\n    type: 'sub',\n    icon: 'av_timer',\n    children: [\n      {state: 'profile', name: 'User Dashboard', type: 'link'},\n      {state: 'chat', name: 'Message Board', type: 'link'}\n    ]\n  },\n  {\n    state: 'editor',\n    name: 'News Editor',\n    role: 'news-editor',\n    type: 'sub',\n    icon: 'featured_play_list',\n    children: [\n      {state: 'dashboard', name: 'Dashboard', type: 'link'},\n      {state: 'review', name: 'Review News', type: 'link'},\n      {state: 'list', name: 'News List', type: 'link'},\n    ]\n  },\n  {\n    state: 'news',\n    name: 'News',\n    role: 'journalist',\n    type: 'sub',\n    icon: 'view_headline',\n    children: [\n      {state: 'dashboard', name: 'News Dashboard', type: 'link'},\n      {state: 'write', name: 'Write News', type: 'link'},\n      {\n        state: 'my',\n        name: 'My News', type: 'link'\n        // badge: [\n        //   {type: 'primary', value: '17'}\n        // ],\n      },\n      {state: 'ticker', name: 'Ticker News', type: 'link'},\n      {\n        state: 'trash',\n        name: 'Trash', type: 'link'\n        // badge: [\n        //   {type: 'red', value: '17'}\n        // ],\n      }\n    ]\n  },\n  {\n    state: 'control',\n    name: 'Controller',\n    role: 'control',\n    type: 'sub',\n    icon: 'traffic',\n    children: [\n      {state: 'news-cg', name: 'News CG', type: 'link'},\n      {state: 'ticker', name: 'Tickers', type: 'link'},\n      /*{state: 'ticker', name: 'Tickers', type: 'link'},\n      {state: 'cg-text', name: 'CG Text', type: 'link'},*/\n      {state: 'on-air', name: 'On Air', type: 'link'},\n      // {state: 'sms', name: 'SMS', type: 'link'},\n    ]\n  }\n\n];\n\n@Injectable()\n\nexport class MenuItems {\n  trash = 2;\n\n  OnInit() {\n    // get user array\n  }\n\n  getMenuitem(): Menu[] {\n    return MENUITEMS;\n  }\n\n}\n","export class User {\n  id?: string;\n  email?: string;\n  password?: string;\n  token?: Token;\n  name?: string;\n  roles_a?: any;\n  roles?: Role[];\n  profile?: Profile;\n\n  constructor() {\n    this.id = null;\n  }\n}\n\nexport class Token {\n  token?: string;\n}\n\nexport class Role {\n  role: string;\n  display_name: string;\n  permissions: string[];\n}\n\nexport class Profile{\n  id?: string;\n  user_id?: string;\n  dob?: string;\n  gender?: string;\n  fb?: string;\n  insta?: string;\n  twitter?: string;\n  email?: string;\n  phone?: string;\n  profilepic?: string;\n  coverimage?: string;\n\n  constructor(){\n    this.user_id    = null;\n    this.dob        = null;\n    this.gender     = null;\n    this.fb         = null;\n    this.insta      = null;\n    this.twitter    = null;\n    this.email      = null;\n    this.phone      = null;\n    this.profilepic = '';\n    this.coverimage = '';\n\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable, Subscription ,  Subject } from 'rxjs';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from './auth.service';\nimport { RouteRoleService } from './route-role.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, OnDestroy {\n  loggedInSub: Subscription;\n  destroySubject$: Subject<void> = new Subject();\n\n  constructor(\n      private auth: AuthService,\n      private router: Router,\n      private role: RouteRoleService\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n    this.loggedInSub = this.auth.loggedIn$.pipe(takeUntil(this.destroySubject$)).subscribe(\n        loggedIn => {\n          if (!loggedIn ) {\n            this.router.navigate(['/authentication/login']);\n          }\n          this.role.initialize();\n        }\n    );\n\n    return true;\n  }\n\n  ngOnDestroy() {\n    this.destroySubject$.next();\n  }\n}\n","import { User } from '../models/user';\nimport { Injectable } from '@angular/core';\nimport { SessionService } from './session.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\n\nimport { environment } from '../../../environments/environment';\n/*import { NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR } from '@angular/core/src/view/provider';*/\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private API_URL = environment.apiUrl;\n\n  // Create a stream of logged in status to communicate throughout app\n  loggedIn: boolean = false;\n  loggedIn$ = new BehaviorSubject<boolean>(this.loggedIn);\n\n  constructor(\n      private session: SessionService,\n      private http: HttpClient\n  ) {\n    if (this.session.getSession('dnms_token')) {\n      this.loggedIn$.next(true);\n      this.loggedIn = true;\n    }\n  }\n\n  public isSignedIn() {\n    return !!this.session.getSession('dnms_token');\n  }\n\n  public doSignOut() {\n    console.log('sign out');\n    this.loggedIn$.next(false);\n    this.loggedIn = false;\n    this.session.destroy();\n  }\n\n  public signIn(email: string, password: string) {\n    return this.http.post<any>(this.API_URL + 'authenticate/', { email, password });\n  }\n\n  // public doSignIn(accessToken: string, name: string, email: string, roles: string, roles_all: any[]) {\n  public doSignIn(loginUser: User) {\n    if ((!loginUser.token) || (!loginUser.name)) {\n      return;\n    }\n\n    this.loggedIn$.next(true);\n    this.loggedIn = true;\n\n    this.session.saveSession(loginUser);\n  }\n\n  public refreshToken(token) {\n    /**\n     *    token refresh is not working from api\n     *     //TODO need to fix token refreshing from API\n      */\n    // const headers = new HttpHeaders({'Authorization': 'Bearer ' + token});\n\n    /*const ttoken = '{token: \\'' + token + '\\'}';\n    const post_token = JSON.parse(JSON.stringify(ttoken));\n    console.log(post_token);*/\n\n    return this.http.post<any>(this.API_URL + 'refresh/?token=' + token , null);\n  }\n\n  public getUserSettings() {\n    return this.session.getUserSetting;\n  }\n\n}\n","import { Injectable } from '@angular/core';\ndeclare var deepstream:any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DsService {\n  private ds;\n  public dsInstance;\n\n  constructor() {\n     this.ds = this.dsInstance = deepstream('192.168.1.70:6020');\n  }\n\n  login (credentials?, loginHandler?) {\n    // {username: 'chris', password:'password'}\n    this.ds.login(credentials, loginHandler);\n  }\n\n  getRecord(name) {\n    return this.ds.record.getRecord(name);\n  }\n\n  getList(name){\n    return this.ds.record.getList(name);\n  }\n}\n","import { Observable ,  BehaviorSubject, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nimport { SessionService } from './session.service';\nimport { AuthService } from './auth.service';\n\nimport { map, filter, tap ,  catchError, finalize } from 'rxjs/operators';\n\n\n\n\n\nimport * as userReducer from '../../authentication/store/user.reducer';\nimport * as userActions from '../../authentication/store/user.actions';\nimport { UserState } from '../../store/app.state';\nimport { Store } from '@ngrx/store';\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n  isRefreshingToken = false;\n  tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n\n    constructor(\n      private sessonService: SessionService,\n      private authService: AuthService,\n      public snackBar: MatSnackBar,\n      private store: Store<any>,\n    ) {}\n\n    addToken(req: HttpRequest<any>, token: string): HttpRequest<any> {\n      return req.clone({ setHeaders: { Authorization: 'Bearer ' + token }});\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n      return next.handle(this.addToken(request, this.sessonService.getSession('dnms_token')))\n      .pipe(\n        tap(event => {\n          if (event instanceof HttpResponse) {\n            // console.log(`Request for ${request.urlWithParams} with method ${request.method}`);\n            if (event.status === 200) { // OK\n              // this.snackBar.open(event.statusText, 'dismiss', {duration: 1000});\n            }else if (event.status === 201) { // created\n              this.snackBar.open(event.statusText, 'dismiss', {duration: 1000});\n            }else if (event.status === 202) { // accepted\n              this.snackBar.open(event.statusText, 'dismiss', {duration: 1000});\n            }else if (event.status === 204) { // no content (delete)\n              this.snackBar.open(event.statusText, 'dismiss', {duration: 1000});\n            }\n          }\n        }, error => {\n          // console.error('NICE ERROR', error);\n          switch (error.status) {\n            case 400:\n                return this.handle400Error(error);\n            case 401:\n              return this.handle401Error(request, next);\n            case 403:\n              return this.snackBar.open(error.error, 'dismiss');\n            case 500:\n              return this.snackBar.open('Server Error!', 'dismiss');\n          }\n        })\n      );\n      /*try {\n\n        return next.handle(this.addToken(request, this.sessonService.getSession('dnms_token')));\n\n      } catch (error) {\n        if (error instanceof HttpErrorResponse) {\n\n          switch ((<HttpErrorResponse>error).status) {\n              case 400:\n                  // return this.handle400Error(error);\n              case 401:\n                  this.handle401Error(request, next);\n          }\n        } else {\n            return Observable.throw(error);\n        }\n      }*/\n    }\n\n\n\n    handle401Error(req: HttpRequest<any>, next: HttpHandler) {\n\n    // logged_inthis.store.dispatch(new User401());\n      console.log('signing out from interceptor');\n      this.store.dispatch(new userActions.User401());\n      // return this.authService.doSignOut();\n\n      /*if (!this.isRefreshingToken) {\n        console.log('handling 401');\n          this.isRefreshingToken = true;\n\n          // Reset here so that the following requests wait until the token\n          // comes back from the refreshToken call.\n          this.tokenSubject.next(null);\n\n          return this.authService.refreshToken(this.sessonService.getSession('dnms_token'))\n              .map((newToken: string) => {\n                  if (newToken) {\n                      this.tokenSubject.next(newToken);\n                      console.log(newToken);\n                      return next.handle(this.addToken(req, newToken));\n                  }\n\n                  // If we don't get a new token, we are in trouble so logout.\n                  return this.authService.doSignOut();\n              })\n              .subscribe(error => {\n                  // If there is an exception calling 'refreshToken', bad news so logout.\n                  return this.authService.doSignOut();\n              })\n              .finally(() => {\n                  this.isRefreshingToken = false;\n              });\n      } else {\n          return this.tokenSubject\n              .filter(token => token != null)\n              // .take(1)\n              .map(token => {\n                  return next.handle(this.addToken(req, token));\n              });\n      }*/\n  }\n\n    handle400Error(error) {\n      this.store.dispatch(new userActions.User401());\n        // if (error && error.status === 400 && error.error && error.error.error === 'invalid_grant') {\n        //     // If we get a 400 and the error message is 'invalid_grant', the token is no longer valid so logout.\n        //     return this.authService.doSignOut();\n        // }\n\n        // return Observable.throw(error);\n    }\n}\n/*\nexport class HTTPStatus {\n  private requestInFlight$: BehaviorSubject<boolean>;\n  constructor() {\n    this.requestInFlight$ = new BehaviorSubject(false);\n  }\n\n  setHttpStatus(inFlight: boolean) {\n    this.requestInFlight$.next(inFlight);\n  }\n\n  getHttpStatus(): Observable<boolean> {\n    return this.requestInFlight$.asObservable();\n  }\n}\n\n@Injectable()\nexport class HTTPListener implements HttpInterceptor {\n  constructor(private status: HTTPStatus) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      map(event => {\n        console.log(event)\n        return event;\n      }),\n      catchError(error => {\n        return Observable.throw(error);\n      }),\n      finalize(() => {\n        this.status.setHttpStatus(false);\n      })\n    );\n  }\n}\n*/\n","import { Store } from '@ngrx/store';\nimport { Router, ActivatedRoute, RoutesRecognized, NavigationEnd } from '@angular/router';\nimport { SessionService } from './session.service';\nimport { Injectable, OnInit, OnDestroy } from '@angular/core';\n\nimport * as userActions from '../../authentication/store/user.actions';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteRoleService implements OnInit, OnDestroy {\n\n  routeObserver$: any;\n  roleSubscription$: any;\n\n  destroySubject$: Subject<void> = new Subject();\n\n  constructor(\n    private session: SessionService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private store: Store<any>\n  ) { }\n\n  ngOnInit() {\n  }\n\n  initialize() {\n    this.routeObserver$ = this.router.events\n      .pipe(takeUntil(this.destroySubject$))\n      .subscribe(event => {\n        if (event instanceof RoutesRecognized) {\n          this.guardRoute(event);\n        } /*else if (event instanceof NavigationEnd) {\n          this.checkRole(event);\n        }*/\n      });\n  }\n\n  private guardRoute(event: RoutesRecognized): void {\n    if (this.isPublic(event)) {\n      return;\n    }\n\n    if (!this.callCheckToken(event)) {\n      return;\n    }\n  }\n\n  private callCheckToken(event: RoutesRecognized) {\n    // const token_date = new Date(this.session.getSession('expiry'));\n    // const now_date   = new Date().getTime();\n\n    // if (token_date.getTime() < now_date) {\n    //   this.store.dispatch(new userActions.UserLogout());\n    //   //this.routeObserver$.unsubscribe();\n    //   return false;\n    // }\n\n    return true;\n  }\n\n  private isPublic(event: RoutesRecognized) {\n    return event.state.root.firstChild.data.isPublic;\n  }\n\n  private checkRole(event) {\n    let roles_  = false;\n\n    const sRoutes = event.url.split('/');\n    this.roleSubscription$ = this.store.select(RootStore => RootStore.UserState.user.roles)\n      .pipe(takeUntil(this.destroySubject$))\n      .subscribe(roles => {\n\n        if (sRoutes.includes('authentication') || sRoutes.includes('dashboard')) {\n          roles_ = true;\n        }\n\n        if (roles) {\n          Object.keys(roles).forEach(function(key) {\n            Object.keys(roles[key].permissions).forEach(function(role_key) {\n              // console.log(sRoutes);\n              // console.log('PERM= ' + roles[key].permissions[role_key].permission);\n              if (sRoutes.includes(roles[key].permissions[role_key].permission)) {\n                roles_ = true;\n              }\n            });\n        });\n        }\n      });\n\n    // user have permission to this route\n    if (roles_) {\n      return;\n    }\n    // the user does not have the required permission\n    if (!roles_) {\n      this.router.navigate(['/authentication/401']);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroySubject$.next();\n    // this.routeObserver$.unsubscribe();\n    // this.roleSubscription$.unsubscribe();\n  }\n\n}\n","import { BehaviorSubject ,  Observable ,  SubscriptionLike as ISubscription ,  Subject } from 'rxjs';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { User, Role } from '../models/user';\nimport { Store } from '@ngrx/store';\nimport { UserState } from '../../store/app.state';\n\nimport * as userActions from '../../authentication/store/user.actions';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService implements OnDestroy {\n\n  private sessionExpiryTime: number = 1; //token expiry time local\n  private checkSessionExpiry: boolean = false;\n\n  public accessToken: string;\n  public id = '';\n  public name = 'Guest';\n  public email = '';\n  public roles: string;\n  public roles_all: string;\n  private subscription: ISubscription;\n\n  destroySubject$: Subject<void> = new Subject();\n\n  constructor(\n    private store: Store<any>,\n    private http: HttpClient\n  ) {}\n\n  public destroy(): void {\n    sessionStorage.clear();\n\n    this.accessToken = null;\n    this.name = 'Guest';\n    this.email = '';\n    this.roles = '';\n    this.roles_all = '';\n  }\n\n  public saveSession(loginUser: User) {\n    // set token expiry time\n    const date = new Date();\n    date.setFullYear(date.getFullYear() + this.sessionExpiryTime);\n\n    sessionStorage.setItem('id',         loginUser.id);\n    sessionStorage.setItem('name',       loginUser.name);\n    sessionStorage.setItem('email',      loginUser.email);\n    if(loginUser.token){\n      sessionStorage.setItem('dnms_token', loginUser.token.token);\n    }\n    sessionStorage.setItem('roles',      JSON.stringify(loginUser.roles));\n    sessionStorage.setItem('expiry',     date.toJSON());\n    //sessionStorage.setItem('roles_all', JSON.stringify(loginUser.roles_a));\n\n    //profile\n    sessionStorage.setItem('profile',JSON.stringify(loginUser.profile));\n\n    this.id          = this.getSession('id');\n    this.name        = this.getSession('name');\n    this.email       = this.getSession('email');\n    this.accessToken = this.getSession('dnms_token.token');\n    this.roles       = this.getSession('roles');\n    this.roles_all   = this.getSession('roles_all');\n\n    return true;\n  }\n\n  /**\n   * pass user data as an observable (from session storage)\n   * called when page is refreshed for user state to update\n   */\n  public getUserSetting() {\n    if (!this.getSession('dnms_token')) {\n      return this.getUserLogoutSetting();\n      // return false;\n    }\n\n    return new Observable(observer => {\n      let profile = JSON.parse(this.getSession('profile'));\n      console.log(profile)\n      const user = {\n        id:      this.getSession('id'),\n        email:   this.getSession('email'),\n        name:    this.getSession('name'),\n        token:   { token: this.getSession('dnms_token') },\n        roles:   JSON.parse(this.getSession('roles')),\n        roles_a: JSON.parse(this.getSession('roles_all')),\n        profile: {\n          'id':          profile.id,\n          'user_id':     profile.user_id,\n          'dob':         profile.dob,\n          'gender':      profile.gender,\n          'insta':       profile.insta,\n          'fb':          profile.fb,\n          'twitter':     profile.twitter,\n          'email':       profile.email,\n          'phone':       profile.phone,\n          'profilepic':  profile.profilepic,\n          'coverimage':  profile.coverimage,\n        }\n      };\n        observer.next(user);\n        observer.complete();\n    });\n\n  }\n\n  /**\n   *  update user data from server\n   *  called when user updates their profile\n   */\n  public updateUserSettings() {\n    return this.http.get<any>(environment.apiUrl + 'userdata/all');\n  }\n\n  /**\n   * Check Expiry\n   * experiment to check if users token has expired\n   *\n   * year, month, day\n   * hour,min, sec\n   */\n  checkExpiry() {\n    if(this.checkSessionExpiry) {\n      let nowDate = new Date();\n      //nowDate.setMinutes(nowDate.getMinutes() + this.sessionExpiryTime);\n\n      let sessionDate = new Date(sessionStorage.getItem('expiry'));\n      // console.log(nowDate)\n      // console.log(new Date(sessionDate))\n\n      if(nowDate.getFullYear() > sessionDate.getFullYear()) {\n        console.log('this!!!!');\n        this.CallLogoutState();\n        return false;\n      }else if(nowDate.getMonth() > sessionDate.getMonth()) {\n        console.log('this!!!!');\n        this.CallLogoutState();\n        return false;\n      }else if(nowDate.getDay() > sessionDate.getDay()) {\n        console.log('this!!!!');\n        this.CallLogoutState();\n        return false;\n      }\n\n      let nowTime     = nowDate.getHours()+':'+nowDate.getMinutes()+':'+nowDate.getSeconds();\n      let sessionTime = sessionDate.getHours()+':'+sessionDate.getMinutes()+':'+sessionDate.getSeconds();\n      //if(nowTime > sessionTime) {\n      var regExp = /(\\d{1,2})\\:(\\d{1,2})\\:(\\d{1,2})/;\n      if (parseInt(nowTime.replace(regExp, \"$1$2$3\")) > parseInt(sessionTime .replace(regExp, \"$1$2$3\"))){\n        console.log('this!!!!', nowTime, sessionTime );\n        this.CallLogoutState();\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  CallLogoutState(){\n    this.destroySubject$.next();\n    //this.subscription.unsubscribe();\n    this.store.dispatch(new userActions.UserLogout());\n  }\n\n  /**\n   * pass null user data as an observable\n   * called when user logs out\n   */\n  public getUserLogoutSetting() {\n\n    return new Observable(observer => {\n      const user = {\n        email: null,\n        name: null,\n        token: { token: null },\n        roles: null,\n        roles_a: null\n      };\n      observer.next(user); // This method same as resolve() method from Angular 1\n      // console.log('am done');\n      observer.complete(); // to show we are done with our processing\n      // observer.error(new Error(\"error message\"));\n    });\n\n  }\n\n  //get a key from session storage\n  public getSession(key: string) {\n    return sessionStorage.getItem(key);\n  }\n\n  /**\n   *  Check if the logged in user have a given role or permission\n   */\n  public checkRole(role: string) {\n    let found = false;\n\n    if (this.checkExpiry()) {\n\n      this.store.select(state => state.UserState.user.roles)\n      .pipe(takeUntil(this.destroySubject$))\n      .subscribe(list => {\n        if(list){\n        //if(Object.keys(list).length > 0){\n            list.forEach((user_role: Role) => {\n              if (user_role.role === role) {\n                found = true;\n              }\n            });\n        }\n      });\n\n    }else{\n      //this.subscription.unsubscribe();\n    }\n\n    return found;\n  }\n\n  ngOnDestroy() {\n    //this.subscription.unsubscribe();\n    this.destroySubject$.next();\n  }\n\n}\n","import { NgModule } from '@angular/core';\n\nimport { MenuItems } from './menu-items/menu-items';\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\nimport { ThaanaDirective } from './directives/thaana.directive';\n\n\n@NgModule({\n  declarations: [\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective,\n    ThaanaDirective\n  ],\n  exports: [\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective,\n    ThaanaDirective\n   ],\n  providers: [ MenuItems ]\n})\nexport class SharedModule { }\n","import {Component, Input, OnDestroy, Inject, ViewEncapsulation} from '@angular/core';\nimport {Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError} from '@angular/router';\nimport {DOCUMENT} from '@angular/common';\n\n@Component({\n    selector: 'app-spinner',\n    template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\n        <div class=\"spinner\">\n          <div class=\"double-bounce1\"></div>\n          <div class=\"double-bounce2\"></div>\n        </div>\n    </div>`,\n    encapsulation: ViewEncapsulation.None\n})\nexport class SpinnerComponent implements OnDestroy {\n    public isSpinnerVisible = true;\n\n    @Input() public backgroundColor = 'rgba(0, 115, 170, 0.69)';\n\n    constructor(private router: Router, @Inject(DOCUMENT) private document: Document) {\n      this.router.events.subscribe(event => {\n          if (event instanceof NavigationStart) {\n              this.isSpinnerVisible = true;\n          } else if ( event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\n              this.isSpinnerVisible = false;\n          }\n      }, () => {\n          this.isSpinnerVisible = false;\n      });\n    }\n\n    ngOnDestroy(): void {\n        this.isSpinnerVisible = false;\n    }\n}\n","import { ActionReducerMap, ActionReducer, MetaReducer } from '@ngrx/store';\nimport { AppState } from './app.state';\nimport { environment } from '../../environments/environment';\n\nimport * as userAction from '../authentication/store/user.actions';\n\nimport * as userReducer from '../authentication/store/user.reducer';\nimport * as newsReducer from '../news/store/news.reducer';\nimport * as reviewNewsReducer from '../editor/store/news-editor.reducer';\n\nexport const reducers: ActionReducerMap<AppState> = {\n  UserState: userReducer.reducer,\n  NewsState: newsReducer.reducer,\n  ReviewNews: reviewNewsReducer.reducer,\n};\n\nexport function logger(reducer: ActionReducer<AppState>): ActionReducer<AppState> {\n  return function(state: AppState, action: any): AppState {\n    console.log('state', state);\n    console.log('action', action);\n\n\n    // if (action.type === userAction.USER_LOGOUT_SUCCESS) {\n    //   console.log('x-x ROOT REDUCER LOGOUT x-x');\n    //   // state = { UserState: { user: { email: null, name: null, token: {token: null}, roles: null, roles_a: null } }, NewsState: {myNews: null, myNewsPageState: { currentPage: null, perPage: null, lastPages: null, totalResults: null }, trashNewsPageState: null, trashNews: null} };\n    //   state = undefined;\n    //   this.router.navigate(['/authentication/login']);\n    // }\n\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<AppState>[] = !environment.production\n  ? [logger]\n  : [];\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n\n  /*apiUrl: 'http://192.168.18.18/nrs/api/',\n  storageUrl: 'http://192.168.18.18/nrs/storage/',*/\n\n  apiUrl: 'http://203.104.25.202:84/api/',\n  storageUrl: 'http://203.104.25.202:84/nrs/storage/',\n  pusher: {\n    key: '5289e5ee971f625d85fa',\n    cluster: 'ap2',\n  },\n\n  firebaseConfig: {\n    apiKey: \"AIzaSyAIGm6zOh3hIyxjPgnMk49I3GKGOemtJz8\",\n    authDomain: \"dnrs-rtv.firebaseapp.com\",\n    projectId: \"dnrs-rtv\",\n    storageBucket: \"dnrs-rtv.appspot.com\",\n    messagingSenderId: \"1020243579171\",\n    appId: \"1:1020243579171:web:5c846ab2199fbc4dcf7c96\",\n    measurementId: \"G-DCPJM2FPR0\"\n  }\n};\n","import '@angular/compiler';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"]}