{"version":3,"sources":["webpack:///src/app/authentication/store/user.effects.ts","webpack:///src/app/shared/services/auth.guard.ts","webpack:///src/app/news/store/news.actions.ts","webpack:///src/app/shared/menu-items/menu-items.ts","webpack:///src/environments/environment.ts","webpack:///src/app/shared/accordion/accordion.directive.ts","webpack:///src/app/editor/store/news-editor.reducer.ts","webpack:///src/app/shared/services/auth.service.ts","webpack:///src/app/shared/accordion/accordionlink.directive.ts","webpack:///src/app/shared/component/view-news-dialog/view-news-dialog.component.ts","webpack:///src/app/shared/component/view-news-dialog/view-news-dialog.component.html","webpack:///src/app/layouts/blank/blank.component.ts","webpack:///src/app/layouts/blank/blank.component.html","webpack:///src/app/shared/accordion/index.ts","webpack:///src/app/shared/models/user.ts","webpack:///src/app/layouts/full/sidebar/sidebar.component.ts","webpack:///src/app/layouts/full/sidebar/sidebar.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/services/ds.service.ts","webpack:///src/app/editor/store/news-editor.actions.ts","webpack:///src/app/shared/services/route-role.service.ts","webpack:///src/app/layouts/full/full.component.ts","webpack:///src/app/layouts/full/full.component.html","webpack:///src/app/store/app.reducer.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/authentication/store/user.actions.ts","webpack:///src/app/app.routing.ts","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/shared/services/http-interceptor.service.ts","webpack:///src/app/shared/component/confirm-dialog/confirm-dialog.component.ts","webpack:///src/app/shared/component/confirm-dialog/confirm-dialog.component.html","webpack:///src/app/news/store/news.reducer.ts","webpack:///src/app/shared/services/session.service.ts","webpack:///src/app/news/models/news.ts","webpack:///src/app/shared/directives/thaana.directive.ts","webpack:///src/app/shared/spinner.component.ts","webpack:///src/app/demo-material-module.ts","webpack:///src/app/shared/component/add-ticker-news-dialog/add-ticker-news-dialog.component.ts","webpack:///src/app/shared/component/add-ticker-news-dialog/add-ticker-news-dialog.component.html","webpack:///src/app/layouts/full/header/header.component.ts","webpack:///src/app/layouts/full/header/header.component.html","webpack:///src/app/authentication/store/user.reducer.ts","webpack:///src/app/shared/accordion/accordionanchor.directive.ts","webpack:///src/main.ts"],"names":["UserEffects","actions","authService","sessionService","store","router","LogIn","pipe","action","payload","signIn","email","password","user","doSignIn","error","console","log","LogInSuccess","saveSession","GetUserSettings","getUserSetting","ServerGetUserSettings","updateUserSettings","UserLogout","dispatch","doSignOut","navigate","UserLogoutSuccess","User401","warn","AuthGuard","auth","role","destroySubject$","next","state","loggedInSub","loggedIn$","subscribe","loggedIn","initialize","providedIn","GET_A_NEWS","GET_A_NEWS_SUCCESS","GET_A_NEWS_ERROR","GET_MY_NEWS","GET_MY_NEWS_SUCCESS","GET_MY_NEWS_ERROR","GET_TRASH_NEWS","GET_TRASH_NEWS_SUCCESS","GET_TRASH_NEWS_ERROR","DELETE_NEWS","DELETE_NEWS_SUCCESS","DELETE_NEWS_ERROR","RESTORE_NEWS","RESTORE_NEWS_SUCCESS","RESTORE_NEWS_ERROR","CHANGE_NEWS_LOADED","CHANGE_MY_NEWS_LOADED","CHANGE_TRASH_NEWS_LOADED","DESTROY_NEWS","DESTROY_NEWS_SUCCESS","DESTROY_NEWS_ERROR","GET_TICKERS","GET_TICKERS_SUCCESS","GET_TICKERS_ERROR","ADD_TICKER_NEWS","ADD_TICKER_NEWS_SUCCESS","ADD_TICKER_NEWS_ERROR","APPROVE_TICKER_NEWS","APPROVE_TICKER_NEWS_SUCCESS","APPROVE_TICKER_NEWS_ERROR","DISAPPROVE_TICKER_NEWS","DISAPPROVE_TICKER_NEWS_SUCCESS","DISAPPROVE_TICKER_NEWS_ERROR","DELETE_TICKER_NEWS","DELETE_TICKER_NEWS_SUCCESS","DELETE_TICKER_NEWS_ERROR","ADD_TICKER","ADD_TICKER_SUCCESS","ADD_TICKER_ERROR","LOGOUT_NEWS_STATE","GetMyNews","type","GetMyNewsSuccess","GetMyNewsError","GetTrashNews","GetTrashNewsSuccess","GetTrashNewsError","GetNews","GetNewsSuccess","GetNewsError","DeleteNews","DeleteNewsSuccess","DeleteNewsError","RestoreNews","RestoreNewsSuccess","RestoreNewsError","UpdateNewsLoaded","UpdateMyNewsLoaded","UpdateTrashNewsLoaded","DestroyNews","DestroyNewsSuccess","DestroyNewsError","GetTickers","GetTickersSuccess","GetTickersError","AddTickerNews","AddTickerNewsSuccess","AddTickerNewsError","ApproveTickerNews","ApproveTickerNewsSuccess","ApproveTickerNewsError","DisApproveTickerNews","DisApproveTickerNewsSuccess","DisApproveTickerNewsError","DeleteTickerNews","DeleteTickerNewsSuccess","DeleteTickerNewsError","AddTicker","AddTickerSuccess","AddTickerError","LogoutNewsState","MENUITEMS","name","icon","children","subchildren","MenuItems","trash","environment","production","apiUrl","storageUrl","pusher","key","cluster","AccordionDirective","navlinks","setTimeout","checkOpenLinks","selectedLink","forEach","link","selected","push","index","indexOf","splice","group","routeUrl","url","currentUrl","split","closeOtherLinks","events","event","e","selector","initialState","news","isLoaded","lists","isListLoaded","selectedList","reducer","filter","id","news_id","list_id","getReviewNewsState","getMyNews","getNewsById","newsBox","allItems","find","item","AuthService","session","http","API_URL","getSession","destroy","post","loginUser","token","AccordionLinkDirective","nav","_selected","value","addLink","removeGroup","ViewNewsDialogComponent","dialogRef","data","onDelete","onUndo","confirmation","close","closeDialog","emit","templateUrl","AppBlankComponent","styleUrls","User","Token","Role","Profile","user_id","dob","gender","fb","insta","twitter","phone","profilepic","coverimage","AppSidebarComponent","changeDetectorRef","media","menuItems","store2","username","config","logged_in","userData","status","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","storagePath","select","UserState","userdata","removeListener","checkRole","logOut","SharedModule","declarations","exports","providers","DsService","ds","dsInstance","deepstream","credentials","loginHandler","login","record","getRecord","getList","GET_REVIEW_NEWS","GET_REVIEW_NEWS_SUCCESS","GET_REVIEW_NEWS_ERROR","APPROVE_NEWS","APPROVE_NEWS_SUCCESS","APPROVE_NEWS_ERROR","REJECT_NEWS","REJECT_NEWS_SUCCESS","REJECT_NEWS_ERROR","GET_LISTS","GET_LISTS_SUCCESS","GET_LISTS_ERROR","GET_LISTS_BY_DATE","GET_LISTS_BY_DATE_SUCCESS","GET_LISTS_BY_DATE_ERROR","ADD_TO_LIST","ADD_TO_LIST_SUCCESS","ADD_TO_LIST_ERROR","REMOVE_FROM_LIST","REMOVE_FROM_LIST_SUCCESS","REMOVE_FROM_LIST_ERROR","UPDATE_LIST_ORDER","UPDATE_LIST_ORDER_SUCCESS","UPDATE_LIST_ORDER_ERROR","UPDATE_SELECTED_LIST","UPDATE_SELECTED_LIST_SUCCESS","UPDATE_SELECTED_LIST_ERROR","GET_SELECTED_LIST","GET_SELECTED_LIST_SUCCESS","GET_SELECTED_LIST_ERROR","CHANGE_REVIEW_NEWS_LOADED","LOGOUT_EDITOR_STATE","GetReviewNews","GetReviewNewsSuccess","GetReviewNewsError","ApproveNews","ApproveNewsSuccess","ApproveNewsError","RejectNews","RejectNewsSuccess","RejectNewsError","GetLists","GetListsSuccess","GetListsError","GetListsByDate","GetListsByDateSuccess","GetListsByDateError","AddToList","AddToListSuccess","AddToListError","RemoveFromList","RemoveFromListSuccess","RemoveFromListError","UpdateListOrder","UpdateListOrderSuccess","UpdateListOrderError","GetSelectedList","GetSelectedListSuccess","GetSelectedListError","UpdateSelectedList","UpdateSelectedListSuccess","UpdateSelectedListError","LogoutEditorState","UpdateReviewNewsLoaded","RouteRoleService","route","routeObserver$","guardRoute","isPublic","callCheckToken","root","firstChild","roles_","sRoutes","roleSubscription$","RootStore","roles","includes","Object","keys","permissions","role_key","permission","FullComponent","dir","on","toggle","reducers","NewsState","ReviewNews","logger","metaReducers","AppComponent","_location","DEFAULT_PERFECT_SCROLLBAR_CONFIG","suppressScrollX","wheelSpeed","wheelPropagation","AppModule","provide","useClass","multi","useValue","forRoot","instrument","maxAge","imports","bootstrap","entryComponents","USER_LOGIN","USER_LOGIN_SUCCESS","USER_LOGIN_ERROR","USER_LOGOUT","USER_LOGOUT_SUCCESS","USER_LOGOUT_ERROR","USER_GET_SETTINGS","USER_GET_SETTINGS_SUCCESS","USER_GET_SETTINGS_ERROR","SERVER_USER_GET_SETTINGS","SERVER_USER_GET_SETTINGS_SUCCESS","SERVER_USER_GET_SETTINGS_ERROR","USER_GET_ROLES","USER_401","UserLogin","UserLoginSuccess","UserLoginError","UserLogoutError","GetUserSettingsSuccess","GetUserSettingsError","GetUserRoles","ServerGetUserSettingsSuccess","ServerGetUserSettingsError","AppRoutes","path","component","loadChildren","then","m","AdminModule","redirectTo","pathMatch","DashboardsModule","canActivate","EditorModule","NewsModule","ControlModule","MaterialComponentsModule","AppsModule","FormModule","TablesModule","DataTablesModule","PagesModule","WidgetsModule","ChartslibModule","AuthenticationModule","webpackEmptyAsyncContext","req","Promise","resolve","Error","code","module","HttpInterceptorService","sessonService","snackBar","isRefreshingToken","tokenSubject","clone","setHeaders","Authorization","request","handle","addToken","open","statusText","duration","handle400Error","handle401Error","ConfirmDialogComponent","myNews","myNewsPageState","currentPage","perPage","lastPages","totalResults","trashNews","trashNewsPageState","isMyNewsLoaded","isTrashLoaded","tickers","current_page","Number","per_page","last_page","total","assign","newsstatus","isTrashNewsLoaded","getNewsState","getMyNewsByStatus","x","SessionService","sessionExpiryTime","checkSessionExpiry","sessionStorage","clear","accessToken","roles_all","date","Date","setFullYear","getFullYear","setItem","JSON","stringify","toJSON","profile","getUserLogoutSetting","create","observer","parse","roles_a","complete","get","nowDate","sessionDate","getItem","CallLogoutState","getMonth","getDay","nowTime","getHours","getMinutes","getSeconds","sessionTime","regExp","parseInt","replace","found","checkExpiry","list","user_role","News","news_name","heading","body","newsstatus_id","language","Language","newsbar","NewsBar","draft","title","detail","created_at","updated_a","TickerNews","language_code","Newsstatus","NewNotes","note","NewsList","updated_at","list_news","ListNews","news_list_id","ListOrder","order","Ticker","TickersNews","JournalistDashboard","news_numbers","JournalistDashboardNewsNumbers","my","reject","approved","in_review","ThaanaDirective","elem","_model","control","renderer","appDnrmsThaana","firstChar","ngModelChange","_transFrom","_transToKbd","selStart","nativeElement","selectionStart","selEnd","selectionEnd","applyDhivehiStyles","apply","style","color","fontSize","textAlign","direction","lineHeight","fontFamily","addClass","unicodeBidi","removeClass","nElm","_inputValue","_key","_keyChar","ctrl","length","substr","which","modifier","modifiers","CONTROL_MASK","ctrlKey","selOld","transIndex","tChar","new_text","substring","valueAccessor","writeValue","setCursor","focus","setSelectionRange","host","SpinnerComponent","document","isSpinnerVisible","backgroundColor","template","encapsulation","None","Document","DemoMaterialModule","AddTickerNewsDialogComponent","onAdd","tickerNews","dhivehiEnabled","ticker_id","enabled","changeLanguage","doAdd","AppHeaderComponent","show_top_icons","text","chatArray","myuser","getUserState","getUser","AccordionAnchorDirective","navlink","onClick","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAuBaA,W,GAEX,qBACUC,OADV,EAEUC,WAFV,EAGUC,cAHV,EAIUC,KAJV,EAKUC,MALV,EAKwB;AAAA;;AAAA;;AAJd,aAAAJ,OAAA,GAAAA,OAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AAIV,aAAAC,KAAA,GAAyB,KAAKL,OAAL,CACvBM,IADuB,CAErB,6DAAO,wDAAP,CAFqB,EAGrB,2DAAI,UAACC,MAAD;AAAA,iBAAmCA,MAAM,CAACC,OAA1C;AAAA,SAAJ,CAHqB,EAIrB,iEAAU,UAAAA,OAAO,EAAI;AACnB,iBAAO,KAAI,CAACP,WAAL,CAAiBQ,MAAjB,CAAwBD,OAAO,CAACE,KAAhC,EAAuCF,OAAO,CAACG,QAA/C,EAAyDL,IAAzD,CACL,2DAAI,UAACM,IAAD,EAAgB;AAClB;AACA,iBAAI,CAACX,WAAL,CAAiBY,QAAjB,CAA0BD,IAA1B;;AACA,mBAAO,IAAI,8DAAJ,CAAiCA,IAAjC,CAAP;AACD,WAJD,CADK,EAML,kEAAW,UAACE,KAAD,EAAW;AACpBC,mBAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,mBAAO,gDAAa,IAAI,4DAAJ,EAAb,CAAP;AACD,WAHD,CANK,CAAP;AAUD,SAXD,CAJqB,CAAzB;AAmBA,aAAAG,YAAA,GAAgC,KAAKjB,OAAL,CAC9BM,IAD8B,CAE5B,6DAAO,gEAAP,CAF4B,EAG5B,2DAAI,UAACC,MAAD;AAAA,iBAA0CA,MAAM,CAACC,OAAjD;AAAA,SAAJ,CAH4B,EAI5B,2DAAI,UAACI,IAAD,EAAgB;AAClB;AACA,cAAI,KAAI,CAACV,cAAL,CAAoBgB,WAApB,CAAgCN,IAAhC,CAAJ,EAA2C,CACzC;AACA;AACD,WALiB,CAMlB;;AAED,SARD,CAJ4B,CAAhC;AAgBA,aAAAO,eAAA,GAAmC,KAAKnB,OAAL,CACjCM,IADiC,CAE/B,6DAAO,+DAAP,CAF+B,EAG/B,2DAAI,UAACC,MAAD;AAAA,iBAAyCA,MAAzC;AAAA,SAAJ,CAH+B,EAI/B,iEAAU,UAAAC,OAAO,EAAI;AACnB,iBAAO,KAAI,CAACN,cAAL,CAAoBkB,cAApB,GACJd,IADI,CAEH,2DAAI,UAACM,IAAD,EAAgB;AAClB,mBAAO,IAAI,oEAAJ,CAAuCA,IAAvC,CAAP;AACD,WAFD,CAFG,EAKH,kEAAW,UAACE,KAAD,EAAW;AACpBC,mBAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,mBAAO,gDAAa,IAAI,kEAAJ,EAAb,CAAP;AACD,WAHD,CALG,CAAP;AAUD,SAXD,CAJ+B,CAAnC;AAmBA,aAAAO,qBAAA,GAAyC,KAAKrB,OAAL,CACvCM,IADuC,CAErC,6DAAO,sEAAP,CAFqC,EAGrC,2DAAI,UAACC,MAAD;AAAA,iBAA+CA,MAA/C;AAAA,SAAJ,CAHqC,EAIrC,iEAAU,UAAAC,OAAO,EAAI;AACnB,iBAAO,KAAI,CAACN,cAAL,CAAoBoB,kBAApB,GAAyChB,IAAzC,CACL,2DAAI,UAACM,IAAD,EAAgB;AAClB,iBAAI,CAACV,cAAL,CAAoBgB,WAApB,CAAgCN,IAAhC;;AACA,mBAAO,IAAI,0EAAJ,CAA6CA,IAA7C,CAAP;AACD,WAHD,CADK,EAKL,kEAAW,UAACE,KAAD,EAAW;AACpBC,mBAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,mBAAO,gDAAa,IAAI,wEAAJ,EAAb,CAAP;AACD,WAHD,CALK,CAAP;AASD,SAVD,CAJqC,CAAzC;AAkBA,aAAAS,UAAA,GAA8B,KAAKvB,OAAL,CAC5BM,IAD4B,CAE1B,6DAAO,yDAAP,CAF0B,EAG1B,2DAAI,UAACC,MAAD;AAAA,iBAAoCA,MAApC;AAAA,SAAJ,CAH0B,EAI1B,iEAAU,UAAAC,OAAO,EAAI;AACnB,eAAI,CAACL,KAAL,CAAWqB,QAAX,CAAoB,IAAI,wEAAJ,EAApB;;AACA,eAAI,CAACrB,KAAL,CAAWqB,QAAX,CAAoB,IAAI,mFAAJ,EAApB;;AACA,eAAI,CAACvB,WAAL,CAAiBwB,SAAjB;;AAEA,eAAI,CAACrB,MAAL,CAAYsB,QAAZ,CAAqB,CAAC,uBAAD,CAArB,EALmB,CAMnB;;;AACA,iBAAO,gDAAa,IAAI,+DAAJ,EAAb,CAAP;AACD,SARD,CAJ0B,CAA9B;AAeA,aAAAC,iBAAA,GAAqC,KAAK3B,OAAL,CACnCM,IADmC,CAEjC,6DAAO,iEAAP,CAFiC,EAGjC,2DAAI,UAACC,MAAD,EAA2C;AAC7C;AACA,eAAI,CAACH,MAAL,CAAYsB,QAAZ,CAAqB,CAAC,uBAAD,CAArB;AACD,SAHD,CAHiC,CAArC;AAUA,aAAAE,OAAA,GAA2B,KAAK5B,OAAL,CACzBM,IADyB,CAErB,6DAAO,sDAAP,CAFqB,EAGrB,iEAAU,UAAAE,OAAO,EAAI;AACnBO,iBAAO,CAACc,IAAR,CAAa,kBAAb;AACA,iBAAO,gDAAa,IAAI,wDAAJ,EAAb,CAAP;AACD,SAHD,CAHqB,CAA3B;AApGI,O;;;yBARO9B,W,EAAW,6G,EAAA,iI,EAAA,wI,EAAA,yG,EAAA,8G;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW;;;AAWtB,kBADC,8DACD,E,0BAAO,+C,CAAP,G,qBAAA,E,OAAA,E,MAAA;;AAmBA,kBADC,6DAAO;AAAEyB,gBAAQ,EAAE;AAAZ,OAAP,CACD,E,0BAAc,+C,CAAd,G,qBAAA,E,cAAA,E,MAAA;;AAgBA,kBADC,8DACD,E,0BAAiB,+C,CAAjB,G,qBAAA,E,iBAAA,E,MAAA;;AAmBA,kBADC,8DACD,E,0BAAuB,+C,CAAvB,G,qBAAA,E,uBAAA,E,MAAA;;AAkBA,kBADC,8DACD,E,0BAAY,+C,CAAZ,G,qBAAA,E,YAAA,E,MAAA;;AAyBA,kBADC,8DACD,E,0BAAS,+C,CAAT,G,qBAAA,E,SAAA,E,MAAA;;;;;wEA5GWzB,W,EAAW;gBADvB;AACuB,U;;;;;;;;;;;;;AAWtBM,eAAK,EAAE,E;AAmBPY,sBAAY,EAAE,E;AAgBdE,yBAAe,EAAE,E;AAmBjBE,+BAAqB,EAAE,E;AAkBvBE,oBAAU,EAAE,E;AAyBZK,iBAAO,EAAE;;AAAF,O;;;;;;;;;;;;;;;;;ACnIT;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaE,S;AAIX,2BACYC,IADZ,EAEY3B,MAFZ,EAGY4B,IAHZ,EAGkC;AAAA;;AAFtB,eAAAD,IAAA,GAAAA,IAAA;AACA,eAAA3B,MAAA,GAAAA,MAAA;AACA,eAAA4B,IAAA,GAAAA,IAAA;AALZ,eAAAC,eAAA,GAAiC,IAAI,4CAAJ,EAAjC;AAMI;;;;iBAEJ,qBACEC,IADF,EAEEC,KAFF,EAE4B;AAAA;;AAE1B,iBAAKC,WAAL,GAAmB,KAAKL,IAAL,CAAUM,SAAV,CAAoB/B,IAApB,CAAyB,iEAAU,KAAK2B,eAAf,CAAzB,EAA0DK,SAA1D,CACf,UAAAC,QAAQ,EAAI;AACV,kBAAI,CAACA,QAAL,EAAgB;AACd,sBAAI,CAACnC,MAAL,CAAYsB,QAAZ,CAAqB,CAAC,uBAAD,CAArB;AACD;;AACD,oBAAI,CAACM,IAAL,CAAUQ,UAAV;AACD,aANc,CAAnB;AASA,mBAAO,IAAP;AACD;;;iBAED,uBAAc;AACZ,iBAAKP,eAAL,CAAqBC,IAArB;AACD;;;;;;;yBA5BUJ,S,EAAS,iH,EAAA,8G,EAAA,4H;AAAA,O;;;eAATA,S;AAAS,iBAATA,SAAS,K;AAAA,oBAFR;;;;;wEAEDA,S,EAAS;gBAHrB,wDAGqB;iBAHV;AACVW,sBAAU,EAAE;AADF,W;AAGU,U;;;;;;;;;;;;;;;;;;;;;;;;;;ACTtmBAAnB;AACA,UAAMC,kBAAkB,GAAG,2BAA3B;AACA,UAAMC,gBAAgB,GAAG,yBAAzB;AAEA,UAAMC,WAAW,GAAG,oBAApB;AACA,UAAMC,mBAAmB,GAAG,4BAA5B;AACA,UAAMC,iBAAiB,GAAG,0BAA1B;AAEA,UAAMC,cAAc,GAAG,uBAAvB;AACA,UAAMC,sBAAsB,GAAG,+BAA/B;AACA,UAAMC,oBAAoB,GAAG,6BAA7B;AAEA,UAAMC,WAAW,GAAG,oBAApB;AACA,UAAMC,mBAAmB,GAAG,4BAA5B;AACA,UAAMC,iBAAiB,GAAG,0BAA1B;AAEA,UAAMC,YAAY,GAAG,qBAArB;AACA,UAAMC,oBAAoB,GAAG,6BAA7B;AACA,UAAMC,kBAAkB,GAAG,2BAA3B;AAEA,UAAMC,kBAAkB,GAAG,2BAA3B;AACA,UAAMC,qBAAqB,GAAG,8BAA9B;AACA,UAAMC,wBAAwB,GAAG,iCAAjC;AAEA,UAAMC,YAAY,GAAG,qBAArB;AACA,UAAMC,oBAAoB,GAAG,6BAA7B;AACA,UAAMC,kBAAkB,GAAG,2BAA3B;AAEA,UAAMC,WAAW,GAAG,oBAApB;AACA,UAAMC,mBAAmB,GAAG,4BAA5B;AACA,UAAMC,iBAAiB,GAAG,0BAA1B;AAEA,UAAMC,eAAe,GAAG,wBAAxB;AACA,UAAMC,uBAAuB,GAAG,gCAAhC;AACA,UAAMC,qBAAqB,GAAG,8BAA9B;AAEA,UAAMC,mBAAmB,GAAG,4BAA5B;AACA,UAAMC,2BAA2B,GAAG,oCAApC;AACA,UAAMC,yBAAyB,GAAG,kCAAlC;AAEA,UAAMC,sBAAsB,GAAG,+BAA/B;AACA,UAAMC,8BAA8B,GAAG,uCAAvC;AACA,UAAMC,4BAA4B,GAAG,qCAArC;AAEA,UAAMC,kBAAkB,GAAG,2BAA3B;AACA,UAAMC,0BAA0B,GAAG,mCAAnC;AACA,UAAMC,wBAAwB,GAAG,iCAAjC;AAEA,UAAMC,UAAU,GAAG,mBAAnB;AACA,UAAMC,kBAAkB,GAAG,2BAA3B;AACA,UAAMC,gBAAgB,GAAG,yBAAzB;AAEA,UAAMC,iBAAiB,GAAG,0BAA1B,C,CAAsD;;AAG7D;;UACaC,S,GAEX,mBAAmB1E,OAAnB,EAAqE;AAAA;;AAAlD,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOtC,WAAP;AAC8D,O;;UAG5DuC,gB,GAEX,0BAAmB5E,OAAnB,EAAiC;AAAA;;AAAd,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOrC,mBAAP;AAC0B,O;;UAGxBuC,c,GAAb;AAAA;;AACW,aAAAF,IAAA,GAAOpC,iBAAP;AACV,O;AAGD;;;UACauC,Y,GAEX,sBAAmB9E,OAAnB,EAAqE;AAAA;;AAAlD,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOnC,cAAP;AAC8D,O;;UAG5DuC,mB,GAEX,6BAAmB/E,OAAnB,EAAiC;AAAA;;AAAd,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOlC,sBAAP;AAC0B,O;;UAGxBuC,iB,GAAb;AAAA;;AACW,aAAAL,IAAA,GAAOjC,oBAAP;AACV,O;AAGD;;;;;;UAIauC,O,GAEX,iBAAmBjF,OAAnB,EAAoC;AAAA;;AAAjB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOzC,UAAP;AAC6B,O;;UAG3BgD,c,GAEX,wBAAmBlF,OAAnB,EAAkC;AAAA;;AAAf,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOxC,kBAAP;AAC2B,O;;UAGzBgD,Y,GAAb;AAAA;;AACW,aAAAR,IAAA,GAAOvC,gBAAP;AACV,O;AAGD;;;;;;UAIagD,U,GAEX,oBAAmBpF,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOhC,WAAP;AACqC,O;;UAGnC0C,iB,GAEX,2BAAmBrF,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAO/B,mBAAP;AACqC,O;;UAGnC0C,e,GAAb;AAAA;;AACW,aAAAX,IAAA,GAAO9B,iBAAP;AACV,O;AAGD;;;UACa0C,W,GAEX,qBAAmBvF,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAO7B,YAAP;AACqC,O;;UAGnC0C,kB,GAEX,4BAAmBxF,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAO5B,oBAAP;AACqC,O;;UAGnC0C,gB,GAAb;AAAA;;AACW,aAAAd,IAAA,GAAO3B,kBAAP;AACV,O;AAGD;;;;;;UAIa0C,gB,GAEX,0BAAmB1F,OAAnB,EAAmD;AAAA;;AAAhC,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAO1B,kBAAP;AAC4C,O;;UAE1C0C,kB,GAEX,4BAAmB3F,OAAnB,EAAyD;AAAA;;AAAtC,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOzB,qBAAP;AACkD,O;;UAEhD0C,qB,GAEX,+BAAmB5F,OAAnB,EAA4D;AAAA;;AAAzC,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOxB,wBAAP;AACqD,O;AAIhE;;;;;;UAIa0C,W,GAEX,qBAAmB7F,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOvB,YAAP;AACqC,O;;UAGnC0C,kB,GAEX,4BAAmB9F,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOtB,oBAAP;AACqC,O;;UAGnC0C,gB,GAAb;AAAA;;AACW,aAAApB,IAAA,GAAOrB,kBAAP;AACV,O;AAGD;;;;;;AAKA;;;;;UAGa0C,U,GAAb;AAAA;;AACW,aAAArB,IAAA,GAAOpB,WAAP;AACV,O;;UAEY0C,iB,GAEX,2BAAmBjG,OAAnB,EAAsC;AAAA;;AAAnB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOnB,mBAAP;AAC+B,O;;UAG7B0C,e,GAAb;AAAA;;AACW,aAAAvB,IAAA,GAAOlB,iBAAP;AACV,O;AAED;;;;;UAGa0C,a,GAEX,uBAAmBnG,OAAnB,EAAyC;AAAA;;AAAtB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOjB,eAAP;AACkC,O;;UAGhC0C,oB,GAEX,8BAAmBpG,OAAnB,EAAsC;AAAA;;AAAnB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOhB,uBAAP;AAC+B,O;;UAG7B0C,kB,GAAb;AAAA;;AACW,aAAA1B,IAAA,GAAOf,qBAAP;AACV,O;AAED;;;;;UAGa0C,iB,GAEX,2BAAmBtG,OAAnB,EAAwD;AAAA;;AAArC,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOd,mBAAP;AACiD,O;;UAG/C0C,wB,GAEX,kCAAmBvG,OAAnB,EAAsC;AAAA;;AAAnB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOb,2BAAP;AAC+B,O;;UAG7B0C,sB,GAAb;AAAA;;AACW,aAAA7B,IAAA,GAAOZ,yBAAP;AACV,O;AAED;;;;;UAGa0C,oB,GAEX,8BAAmBzG,OAAnB,EAAwD;AAAA;;AAArC,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOX,sBAAP;AACiD,O;;UAG/C0C,2B,GAEX,qCAAmB1G,OAAnB,EAAsC;AAAA;;AAAnB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOV,8BAAP;AAC+B,O;;UAG7B0C,yB,GAAb;AAAA;;AACW,aAAAhC,IAAA,GAAOT,4BAAP;AACV,O;AAED;;;;;UAGa0C,gB,GAEX,0BAAmB5G,OAAnB,EAAwD;AAAA;;AAArC,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOR,kBAAP;AACiD,O;;UAG/C0C,uB,GAEX,iCAAmB7G,OAAnB,EAAsC;AAAA;;AAAnB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOP,0BAAP;AAC+B,O;;UAG7B0C,qB,GAAb;AAAA;;AACW,aAAAnC,IAAA,GAAON,wBAAP;AACV,O;AAED;;;;;UAGa0C,S,GAEX,mBAAmB/G,OAAnB,EAAoC;AAAA;;AAAjB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOL,UAAP;AAC6B,O;;UAG3B0C,gB,GAEX,0BAAmBhH,OAAnB,EAAsC;AAAA;;AAAnB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOJ,kBAAP;AAC+B,O;;UAG7B0C,c,GAAb;AAAA;;AACW,aAAAtC,IAAA,GAAOH,gBAAP;AACV,O;AAMD;;;UACa0C,e,GAAb;AAAA;;AACW,aAAAvC,IAAA,GAAOF,iBAAP;AACV,O;;;;;;;;;;;;;;;;;ACtSD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AA4BA,UAAM0C,SAAS,GAAG;AAChB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4JA;AACExF,aAAK,EAAE,OADT;AAEEyF,YAAI,EAAE,gBAFR;AAGE5F,YAAI,EAAE,OAHR;AAIEmD,YAAI,EAAE,KAJR;AAKE0C,YAAI,EAAE,SALR;AAMEC,gBAAQ,EAAE,CACR;AAAE3F,eAAK,EAAE,iBAAT;AAA4ByF,cAAI,EAAE,WAAlC;AAA+CzC,cAAI,EAAE;AAArD,SADQ,EAER;AAAEhD,eAAK,EAAE,cAAT;AAAyByF,cAAI,EAAE,cAA/B;AAA+CzC,cAAI,EAAE;AAArD,SAFQ,EAIR;AACEhD,eAAK,EAAE,eADT;AAEEyF,cAAI,EAAE,eAFR;AAGEzC,cAAI,EAAE,UAHR;AAIE4C,qBAAW,EAAE,CACX;AACE5F,iBAAK,EAAE,MADT;AAEEyF,gBAAI,EAAE,YAFR;AAGEzC,gBAAI,EAAE;AAHR,WADW,EAMX;AACEhD,iBAAK,EAAE,UADT;AAEEyF,gBAAI,EAAE,eAFR;AAGEzC,gBAAI,EAAE;AAHR,WANW;AAJf,SAJQ;AANZ,OA7JgB,EA0LhB;AACEhD,aAAK,EAAE,MADT;AAEEyF,YAAI,EAAE,WAFR;AAGE5F,YAAI,EAAE,MAHR;AAIEmD,YAAI,EAAE,KAJR;AAKE0C,YAAI,EAAE,UALR;AAMEC,gBAAQ,EAAE,CACR;AAAC3F,eAAK,EAAE,SAAR;AAAmByF,cAAI,EAAE,gBAAzB;AAA2CzC,cAAI,EAAE;AAAjD,SADQ,EAER;AAAChD,eAAK,EAAE,MAAR;AAAgByF,cAAI,EAAE,eAAtB;AAAuCzC,cAAI,EAAE;AAA7C,SAFQ;AANZ,OA1LgB,EAqMhB;AACEhD,aAAK,EAAE,QADT;AAEEyF,YAAI,EAAE,aAFR;AAGE5F,YAAI,EAAE,aAHR;AAIEmD,YAAI,EAAE,KAJR;AAKE0C,YAAI,EAAE,oBALR;AAMEC,gBAAQ,EAAE,CACR;AAAC3F,eAAK,EAAE,WAAR;AAAqByF,cAAI,EAAE,WAA3B;AAAwCzC,cAAI,EAAE;AAA9C,SADQ,EAER;AAAChD,eAAK,EAAE,QAAR;AAAkByF,cAAI,EAAE,aAAxB;AAAuCzC,cAAI,EAAE;AAA7C,SAFQ,EAGR;AAAChD,eAAK,EAAE,MAAR;AAAgByF,cAAI,EAAE,WAAtB;AAAmCzC,cAAI,EAAE;AAAzC,SAHQ;AANZ,OArMgB,EAiNhB;AACEhD,aAAK,EAAE,MADT;AAEEyF,YAAI,EAAE,MAFR;AAGE5F,YAAI,EAAE,YAHR;AAIEmD,YAAI,EAAE,KAJR;AAKE0C,YAAI,EAAE,eALR;AAMEC,gBAAQ,EAAE,CACR;AAAC3F,eAAK,EAAE,WAAR;AAAqByF,cAAI,EAAE,gBAA3B;AAA6CzC,cAAI,EAAE;AAAnD,SADQ,EAER;AAAChD,eAAK,EAAE,OAAR;AAAiByF,cAAI,EAAE,YAAvB;AAAqCzC,cAAI,EAAE;AAA3C,SAFQ,EAGR;AACEhD,eAAK,EAAE,IADT;AAEEyF,cAAI,EAAE,SAFR;AAEmBzC,cAAI,EAAE,MAFzB,CAGE;AACA;AACA;;AALF,SAHQ,EAUR;AAAChD,eAAK,EAAE,QAAR;AAAkByF,cAAI,EAAE,aAAxB;AAAuCzC,cAAI,EAAE;AAA7C,SAVQ,EAWR;AACEhD,eAAK,EAAE,OADT;AAEEyF,cAAI,EAAE,OAFR;AAEiBzC,cAAI,EAAE,MAFvB,CAGE;AACA;AACA;;AALF,SAXQ;AANZ,OAjNgB,EA2OhB;AACEhD,aAAK,EAAE,SADT;AAEEyF,YAAI,EAAE,YAFR;AAGE5F,YAAI,EAAE,SAHR;AAIEmD,YAAI,EAAE,KAJR;AAKE0C,YAAI,EAAE,SALR;AAMEC,gBAAQ,EAAE,CACR;AAAC3F,eAAK,EAAE,SAAR;AAAmByF,cAAI,EAAE,SAAzB;AAAoCzC,cAAI,EAAE;AAA1C,SADQ;AAER;;AAEA;AAAChD,eAAK,EAAE,QAAR;AAAkByF,cAAI,EAAE,QAAxB;AAAkCzC,cAAI,EAAE;AAAxC,SAJQ;AANZ,OA3OgB,CAAlB;;UA8Pa6C,S;AAFb;AAAA;;AAGE,eAAAC,KAAA,GAAQ,CAAR;AAUD;;;;iBARC,kBAAS,CACP;AACD;;;iBAED,uBAAW;AACT,mBAAON,SAAP;AACD;;;;;;;yBATUK,S;AAAS,O;;;eAATA,S;AAAS,iBAATA,SAAS;;;;;wEAATA,S,EAAS;gBAFrB;AAEqB,U;;;;;;;;;;;;;;;;;;AC1RtB;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;AACA;;;AAEO,UAAME,WAAW,GAAG;AACzBC,kBAAU,EAAE,KADa;;AAGzB;;AAGAC,cAAM,EAAE,+BANiB;AAOzBC,kBAAU,EAAE,uCAPa;AAQzBC,cAAM,EAAE;AACNC,aAAG,EAAE,sBADC;AAENC,iBAAO,EAAE;AAFH;AARiB,OAApB;;;;;;;;;;;;;;;;ACJP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUaC,kB;AAwCX,oCAAqBrI,MAArB,EAAqC;AAAA;;AAAA;;AAAhB,eAAAA,MAAA,GAAAA,MAAA;AAtCX,eAAAsI,QAAA,GAA0C,EAA1C;AAuCRC,oBAAU,CAAC;AAAA,mBAAM,MAAI,CAACC,cAAL,EAAN;AAAA,WAAD,CAAV;AACD;;;;iBAtCD,yBAAgBC,YAAhB,EAAoD;AAClD,iBAAKH,QAAL,CAAcI,OAAd,CAAsB,UAACC,IAAD,EAAkC;AACtD,kBAAIA,IAAI,KAAKF,YAAb,EAA2B;AACzBE,oBAAI,CAACC,QAAL,GAAgB,KAAhB;AACD;AACF,aAJD;AAKD;;;iBAED,iBAAQD,IAAR,EAAoC;AAClC,iBAAKL,QAAL,CAAcO,IAAd,CAAmBF,IAAnB;AACD;;;iBAED,qBAAYA,IAAZ,EAAwC;AACtC,gBAAMG,KAAK,GAAG,KAAKR,QAAL,CAAcS,OAAd,CAAsBJ,IAAtB,CAAd;;AACA,gBAAIG,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,mBAAKR,QAAL,CAAcU,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;AACD;AACF;;;iBAED,0BAAiB;AAAA;;AACf,iBAAKR,QAAL,CAAcI,OAAd,CAAsB,UAACC,IAAD,EAAkC;AACtD,kBAAIA,IAAI,CAACM,KAAT,EAAgB;AACd,oBAAMC,QAAQ,GAAG,MAAI,CAAClJ,MAAL,CAAYmJ,GAA7B;AACA,oBAAMC,UAAU,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAnB;;AACA,oBAAID,UAAU,CAACL,OAAX,CAAoBJ,IAAI,CAACM,KAAzB,IAAmC,CAAvC,EAA0C;AACxCN,sBAAI,CAACC,QAAL,GAAgB,IAAhB;;AACA,wBAAI,CAACU,eAAL,CAAqBX,IAArB;AACD;AACF;AACF,aATD;AAUD;;;iBAED,iCAAqB;AAAA;;AACnB,iBAAK3I,MAAL,CAAYuJ,MAAZ,CAAmBrJ,IAAnB,CAAwB,8DAAO,UAAAsJ,KAAK;AAAA,qBAAIA,KAAK,YAAY,6DAArB;AAAA,aAAZ,CAAxB,EAAyEtH,SAAzE,CAAmF,UAAAuH,CAAC;AAAA,qBAAI,MAAI,CAACjB,cAAL,EAAJ;AAAA,aAApF;AACD;;;;;;;yBAtCUH,kB,EAAkB,uH;AAAA,O;;;cAAlBA,kB;AAAkB;;;;;wEAAlBA,kB,EAAkB;gBAH9B,uDAG8B;iBAHpB;AACTqB,oBAAQ,EAAE;AADD,W;AAGoB,U;;;;;;;;;;;;;;;;;;;;;;ACV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASO,UAAMC,YAAY,GAAoB;AACzCC,YAAI,EAAE,EADmC;AAEzCC,gBAAQ,EAAE,KAF+B;AAGzC;AACAC,aAAK,EAAE,EAJkC;AAKzCC,oBAAY,EAAE,KAL2B;AAMzCC,oBAAY,EAAE;AAN2B,OAAtC;;AAcA,eAASC,OAAT,GAAqE;AAAA,YAApDlI,KAAoD,uEAA5C4H,YAA4C;AAAA,YAA9BxJ,MAA8B;AAC1EQ,eAAO,CAACC,GAAR,CAAYmB,KAAZ,EAAmB5B,MAAnB;;AAEA,gBAAQA,MAAM,CAAC4E,IAAf;AAEE;;;AAGA,eAAK,oEAAL;AAAoC;AAClC,qBAAO,MAAP,OAAO,CAAP,kBACKhD,KADL,CAAO,EACG;AACR6H,oBAAI,EAAE,EADE;AAERC,wBAAQ,EAAE;AAFF,eADH,CAAP;AAKD;;AAED,eAAK,4EAAL;AAA4C;AAC1C,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR6H,oBAAI,EAAEzJ,MAAM,CAACC,OADL;AAERyJ,wBAAQ,EAAE;AAFF,eADH,CAAP;AAKD;;AAED;;;;AAGA,eAAK,iEAAL;AAAiC;AAC/B,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED,eAAK,yEAAL;AAAyC;AACvC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR6H,oBAAI,qBACC7H,KAAK,CAAC6H,IAAN,CAAWM,MAAX,CAAmB,UAACN,IAAD;AAAA,yBAAUA,IAAI,CAACO,EAAL,KAAYhK,MAAM,CAACC,OAAP,CAAe+J,EAArC;AAAA,iBAAnB,CADD,CADI;AAIRN,wBAAQ,EAAE;AAJF,eADH,CAAP;AAOD;;AAED,eAAK,uEAAL;AAAuC;AACrC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED;;;;AAGA,eAAK,gEAAL;AAAgC;AAC9B,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED,eAAK,wEAAL;AAAwC;AACtC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR6H,oBAAI,qBACC7H,KAAK,CAAC6H,IAAN,CAAWM,MAAX,CAAmB,UAACN,IAAD;AAAA,yBAAUA,IAAI,CAACO,EAAL,KAAYhK,MAAM,CAACC,OAAP,CAAegK,OAArC;AAAA,iBAAnB,CADD,CADI;AAIRP,wBAAQ,EAAE;AAJF,eADH,CAAP;AAOD;;AAED,eAAK,sEAAL;AAAsC;AACpC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED;;;;;;AAKA;;;;AAGA,eAAK,8DAAL;AAA8B;AAC5B,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACRgI,4BAAY,EAAE;AADN,eADH,CAAP;AAID;;AAED,eAAK,sEAAL;AAAsC;AACpC,qBAAO,MAAP,OAAO,CAAP,kBACKhI,KADL,CAAO,EACG;AACR+H,qBAAK,EAAE3J,MAAM,CAACC,OADN;AAER2J,4BAAY,EAAE;AAFN,eADH,CAAP;AAKD;;AAED,eAAK,oEAAL;AAAoC;AAClC,qBAAO,MAAP,OAAO,CAAP,kBACKhI,KADL,CAAO,EACG;AACRgI,4BAAY,EAAE;AADN,eADH,CAAP;AAID;;AAED;;;;AAIA,eAAK,sEAAL;AAAsC;AACpC,qBAAO,MAAP,OAAO,CAAP,kBACKhI,KADL,CAAO,EACG;AACRgI,4BAAY,EAAE;AADN,eADH,CAAP;AAID;;AAED,eAAK,8EAAL;AAA8C;AAC5C,qBAAO,MAAP,OAAO,CAAP,kBACKhI,KADL,CAAO,EACG;AACR+H,qBAAK,EAAE3J,MAAM,CAACC,OADN;AAER2J,4BAAY,EAAE;AAFN,eADH,CAAP;AAKD;;AAED,eAAK,4EAAL;AAA4C;AAC1C,qBAAO,MAAP,OAAO,CAAP,kBACKhI,KADL,CAAO,EACG;AACRgI,4BAAY,EAAE;AADN,eADH,CAAP;AAID;;AAED;;;;AAGA,eAAK,gEAAL;AAAgC;AAC9B,qBAAO,MAAP,OAAO,CAAP,kBACKhI,KADL,CAAO,EACG;AACRgI,4BAAY,EAAE;AADN,eADH,CAAP;AAID;;AAED,eAAK,wEAAL;AAAwC;AACtC,qBAAO,MAAP,OAAO,CAAP,kBACKhI,KADL,CAAO,EACG;AACRgI,4BAAY,EAAE,KADN;AAER;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAD,qBAAK,EAAE3J,MAAM,CAACC;AAjBN,eADH,CAAP;AAoBD;;AAED;;;;AAGA,eAAK,qEAAL;AAAqC;AACnC,qBAAO,MAAP,OAAO,CAAP,kBACK2B,KADL,CAAO,EACG;AACRgI,4BAAY,EAAE;AADN,eADH,CAAP;AAID;;AAED,eAAK,6EAAL;AAA6C;AAC3C,qBAAO,MAAP,OAAO,CAAP,kBACKhI,KADL,CAAO,EACG;AACRgI,4BAAY,EAAE,KADN;AAERD,qBAAK,EAAE3J,MAAM,CAACC;AAFN,eADH,CAAP;AAKD;;AACD;;;;AAGA,eAAK,sEAAL;AAAsC;AACpC,qBAAO,MAAP,OAAO,CAAP,kBACK2B,KADL,CAAO,EACG;AACRgI,4BAAY,EAAE;AADN,eADH,CAAP;AAID;;AAED,eAAK,8EAAL;AAA8C;AAC5C,qBAAO,MAAP,OAAO,CAAP,kBACKhI,KADL,CAAO,EACG;AACRgI,4BAAY,EAAE,KADN;AAERD,qBAAK,EAAE3J,MAAM,CAACC;AAFN,eADH,CAAP;AAKD;;AACD;;;;AAGA,eAAK,8EAAL;AAA8C;AAC5C,qBAAO,MAAP,OAAO,CAAP,kBACK2B,KADL,CAAO,EACG;AACRiI,4BAAY,EAAE7J,MAAM,CAACC,OAAP,CAAeiK;AADrB,eADH,CAAP;AAID;;AACD;;;;AAGA,eAAK,iFAAL;AAAiD;AAC/C,qBAAO,MAAP,OAAO,CAAP,kBACKtI,KADL,CAAO,EACG;AACRiI,4BAAY,EAAE7J,MAAM,CAACC,OAAP,CAAeiK;AADrB,eADH,CAAP;AAID;;AAGD;;;;AAGA,eAAK,8EAAL;AAA8C;AAC5C,qBAAO,MAAP,OAAO,CAAP,kBACKtI,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE1J,MAAM,CAACC,OAAP,CAAeyJ;AADjB,eADH,CAAP;AAID;;AAED,eAAK,wEAAL;AAAwC;AACtC,qBAAOF,YAAP;AACD;;AAED;AAAS;AACP,qBAAO5H,KAAP;AACD;AA1OH;AA4OD;;AAEM,UAAMuI,kBAAkB,GAAG,0EAAuC,iBAAvC,CAA3B;AAEA,UAAMC,SAAS,GAAG,mEACvBD,kBADuB,EAEvB,UAACvI,KAAD;AAAA,eAA4BA,KAAK,CAAC6H,IAAlC;AAAA,OAFuB,CAAlB;;AAKA,UAAMY,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAUN,EAAV;AAAA,eAAiB,mEAAeG,kBAAf,EAAmC,UAACI,QAAD,EAAc;AAC3F,cAAIA,QAAJ,EAAc;AACZ,mBAAOA,QAAQ,CAACD,OAAD,CAAR,CAAkBE,IAAlB,CAAuB,UAAAC,IAAI,EAAI;AACpC,qBAAOA,IAAI,CAACT,EAAL,KAAYA,EAAnB;AACD,aAFM,CAAP;AAGD,WAJD,MAIO;AACL,mBAAO,EAAP;AACD;AACF,SAR2C,CAAjB;AAAA,OAApB;;;;;;;;;;;;;;;;;AC/QP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAMA;;;UAKaU,W;AAQX,6BACYC,OADZ,EAEYC,IAFZ,EAE4B;AAAA;;AADhB,eAAAD,OAAA,GAAAA,OAAA;AACA,eAAAC,IAAA,GAAAA,IAAA;AARJ,eAAAC,OAAA,GAAU,sEAAYhD,MAAtB;AAIR,eAAA/F,SAAA,GAAY,IAAI,oDAAJ,CAA6B,KAAKE,QAAlC,CAAZ;;AAME,cAAI,KAAK2I,OAAL,CAAaG,UAAb,CAAwB,YAAxB,CAAJ,EAA2C;AACzC,iBAAKhJ,SAAL,CAAeH,IAAf,CAAoB,IAApB;AACA,iBAAKK,QAAL,GAAgB,IAAhB;AACD;AACF;;;;iBAEM,sBAAa;AAClB,mBAAO,CAAC,CAAC,KAAK2I,OAAL,CAAaG,UAAb,CAAwB,YAAxB,CAAT;AACD;;;iBAEM,qBAAY;AACjBtK,mBAAO,CAACC,GAAR,CAAY,UAAZ;AACA,iBAAKqB,SAAL,CAAeH,IAAf,CAAoB,KAApB;AACA,iBAAKK,QAAL,GAAgB,KAAhB;AACA,iBAAK2I,OAAL,CAAaI,OAAb;AACD;;;iBAEM,gBAAO5K,KAAP,EAAsBC,QAAtB,EAAwC;AAC7C,mBAAO,KAAKwK,IAAL,CAAUI,IAAV,CAAoB,KAAKH,OAAL,GAAe,eAAnC,EAAoD;AAAE1K,mBAAK,EAALA,KAAF;AAASC,sBAAQ,EAARA;AAAT,aAApD,CAAP;AACD,W,CAED;;;;iBACO,kBAAS6K,SAAT,EAA0B;AAC/B,gBAAK,CAACA,SAAS,CAACC,KAAZ,IAAuB,CAACD,SAAS,CAAC5D,IAAtC,EAA6C;AAC3C;AACD;;AAED,iBAAKvF,SAAL,CAAeH,IAAf,CAAoB,IAApB;AACA,iBAAKK,QAAL,GAAgB,IAAhB;AAEA,iBAAK2I,OAAL,CAAahK,WAAb,CAAyBsK,SAAzB;AACD;;;iBAEM,sBAAaC,KAAb,EAAoB;AACzB;;;;AAIA;;AAEA;;;AAIA,mBAAO,KAAKN,IAAL,CAAUI,IAAV,CAAoB,KAAKH,OAAL,GAAe,iBAAf,GAAmCK,KAAvD,EAA+D,IAA/D,CAAP;AACD;;;iBAEM,2BAAkB;AACvB,mBAAO,KAAKP,OAAL,CAAa9J,cAApB;AACD;;;;;;;yBA7DU6J,W,EAAW,uH,EAAA,uH;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFV;;;;;wEAEDA,W,EAAW;gBAHvB,wDAGuB;iBAHZ;AACVxI,sBAAU,EAAE;AADF,W;AAGY,U;;;;;;;;;;;;;;;;;;;;;;;;ACZxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UASaiJ,sB;AAoBX,wCAAwCC,GAAxC,EAAiE;AAAA;;AAC/D,eAAKA,GAAL,GAAWA,GAAX;AACD;;;;eAlBD,eAEY;AACV,mBAAO,KAAKC,SAAZ;AACD,W;eAED,aAAaC,KAAb,EAA6B;AAC3B,iBAAKD,SAAL,GAAiBC,KAAjB;;AACA,gBAAIA,KAAJ,EAAW;AACT,mBAAKF,GAAL,CAASjC,eAAT,CAAyB,IAAzB;AACD;AACF;;;iBASD,oBAAQ;AACN,iBAAKiC,GAAL,CAASG,OAAT,CAAiB,IAAjB;AAED;;;iBAED,uBAAW;AACT,iBAAKH,GAAL,CAASI,WAAT,CAAqB,IAArB;AACD;;;iBAED,kBAAM;AACJ,iBAAK/C,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACD;;;;;;;yBAnCU0C,sB,EAAsB,gEAoBb,uEApBa,C;AAoBK,O;;;cApB3BA,sB;AAAsB,iD;AAAA,mB;AAAA;AAAA;;;;;;;;;;;;wEAAtBA,sB,EAAsB;gBAHlC,uDAGkC;iBAHxB;AACT5B,oBAAQ,EAAE;AADD,W;AAGwB,U;;;;oBAoBpB,oD;qBAAO,uE;;;;AAlBJT,eAAK,EAAE,CAAF;kBAApB;AAAoB,WAAE,C;AAInBL,kBAAQ;kBAFX,yDAEW;mBAFC,gB;AAED,a;kBADX;WACW;;;;;;;;;;;;;;;;;;;ACfd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC0BkB;;AACE;;AACE;;AAAgE;;AAAa;;AAC7E;;AAAuE;;AAAc;;AACvF;;AACF;;;;;;;;;AALyD;;AAElD;;AAAA;;AAA6D;;AAAA;;AAC7D;;AAAA;;AAAoE;;AAAA;;;;;;;;AAU3F;;AAA8E;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAM;;;;;;;;AAChH;;AAAqJ;AAAA;;AAAA;;AAAA,sCAAqB,IAArB;AAAyB,WAAzB;;AAA4B;;AAAI;;;;;;AAA/D;;;;;;;;AACtH;;AAAuF;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAO;;;;UDjC7GgD,uB;AAIX,yCACSC,SADT,EAEkCC,IAFlC,EAE4C;AAAA;;AADnC,eAAAD,SAAA,GAAAA,SAAA;AACyB,eAAAC,IAAA,GAAAA,IAAA;AALlC,eAAAC,QAAA,GAAW,IAAI,0DAAJ,EAAX;AACA,eAAAC,MAAA,GAAS,IAAI,0DAAJ,EAAT;AAKK;;;;iBAEL,qBAAYC,YAAZ,EAAmC;AACjC,iBAAKJ,SAAL,CAAeK,KAAf,CAAqBD,YAArB;AACD;;;iBAED,kBAAS9B,EAAT,EAAa;AACX,iBAAKgC,WAAL,CAAiB,KAAjB;AACA,iBAAKJ,QAAL,CAAcK,IAAd,CAAmBjC,EAAnB;AACD;;;iBAED,gBAAOA,EAAP,EAAW;AACT,iBAAKgC,WAAL,CAAiB,KAAjB;AACA,iBAAKH,MAAL,CAAYI,IAAZ,CAAiBjC,EAAjB;AACD;;;;;;;yBArBUyB,uB,EAAuB,sI,EAAA,gEAMxB,wEANwB,C;AAMT,O;;;cANdA,uB;AAAuB,6C;AAAA,iB;AAAA,gB;AAAA,+uB;AAAA;AAAA;ACRpC;;AAAqB;;AAAkB;;AACvC;;AACE;;AAEI;;AACI;;AACJ;;AAEA;;AACE;;AACF;;AAEA;;AACI;;AACJ;;AAEA;;AACE;;AACF;;AAEA;;AACI;;AACI;;AACI;;AAAgB;;AAAW;;AAC/B;;AACA;;AACI;;AAMJ;;AACJ;;AACJ;;AACJ;;AACF;;AAEA;;AACE;;AACA;;AACA;;AACF;;;;AA1CqB;;AAAA;;AAIsB;;AAAA;;AACjC;;AAAA;;AAQ2D;;AAAA;;AAAtD;;AAaY;;AAAA;;AAaO;;AAAA;;AACC;;AAAA;;AACS;;AAAA;;;;;;;;;wEDjC/BA,uB,EAAuB;gBAJnC,uDAImC;iBAJzB;AACTlC,oBAAQ,EAAE,sBADD;AAET2C,uBAAW,EAAE;AAFJ,W;AAIyB,U;;;;;;oBAM/B,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;AEdZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,iB;;;;;yBAAAA,iB;AAAiB,O;;;cAAjBA,iB;AAAiB,kC;AAAA,gB;AAAA,e;AAAA;AAAA;ACJ9B;;AACE;;AACF;;;;;;;;;wEDEaA,iB,EAAiB;gBAL7B,uDAK6B;iBALnB;AACT5C,oBAAQ,EAAE,WADD;AAET2C,uBAAW,EAAE,wBAFJ;AAGTE,qBAAS,EAAE;AAHF,W;AAKmB,U;;;;;;;;;;;;;;;;;;AEP9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAAaC,I,GAUX,gBAAc;AAAA;;AACZ,aAAKrC,EAAL,GAAU,IAAV;AACD,O;;UAGUsC,K;;;;UAIAC,I;;;;UAMAC,O,GAaX;AAAA;;AACE,aAAKC,OAAL,GAAkB,IAAlB;AACA,aAAKC,GAAL,GAAkB,IAAlB;AACA,aAAKC,MAAL,GAAkB,IAAlB;AACA,aAAKC,EAAL,GAAkB,IAAlB;AACA,aAAKC,KAAL,GAAkB,IAAlB;AACA,aAAKC,OAAL,GAAkB,IAAlB;AACA,aAAK3M,KAAL,GAAkB,IAAlB;AACA,aAAK4M,KAAL,GAAkB,IAAlB;AACA,aAAKC,UAAL,GAAkB,EAAlB;AACA,aAAKC,UAAL,GAAkB,EAAlB;AAED,O;;;;;;;;;;;;;;;;;AClDH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMQ;;;;;;AAAK;;;;;;AADT;;AACI;;AACJ;;;;;;AADiE;;AAAA;;;;;;AAG7D;;;;;;AAAK;;;;;;AADT;;AACI;;AACJ;;;;;;AADuF;;AAAA;;;;;;AAOnF;;AAA+D;;AAAe;;AAA2C;;;;;;;;AAAtH;;AAA4D;;AAAA;;;;;;AAC/D;;AAAgC;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAqB5B;;AAAgF;;AAAiB;;;;;;AAA3F;;AAA0E;;AAAA;;;;;;;;;;AAJpF;;AACI;;AAAU;;AAAmB;;AAC7B;;AAAM;;AAAmB;;AACzB;;AACA;;AACJ;;;;;;AAL+B;;AACjB;;AAAA;;AACJ;;AAAA;;AAEqC;;AAAA;;;;;;AAO3C;;AAAgF;;AAAiB;;;;;;AAA3F;;AAA0E;;AAAA;;;;;;AAJpF;;AACI;;AAAU;;AAAmB;;AAC7B;;AAAM;;AAAmB;;AACzB;;AACA;;AACJ;;;;;;AAL+B;;AACjB;;AAAA;;AACJ;;AAAA;;AAEqC;;AAAA;;;;;;AAM3C;;AAAgF;;AAAiB;;;;;;AAA3F;;AAA0E;;AAAA;;;;;;AAJpF;;AACI;;AAAU;;AAAmB;;AAC7B;;AAAM;;AAAkB;;AACxB;;AACA;;AACJ;;;;;;AAL+B;;AACjB;;AAAA;;AACJ;;AAAA;;AAEqC;;AAAA;;;;;;AAO3C;;AAAgF;;AAAiB;;;;;;AAA3F;;AAA0E;;AAAA;;;;;;AAJpF;;AACI;;AAAU;;AAAmB;;AAC7B;;AAAM;;AAAmB;;AACzB;;AACA;;AACA;;AAA0B;;AAAmB;;AACjD;;;;;;AALc;;AAAA;;AACJ;;AAAA;;AAEqC;;AAAA;;;;;;;;;;AAKvC;;AACgC;;AAAmB;;;;;;;;AADhD;;AAC6B;;AAAA;;;;;;AAFpC;;AACI;;AAEJ;;;;;;AAF8D;;AAAA;;;;;;;;AAI1D;;AAA8E;AAAA;;AAAA;;AAAA;AAAA;;AAE1E;;AAAM;;AAAoB;;AAC1B;;AACA;;AAA0B;;AAAmB;;AACjD;;;;;;;;AAJI;;AACM;;AAAA;;;;;;;;;;AAKN;;AACI;;AAAmG;;AAAc;;AACrH;;;;;;;;;;AADO;;AAAA;;AAAgG;;AAAA;;;;;;AAF3G;;AACI;;AAGJ;;;;;;AAHmB;;AAAA;;;;;;AARvB;;AACI;;AAMA;;AAKJ;;;;;;AAX4C;;AAAA;;AAMH;;AAAA;;;;;;AAZ7C;;AACI;;AAIA;;AAcJ;;;;;;AAlBmB;;AAAA;;AAIA;;AAAA;;;;;;AAgBnB;;AACI;;AAAM;;AAAmB;;AAC7B;;;;;;AADU;;AAAA;;;;;;AAlDd;;AACI;;AAOA;;AAMA;;AAOA;;AAOA;;AAqBA;;AAGJ;;;;;;;;AApD4D;;AACY;;AAAA;;AAOX;;AAAA;;AAMgB;;AAAA;;AAOtB;;AAAA;;AAOpB;;AAAA;;AAqBG;;AAAA;;;;;;;;UD/D7BC,mB;AAaX,qCACEC,iBADF,EAEEC,KAFF,EAGSC,SAHT,EAIU1C,OAJV,EAKUnJ,IALV,EAMU5B,KANV,EAOU0N,MAPV,EAO4B;AAAA;;AAAA;;AAJnB,eAAAD,SAAA,GAAAA,SAAA;AACC,eAAA1C,OAAA,GAAAA,OAAA;AACA,eAAAnJ,IAAA,GAAAA,IAAA;AACA,eAAA5B,KAAA,GAAAA,KAAA;AACA,eAAA0N,MAAA,GAAAA,MAAA;AAnBH,eAAAC,QAAA,GAAW,OAAX;AACA,eAAAC,MAAA,GAA0C,EAA1C;AAGP,eAAAC,SAAA,GAAY,KAAZ;AAEO,eAAAC,QAAA,GAAiB,IAAI,wDAAJ,EAAjB;AAIP,eAAAC,MAAA,GAAkB,KAAlB;AAWE,eAAKC,WAAL,GAAmBR,KAAK,CAACS,UAAN,CAAiB,oBAAjB,CAAnB;;AACA,eAAKC,oBAAL,GAA4B;AAAA,mBAAMX,iBAAiB,CAACY,aAAlB,EAAN;AAAA,WAA5B;;AACA,eAAKH,WAAL,CAAiBI,WAAjB,CAA6B,KAAKF,oBAAlC,EAJ0B,CAM1B;;AACA,eAAKjM,WAAL,GAAmB,KAAKL,IAAL,CAAUM,SAAV,CAAoBC,SAApB,CAA+B,UAAAC,QAAQ;AAAA,mBAAI,MAAI,CAACyL,SAAL,GAAiBzL,QAArB;AAAA,WAAvC,CAAnB;AACA,eAAKuL,QAAL,GAAgB5C,OAAO,CAACG,UAAR,CAAmB,MAAnB,CAAhB;AACD;;;;iBAED,oBAAW;AAAA;;AACT,iBAAKmD,WAAL,GAAmB,sEAAYnG,UAA/B;AACA,iBAAKwF,MAAL,CAAYY,MAAZ,CAAmB,UAAAtO,KAAK;AAAA,qBAAIA,KAAK,CAACuO,SAAV;AAAA,aAAxB,EAA6CpM,SAA7C,CAAuD,UAAAqM,QAAQ,EAAI;AACjE,oBAAI,CAACV,QAAL,GAAgBU,QAAQ,CAAC/N,IAAzB;AACD,aAFD;AAGD;;;iBAGD,sBAAa;AACX,iBAAKsN,MAAL,GAAc,CAAC,KAAKA,MAApB;AACD;;;iBAED,yBAAgB;AACd,iBAAKA,MAAL,GAAc,IAAd;AACD;;;iBAED,uBAAW;AACT,iBAAKC,WAAL,CAAiBS,cAAjB,CAAgC,KAAKP,oBAArC;AACD;;;iBAED,mBAAUrM,IAAV,EAAwB;AACtB,mBAAO,KAAKkJ,OAAL,CAAa2D,SAAb,CAAuB7M,IAAvB,CAAP;AACD;;;iBAED,kBAAM;AACJ,iBAAK7B,KAAL,CAAWqB,QAAX,CAAoB,IAAI,6EAAJ,EAApB;AACD;;;;;;;yBAzDUiM,mB,EAAmB,gI,EAAA,iI,EAAA,wI,EAAA,gJ,EAAA,0I,EAAA,kH,EAAA,kH;AAAA,O;;;cAAnBA,mB;AAAmB,oC;AAAA,iB;AAAA,e;AAAA,m6D;AAAA;AAAA;AChBhC;;AAEI;;AAGA;;AAOA;;AACI;;AACA;;AACJ;;AACA;;AAGI;;AACI;;AAAU;;AAAW;;AAAY;;AAAQ;;AAG7C;;AAAsB;AAAA,qBAAS,IAAAqB,MAAA,EAAT;AAAiB,aAAjB;;AAClB;;AAAU;;AAAW;;AAAY;;AAAS;;AAClD;;AACJ;;AAEA;;AAEI;;AAsDJ;;;;AAlF6B;;AAAA;;AAGA;;AAAA;;AAQuB;;AAAA;;AAChC;;AAAA;;AAKU;;AAAA;;AAW6D;;AAAA;;;;;;;;;wEDd9ErB,mB,EAAmB;gBAL/B,uDAK+B;iBALrB;AACT3D,oBAAQ,EAAE,aADD;AAET2C,uBAAW,EAAE,0BAFJ;AAGTE,qBAAS,EAAE;AAHF,W;AAKqB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnBhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAsBaoC,Y;;;;;cAAAA;;;;2BAAAA,Y;AAAY,S;AAAA,mBAFZ,CAAE,gEAAF;;;;4HAEAA,Y,EAAY;AAAA,yBAbrB,mEAaqB,EAZrB,iEAYqB,EAXrB,6DAWqB,EAVrB,4EAUqB;AAVN,oBAGf,mEAHe,EAIf,iEAJe,EAKf,6DALe,EAMf,4EANe;AAUM,S;AAJN,O;;;;;wEAINA,Y,EAAY;gBAfxB,sDAewB;iBAff;AACRC,wBAAY,EAAE,CACZ,mEADY,EAEZ,iEAFY,EAGZ,6DAHY,EAIZ,4EAJY,CADN;AAORC,mBAAO,EAAE,CACP,mEADO,EAEP,iEAFO,EAGP,6DAHO,EAIP,4EAJO,CAPD;AAaRC,qBAAS,EAAE,CAAE,gEAAF;AAbH,W;AAee,U;;;;;;;;;;;;;;;;;;ACtBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaC,S;AAIX,6BAAc;AAAA;;AACX,eAAKC,EAAL,GAAU,KAAKC,UAAL,GAAkBC,UAAU,CAAC,mBAAD,CAAtC;AACF;;;;iBAED,eAAOC,WAAP,EAAqBC,YAArB,EAAoC;AAClC;AACA,iBAAKJ,EAAL,CAAQK,KAAR,CAAcF,WAAd,EAA2BC,YAA3B;AACD;;;iBAED,mBAAU5H,IAAV,EAAgB;AACd,mBAAO,KAAKwH,EAAL,CAAQM,MAAR,CAAeC,SAAf,CAAyB/H,IAAzB,CAAP;AACD;;;iBAED,iBAAQA,IAAR,EAAY;AACV,mBAAO,KAAKwH,EAAL,CAAQM,MAAR,CAAeE,OAAf,CAAuBhI,IAAvB,CAAP;AACD;;;;;;;yBAnBUuH,S;AAAS,O;;;eAATA,S;AAAS,iBAATA,SAAS,K;AAAA,oBAFR;;;;;wEAEDA,S,EAAS;gBAHrB,wDAGqB;iBAHV;AACV1M,sBAAU,EAAE;AADF,W;AAGU,U;;;;;;;;;;;;;;;;;;;;ACFtoN,eAAe,GAAG,8BAAxB;AACA,UAAMC,uBAAuB,GAAG,sCAAhC;AACA,UAAMC,qBAAqB,GAAG,oCAA9B;AAEA,UAAMC,YAAY,GAAG,2BAArB;AACA,UAAMC,oBAAoB,GAAG,mCAA7B;AACA,UAAMC,kBAAkB,GAAG,iCAA3B;AAEA,UAAMC,WAAW,GAAG,0BAApB;AACA,UAAMC,mBAAmB,GAAG,kCAA5B;AACA,UAAMC,iBAAiB,GAAG,gCAA1B;AAGP;;;;AAGO,UAAMC,SAAS,GAAG,wBAAlB;AACA,UAAMC,iBAAiB,GAAG,gCAA1B;AACA,UAAMC,eAAe,GAAG,8BAAxB;AAEA,UAAMC,iBAAiB,GAAG,gCAA1B;AACA,UAAMC,yBAAyB,GAAG,wCAAlC;AACA,UAAMC,uBAAuB,GAAG,sCAAhC;AAEA,UAAMC,WAAW,GAAG,2BAApB;AACA,UAAMC,mBAAmB,GAAG,mCAA5B;AACA,UAAMC,iBAAiB,GAAG,iCAA1B;AAEA,UAAMC,gBAAgB,GAAG,+BAAzB;AACA,UAAMC,wBAAwB,GAAG,uCAAjC;AACA,UAAMC,sBAAsB,GAAG,qCAA/B;AAEA,UAAMC,iBAAiB,GAAG,gCAA1B;AACA,UAAMC,yBAAyB,GAAG,wCAAlC;AACA,UAAMC,uBAAuB,GAAG,sCAAhC;AAEA,UAAMC,oBAAoB,GAAG,mCAA7B;AACA,UAAMC,4BAA4B,GAAG,2CAArC;AACA,UAAMC,0BAA0B,GAAG,yCAAnC;AAEA,UAAMC,iBAAiB,GAAG,gCAA1B;AACA,UAAMC,yBAAyB,GAAG,wCAAlC;AACA,UAAMC,uBAAuB,GAAG,sCAAhC;AAGA,UAAMC,yBAAyB,GAAG,wCAAlC;AACA,UAAMC,mBAAmB,GAAG,kCAA5B;AAEP;;;;;;;;;UAQaC,a,GAEX,yBAAc;AAAA;;AADL,aAAA1M,IAAA,GAAO0K,eAAP;AACO,O;;UAGLiC,oB,GAEX,8BAAmBtR,OAAnB,EAAoC;AAAA;;AAAjB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAO2K,uBAAP;AAC6B,O;;UAG3BiC,kB,GAAb;AAAA;;AACW,aAAA5M,IAAA,GAAO4K,qBAAP;AACV,O;AAED;;;;;UAGaiC,W,GAEX,qBAAmBxR,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAO6K,YAAP;AACqC,O;;UAGnCiC,kB,GAEX,4BAAmBzR,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAO8K,oBAAP;AACqC,O;;UAGnCiC,gB,GAAb;AAAA;;AACW,aAAA/M,IAAA,GAAO+K,kBAAP;AACV,O;AAED;;;;;UAGaiC,U,GAEX,oBAAmB3R,OAAnB,EAAuC;AAAA;;AAApB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOgL,WAAP;AACmC,O;;UAGjCiC,iB,GAEX,2BAAmB5R,OAAnB,EAAyC;AAAA;;AAAtB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOiL,mBAAP;AACkC,O;;UAGhCiC,e,GAAb;AAAA;;AACW,aAAAlN,IAAA,GAAOkL,iBAAP;AACV,O;AAGD;;;;;;;;;;UAQaiC,Q,GAEX,oBAAc;AAAA;;AADL,aAAAnN,IAAA,GAAOmL,SAAP;AACO,O;;UAGLiC,e,GAEX,yBAAmB/R,OAAnB,EAAwC;AAAA;;AAArB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOoL,iBAAP;AACiC,O;;UAG/BiC,a,GAAb;AAAA;;AACW,aAAArN,IAAA,GAAOqL,eAAP;AACV,O;AAED;;;;;UAGaiC,c,GAEX,wBAAmBjS,OAAnB,EAA8C;AAAA;;AAA3B,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOsL,iBAAP;AACuC,O;;UAGrCiC,qB,GAEX,+BAAmBlS,OAAnB,EAAwC;AAAA;;AAArB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOuL,yBAAP;AACiC,O;;UAG/BiC,mB,GAAb;AAAA;;AACW,aAAAxN,IAAA,GAAOwL,uBAAP;AACV,O;AAED;;;;;UAGaiC,S,GAEX,mBAAmBpS,OAAnB,EAAkE;AAAA;;AAA/C,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOyL,WAAP;AAC2D,O;;UAGzDiC,gB,GAEX,0BAAmBrS,OAAnB,EAAoC;AAAA;;AAAjB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAO0L,mBAAP;AAC6B,O;;UAG3BiC,c,GAAb;AAAA;;AACW,aAAA3N,IAAA,GAAO2L,iBAAP;AACV,O;AAED;;;;;UAGaiC,c,GAEX,wBAAmBvS,OAAnB,EAA4C;AAAA;;AAAzB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAO4L,gBAAP;AACqC,O;;UAGnCiC,qB,GAEX,+BAAmBxS,OAAnB,EAAoC;AAAA;;AAAjB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAO6L,wBAAP;AAC6B,O;;UAG3BiC,mB,GAAb;AAAA;;AACW,aAAA9N,IAAA,GAAO8L,sBAAP;AACV,O;AAED;;;;;UAGaiC,e,GAEX,yBAAmB1S,OAAnB,EAAyC;AAAA;;AAAtB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAO+L,iBAAP;AACkC,O;;UAGhCiC,sB,GAEX,gCAAmB3S,OAAnB,EAAoC;AAAA;;AAAjB,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOgM,yBAAP;AAC6B,O;;UAG3BiC,oB,GAAb;AAAA;;AACW,aAAAjO,IAAA,GAAOiM,uBAAP;AACV,O;AAED;;;;;UAGaiC,e,GAAb;AAAA;;AACW,aAAAlO,IAAA,GAAOqM,iBAAP,CADX,CAEE;AACD,O;;UAEY8B,sB,GAEX,gCAAmB9S,OAAnB,EAAiD;AAAA;;AAA9B,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOsM,yBAAP;AAC0C,O;;UAGxC8B,oB,GAAb;AAAA;;AACW,aAAApO,IAAA,GAAOuM,uBAAP;AACV,O;AAED;;;;;UAGa8B,kB,GAEX,4BAAmBhT,OAAnB,EAAiD;AAAA;;AAA9B,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOkM,oBAAP;AAC0C,O;;UAGxCoC,yB,GAEX,mCAAmBjT,OAAnB,EAAiD;AAAA;;AAA9B,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOmM,4BAAP;AAC0C,O;;UAGxCoC,uB,GAAb;AAAA;;AACW,aAAAvO,IAAA,GAAOoM,0BAAP;AACV,O;;UAKYoC,iB,GAAb;AAAA;;AACW,aAAAxO,IAAA,GAAOyM,mBAAP;AACV,O;;UAEYgC,sB,GAEX,gCAAmBpT,OAAnB,EAAmD;AAAA;;AAAhC,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOwM,yBAAP;AAC4C,O;;;;;;;;;;;;;;;;;AClPvD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAaakC,gB;AAOX,kCACU3I,OADV,EAEU9K,MAFV,EAGU0T,KAHV,EAIU3T,KAJV,EAI2B;AAAA;;AAHjB,eAAA+K,OAAA,GAAAA,OAAA;AACA,eAAA9K,MAAA,GAAAA,MAAA;AACA,eAAA0T,KAAA,GAAAA,KAAA;AACA,eAAA3T,KAAA,GAAAA,KAAA;AANV,eAAA8B,eAAA,GAAiC,IAAI,4CAAJ,EAAjC;AAOK;;;;iBAEL,oBAAW,CACV;;;iBAED,sBAAa;AAAA;;AACX,iBAAK8R,cAAL,GAAsB,KAAK3T,MAAL,CAAYuJ,MAAZ,CACnBrJ,IADmB,CACd,iEAAU,KAAK2B,eAAf,CADc,EAEnBK,SAFmB,CAET,UAAAsH,KAAK,EAAI;AAClB,kBAAIA,KAAK,YAAY,gEAArB,EAAuC;AACrC,sBAAI,CAACoK,UAAL,CAAgBpK,KAAhB;AACD;AAAC;;;;AAGH,aARmB,CAAtB;AASD;;;iBAEO,oBAAWA,KAAX,EAAkC;AACxC,gBAAI,KAAKqK,QAAL,CAAcrK,KAAd,CAAJ,EAA0B;AACxB;AACD;;AAED,gBAAI,CAAC,KAAKsK,cAAL,CAAoBtK,KAApB,CAAL,EAAiC;AAC/B;AACD;AACF;;;iBAEO,wBAAeA,KAAf,EAAwC;AAC9C;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,mBAAO,IAAP;AACD;;;iBAEO,kBAASA,KAAT,EAAkC;AACxC,mBAAOA,KAAK,CAACzH,KAAN,CAAYgS,IAAZ,CAAiBC,UAAjB,CAA4BlI,IAA5B,CAAiC+H,QAAxC;AACD;;;iBAEO,mBAAUrK,KAAV,EAAiB;AACvB,gBAAIyK,MAAM,GAAI,KAAd;AAEA,gBAAMC,OAAO,GAAG1K,KAAK,CAACL,GAAN,CAAUE,KAAV,CAAgB,GAAhB,CAAhB;AACA,iBAAK8K,iBAAL,GAAyB,KAAKpU,KAAL,CAAWsO,MAAX,CAAkB,UAAA+F,SAAS;AAAA,qBAAIA,SAAS,CAAC9F,SAAV,CAAoB9N,IAApB,CAAyB6T,KAA7B;AAAA,aAA3B,EACtBnU,IADsB,CACjB,iEAAU,KAAK2B,eAAf,CADiB,EAEtBK,SAFsB,CAEZ,UAAAmS,KAAK,EAAI;AAElB,kBAAIH,OAAO,CAACI,QAAR,CAAiB,gBAAjB,KAAsCJ,OAAO,CAACI,QAAR,CAAiB,WAAjB,CAA1C,EAAyE;AACvEL,sBAAM,GAAG,IAAT;AACD;;AAED,kBAAII,KAAJ,EAAW;AACTE,sBAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmB3L,OAAnB,CAA2B,UAASP,GAAT,EAAc;AACvCoM,wBAAM,CAACC,IAAP,CAAYH,KAAK,CAAClM,GAAD,CAAL,CAAWsM,WAAvB,EAAoC/L,OAApC,CAA4C,UAASgM,QAAT,EAAmB;AAC7D;AACA;AACA,wBAAIR,OAAO,CAACI,QAAR,CAAiBD,KAAK,CAAClM,GAAD,CAAL,CAAWsM,WAAX,CAAuBC,QAAvB,EAAiCC,UAAlD,CAAJ,EAAmE;AACjEV,4BAAM,GAAG,IAAT;AACD;AACF,mBAND;AAOH,iBARC;AASD;AACF,aAnBsB,CAAzB,CAJuB,CAyBvB;;AACA,gBAAIA,MAAJ,EAAY;AACV;AACD,aA5BsB,CA6BvB;;;AACA,gBAAI,CAACA,MAAL,EAAa;AACX,mBAAKjU,MAAL,CAAYsB,QAAZ,CAAqB,CAAC,qBAAD,CAArB;AACD;AACF;;;iBAED,uBAAc;AACZ,iBAAKO,eAAL,CAAqBC,IAArB,GADY,CAEZ;AACA;AACD;;;;;;;yBA/FU2R,gB,EAAgB,uH,EAAA,8G,EAAA,sH,EAAA,yG;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB,K;AAAA,oBAFf;;;;;wEAEDA,gB,EAAgB;gBAH5B,wDAG4B;iBAHjB;AACVpR,sBAAU,EAAE;AADF,W;AAGiB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbkBA;;;UAMauS,a;AAeX,+BACEtH,iBADF,EAEEC,KAFF,EAGSC,SAHT,EAG6B;AAAA;;AAApB,eAAAA,SAAA,GAAAA,SAAA;AAhBT,eAAAqH,GAAA,GAAM,KAAN;AAUO,eAAAlH,MAAA,GAA0C,EAA1C;AAQL,eAAKI,WAAL,GAAmBR,KAAK,CAACS,UAAN,CAAiB,oBAAjB,CAAnB;;AACA,eAAKC,oBAAL,GAA4B;AAAA,mBAAMX,iBAAiB,CAACY,aAAlB,EAAN;AAAA,WAA5B;;AACA,eAAKH,WAAL,CAAiBI,WAAjB,CAA6B,KAAKF,oBAAlC;AACD;;;;iBAED,uBAAW;AACT,iBAAKF,WAAL,CAAiBS,cAAjB,CAAgC,KAAKP,oBAArC;AACD;;;iBACD,2BAAkB;AAChB;AACM,+CAAC,CAAC,uBAAD,CAAD,CAA4B6G,EAA5B,CAA+B,OAA/B,EAAwC;AACtC,iDAAC,CAAC,aAAD,CAAD,CAAkBC,MAAlB,CAAyB,GAAzB;AACP,aAFK,EAFU,CAKhB;AACD;;;;;;;yBAlCUH,a,EAAa,gI,EAAA,iI,EAAA,wI;AAAA,O;;;cAAbA,a;AAAa,wC;AAAA,iB;AAAA,gB;AAAA,q2C;AAAA;AAAA;;;ACrB1B;;AAII;;AAII;;AACI;;AAEI;;AAGI;;AAEA;;AACJ;;AAGA;;AAEI;;AAEA;;AACJ;;AACJ;;AACJ;;AAKA;;AAAwB;AAAA;;AAAA;;AAAA,qBAAS,YAAT;AAAsB,aAAtB;;AACpB;;AAAU;;AAAI;;AAClB;;AAaA;;AAIA;;AAOJ;;AAIA;;AAKI;;AACwE;AAAA,yCAAwB,IAAxB;AAA4B,aAA5B,EAA6B,OAA7B,EAA6B;AAAA,yCAA0B,KAA1B;AAA+B,aAA5D;;AAGpE;;AAEJ;;AAOA;;AACI;;AACI;;AAEI;;AAA0D;;AAAQ;;AAClE;;AACI;;AAA+B;AAAA,0CAAwB,KAAxB,GAAgC,KAAhC,GAAwC,KAAxC;AAA6C,aAA7C;;AAAgD;;AAAG;;AACtF;;AACA;;AACI;;AAA+B;AAAA;AAAA;;AAAoB;;AAAY;;AACnE;;AAIA;;AACA;;AAA0D;;AAAM;;AAChE;;AACI;;AAA2B;AAAA;AAAA,eAAoB,QAApB,EAAoB;AAAA,4CAA0B,KAA1B;AAA+B,aAAnD;;AAAyE;;AAAG;;AAC3G;;AACA;;AACI;;AAA2B;AAAA;AAAA,eAAmB,QAAnB,EAAmB;AAAA,6CAA2B,KAA3B;AAAgC,aAAnD;;AAAwE;;AAC1F;;AACb;;AACA;;AACI;;AAA2B;AAAA;AAAA,eAAkB,QAAlB,EAAkB;AAAA,8CAA4B,KAA5B;AAAiC,aAAnD;;AAAuE;;AAAI;;AAC1G;;AACA;;AACI;;AAA2B;AAAA;AAAA,eAAkB,QAAlB,EAAkB;AAAA,yDAAmC,KAAnC;AAAwC,aAA1D;;AAA4D;;AAAI;;AAC/F;;AACJ;;AACJ;;AACJ;;AAKA;;AAEQ;;AAEI;;AACI;;AACJ;;AAEJ;;AAER;;AAIJ;;AACJ;;;;AAnI4B,qFAAW,SAAX,EAAW,6IAAX;;AA8DiC;;AAAA;;AACrD;;AAI2C;;AAAA,wHAA8C,QAA9C,EAA8C,uBAA9C,EAA8C,cAA9C,EAA8C,uBAA9C,EAA8C,kBAA9C,EAA8C,UAA9C;;AAsBI;;AAAA;;AAQJ;;AAAA;;AAGA;;AAAA;;AAIA;;AAAA;;AAGA;;AAAA;;;;;;;;;wEDtFtCA,a,EAAa;gBALzB,uDAKyB;iBALf;AACTlL,oBAAQ,EAAE,iBADD;AAET2C,uBAAW,EAAE,qBAFJ;AAGTE,qBAAS,EAAE;AAHF,W;AAKe,U;;;;;;;;;;;;;;;;;;;;;;;;;;AEtB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQO,UAAMyI,QAAQ,GAA+B;AAClD1G,iBAAS,EAAE,0EADuC;AAElD2G,iBAAS,EAAE,gEAFuC;AAGlDC,kBAAU,EAAE;AAHsC,OAA7C;;AAMA,eAASC,MAAT,CAAgBlL,OAAhB,EAAgD;AACrD,eAAO,UAASlI,KAAT,EAA0B5B,MAA1B,EAAqC;AAC1CQ,iBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBmB,KAArB;AACApB,iBAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBT,MAAtB,EAF0C,CAK1C;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAO8J,OAAO,CAAClI,KAAD,EAAQ5B,MAAR,CAAd;AACD,SAbD;AAcD;;AAEM,UAAMiV,YAAY,GAA4B,CAAC,sEAAYrN,UAAb,GACjD,CAACoN,MAAD,CADiD,GAEjD,EAFG;;;;;;;;;;;;;;;;ACjCP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAmBaE,Y;AAGX,8BACU1T,IADV,EAEU5B,KAFV,EAGUC,MAHV,EAIUsV,SAJV,EAI6B;AAAA;;AAHnB,eAAA3T,IAAA,GAAAA,IAAA;AACA,eAAA5B,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAsV,SAAA,GAAAA,SAAA;AACN;;;;iBAEJ,oBAAW;AAAA;;AACT3U,mBAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,iBAAKoB,WAAL,GAAmB,KAAKL,IAAL,CAAUM,SAAV,CAAoBC,SAApB,CACjB,UAAAC,QAAQ,EAAI;AACV,oBAAI,CAACpC,KAAL,CAAWqB,QAAX,CAAoB,IAAI,kFAAJ,EAApB,EADU,CAEV;AACA;;AACD,aALgB,CAAnB;AAMD;;;;;;;yBAlBUiU,Y,EAAY,0I,EAAA,kH,EAAA,uH,EAAA,yH;AAAA,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA;AAAA;AChBzB;;AAAe;;AAA2B;;;;;;;;;wEDgB7BA,Y,EAAY;gBANxB,uDAMwB;iBANd;AACT3L,oBAAQ,EAAE,UADD;AAET2C,uBAAW,EAAE,sBAFJ;AAGTE,qBAAS,EAAE,CAAC,qBAAD;AAHF,W;AAMc,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElBzc,CAoCA;;;AAGA,UAAMgJ,gCAAgC,GAAoC;AACxEC,uBAAe,EAAE,IADuD;AAExEC,kBAAU,EAAE,CAF4D;AAGxEC,wBAAgB,EAAE;AAHsD,OAA1E;;UAoDaC,S;;;;;cAAAA,S;AAAS,oBAHR,2DAGQ;;;;2BAATA,S;AAAS,S;AAAA,mBAlBT,CACT;AACEC,iBAAO,EAAE,sEADX;AAEEC,kBAAQ,EAAE,iGAFZ;AAGEC,eAAK,EAAE;AAHT,SADS,EAMT;AACEF,iBAAO,EAAE,+EADX;AAEEG,kBAAQ,EAAER;AAFZ,SANS,EAUT;AACAK,iBAAO,EAAE,gEADT;AAEAC,kBAAQ,EAAE;AAFV,SAVS,C;AAcV,kBA7BQ,CACP,uEADO,EAEP,6FAFO,EAGP,yEAHO,EAIP,0DAJO,EAKP,qEALO,EAMP,qEANO,EAOP,6EAPO,EAQP,mEARO,EASP,6DAAaG,OAAb,CAAqB,sDAArB,CATO,EAUP,yDAAYA,OAAZ,CAAoB,4DAApB,EAA8B;AAACZ,sBAAY,EAAZ;AAAD,SAA9B,CAVO,EAWP,6DAAcY,OAAd,CAAsB,CAAC,+EAAD,CAAtB,CAXO,EAYP,0EAAoBC,UAApB,CAA+B;AAACC,gBAAM,EAAE;AAAT,SAA/B,CAZO,EAaP,mEAAkBF,OAAlB,EAbO,CA6BR;;;;4HAIUL,S,EAAS;AAAA,yBA5ClB,2DA4CkB,EA3ClB,0EA2CkB,EA1ClB,yFA0CkB,EAzClB,2EAyCkB,EAxClB,iFAwCkB,EAvClB,4FAuCkB,EAtClB,iHAsCkB,EArClB,sHAqCkB,EApClB,uIAoCkB;AApCU,oBAI5B,uEAJ4B,EAK5B,6FAL4B,EAM5B,yEAN4B,EAO5B,0DAP4B,EAQ5B,qEAR4B,EAS5B,qEAT4B,EAU5B,6EAV4B,EAW5B,mEAX4B,EAWhB,4DAXgB,EAWhB,4DAXgB,EAWhB,gEAXgB,EAWhB,yEAXgB,EAWhB,kEAXgB;AAoCV,S;AAzBN,O;;;;;wEAyBHA,S,EAAS;gBA9CrB,sDA8CqB;iBA9CZ;AACR/G,wBAAY,EAAE,CACZ,2DADY,EAEZ,0EAFY,EAGZ,yFAHY,EAIZ,2EAJY,EAKZ,iFALY,EAMZ,4FANY,EAOZ,iHAPY,EAQZ,sHARY,EASZ,uIATY,CADN;AAaRuH,mBAAO,EAAE,CACP,uEADO,EAEP,6FAFO,EAGP,yEAHO,EAIP,0DAJO,EAKP,qEALO,EAMP,qEANO,EAOP,6EAPO,EAQP,mEARO,EASP,6DAAaH,OAAb,CAAqB,sDAArB,CATO,EAUP,yDAAYA,OAAZ,CAAoB,4DAApB,EAA8B;AAACZ,0BAAY,EAAZ;AAAD,aAA9B,CAVO,EAWP,6DAAcY,OAAd,CAAsB,CAAC,+EAAD,CAAtB,CAXO,EAYP,0EAAoBC,UAApB,CAA+B;AAACC,oBAAM,EAAE;AAAT,aAA/B,CAZO,EAaP,mEAAkBF,OAAlB,EAbO,CAbD;AA4BRlH,qBAAS,EAAE,CACT;AACE8G,qBAAO,EAAE,sEADX;AAEEC,sBAAQ,EAAE,iGAFZ;AAGEC,mBAAK,EAAE;AAHT,aADS,EAMT;AACEF,qBAAO,EAAE,+EADX;AAEEG,sBAAQ,EAAER;AAFZ,aANS,EAUT;AACAK,qBAAO,EAAE,gEADT;AAEAC,sBAAQ,EAAE;AAFV,aAVS,CA5BH;AA2CRO,qBAAS,EAAE,CAAC,2DAAD,CA3CH;AA4CRC,2BAAe,EAAE,CAAC,iHAAD,EAAyB,sHAAzB,EAAkD,uIAAlD;AA5CT,W;AA8CY,U;;;;;;;;;;;;;;;;;;ACzFtmBAAnB;AACA,UAAMC,kBAAkB,GAAG,2BAA3B;AACA,UAAMC,gBAAgB,GAAG,yBAAzB;AAEA,UAAMC,WAAW,GAAG,oBAApB;AACA,UAAMC,mBAAmB,GAAG,4BAA5B;AACA,UAAMC,iBAAiB,GAAG,0BAA1B;AAEA,UAAMC,iBAAiB,GAAG,0BAA1B;AACA,UAAMC,yBAAyB,GAAG,kCAAlC;AACA,UAAMC,uBAAuB,GAAG,gCAAhC;AAEA,UAAMC,wBAAwB,GAAG,iCAAjC;AACA,UAAMC,gCAAgC,GAAG,yCAAzC;AACA,UAAMC,8BAA8B,GAAG,uCAAvC;AAEA,UAAMC,cAAc,GAAG,uBAAvB;AAEA,UAAMC,QAAQ,GAAG,iBAAjB;;UAGMC,S,GAEX,mBAAmBhX,OAAnB,EAAiC;AAAA;;AAAd,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOuR,UAAP;AAC0B,O;;UAGxBe,gB,GAEX,0BAAmBjX,OAAnB,EAAkC;AAAA;;AAAf,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOwR,kBAAP;AAC2B,O;;UAGzBe,c,GAAb;AAAA;;AACW,aAAAvS,IAAA,GAAOyR,gBAAP;AACV,O;;UAEYrV,U,GAAb;AAAA;;AACW,aAAA4D,IAAA,GAAO0R,WAAP;AACV,O;;UAEYlV,iB,GAAb;AAAA;;AACW,aAAAwD,IAAA,GAAO2R,mBAAP,CADX,CAEE;AACD,O;;UAEYa,e,GAAb;AAAA;;AACW,aAAAxS,IAAA,GAAO4R,iBAAP;AACV,O;;UAEYnV,O,GAAb;AAAA;;AACW,aAAAuD,IAAA,GAAOoS,QAAP;AACV,O;;UAEYpW,e,GAAb;AAAA;;AACW,aAAAgE,IAAA,GAAO6R,iBAAP;AACV,O;;UAEYY,sB,GAEX,gCAAmBpX,OAAnB,EAAkC;AAAA;;AAAf,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAO8R,yBAAP;AAC2B,O;;UAGzBY,oB,GAAb;AAAA;;AACW,aAAA1S,IAAA,GAAO+R,uBAAP;AACV,O;;UAEYY,Y,GAAb;AAAA;;AACW,aAAA3S,IAAA,GAAOmS,cAAP;AACV,O;AAID;;;;;UAGajW,qB,GAAb;AAAA;;AACW,aAAA8D,IAAA,GAAOgS,wBAAP;AACV,O;;UAEYY,4B,GAEX,sCAAmBvX,OAAnB,EAAkC;AAAA;;AAAf,aAAAA,OAAA,GAAAA,OAAA;AADV,aAAA2E,IAAA,GAAOiS,gCAAP;AAC2B,O;;UAGzBY,0B,GAAb;AAAA;;AACW,aAAA7S,IAAA,GAAOkS,8BAAP;AACV,O;;;;;;;;;;;;;;;;;ACtFD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIO,UAAMY,SAAS,GAAW,CAAC;AAChCC,YAAI,EAAE,EAD0B;AAEhCC,iBAAS,EAAE,0EAFqB;AAGhCrQ,gBAAQ,EAAE,CACR;AACEoQ,cAAI,EAAE,OADR;AAEEE,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAA+BC,IAA/B,CAAoC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACC,WAAN;AAAA,aAArC,CAAN;AAAA;AAFhB,SADQ,EAMR;AACAL,cAAI,EAAE,EADN;AAEAM,oBAAU,EAAE,OAFZ;AAGAC,mBAAS,EAAE;AAHX,SANQ,EAUR;AACAP,cAAI,EAAE,MADN;AAEAE,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAAyCC,IAAzC,CAA8C,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACI,gBAAN;AAAA,aAA/C,CAAN;AAAA,WAFd;AAGAC,qBAAW,EAAE,CAAC,qEAAD,CAHb;AAIAzM,cAAI,EAAE;AAAE+H,oBAAQ,EAAE,IAAZ;AAAkBjS,gBAAI,EAAE;AAAxB;AAJN,SAVQ,EAgBV;AACEkW,cAAI,EAAE,QADR;AAEEE,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAAiCC,IAAjC,CAAsC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACM,YAAN;AAAA,aAAvC,CAAN;AAAA;AAFhB,SAhBU,EAsBV;AACEV,cAAI,EAAE,MADR;AAEEE,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAA6BC,IAA7B,CAAkC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACO,UAAN;AAAA,aAAnC,CAAN;AAAA,WAFhB;AAGEF,qBAAW,EAAE,CAAC,qEAAD,CAHf;AAIEzM,cAAI,EAAE;AAAE+H,oBAAQ,EAAE,KAAZ;AAAmBjS,gBAAI,EAAE;AAAzB;AAJR,SAtBU,EA4BV;AACEkW,cAAI,EAAE,SADR;AAEEE,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAAmCC,IAAnC,CAAwC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACQ,aAAN;AAAA,aAAzC,CAAN;AAAA,WAFhB;AAGEH,qBAAW,EAAE,CAAC,qEAAD,CAHf;AAIEzM,cAAI,EAAE;AAAE+H,oBAAQ,EAAE,KAAZ;AAAmBjS,gBAAI,EAAE;AAAzB;AAJR,SA5BU,EAkCV;AACEkW,cAAI,EAAE,UADR;AAEEE,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAA+CC,IAA/C,CAAoD,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACS,wBAAN;AAAA,aAArD,CAAN;AAAA;AAFhB,SAlCU,EAsCV;AACEb,cAAI,EAAE,MADR;AAEEE,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAA6BC,IAA7B,CAAkC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACU,UAAN;AAAA,aAAnC,CAAN;AAAA;AAFhB,SAtCU,EA0CV;AACEd,cAAI,EAAE,OADR;AAEEE,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAA+BC,IAA/B,CAAoC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACW,UAAN;AAAA,aAArC,CAAN;AAAA;AAFhB,SA1CU,EA8CV;AACEf,cAAI,EAAE,QADR;AAEEE,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAAiCC,IAAjC,CAAsC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACY,YAAN;AAAA,aAAvC,CAAN;AAAA;AAFhB,SA9CU,EAkDV;AACEhB,cAAI,EAAE,YADR;AAEEE,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAAyCC,IAAzC,CAA8C,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACa,gBAAN;AAAA,aAA/C,CAAN;AAAA;AAFhB,SAlDU,EAsDV;AACEjB,cAAI,EAAE,OADR;AAEEE,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAA+BC,IAA/B,CAAoC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACc,WAAN;AAAA,aAArC,CAAN;AAAA;AAFhB,SAtDU,EA0DV;AACElB,cAAI,EAAE,SADR;AAEEE,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAAmCC,IAAnC,CAAwC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACe,aAAN;AAAA,aAAzC,CAAN;AAAA;AAFhB,SA1DU,EA8DV;AACEnB,cAAI,EAAE,QADR;AAEEE,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAAoCC,IAApC,CAAyC,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACgB,eAAN;AAAA,aAA1C,CAAN;AAAA;AAFhB,SA9DU;AAHsB,OAAD,EAsE/B;AACApB,YAAI,EAAE,EADN;AAEAC,iBAAS,EAAE,gFAFX;AAGArQ,gBAAQ,EAAE,CAAC;AACToQ,cAAI,EAAE,gBADG;AAETE,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,qBAAiDC,IAAjD,CAAsD,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACiB,oBAAN;AAAA,aAAvD,CAAN;AAAA;AAFL,SAAD,CAHV;AAOArN,YAAI,EAAE;AAAE+H,kBAAQ,EAAE;AAAZ;AAPN,OAtE+B,EA+E/B;AACAiE,YAAI,EAAE,IADN;AAEAM,kBAAU,EAAE;AAFZ,OA/E+B,CAA1B;;;;;;;;;;;;;;ACNP,eAASgB,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBtB,IAAlB,CAAuB,YAAW;AACxC,cAAIxO,CAAC,GAAG,IAAI+P,KAAJ,CAAU,yBAAyBH,GAAzB,GAA+B,GAAzC,CAAR;AACA5P,WAAC,CAACgQ,IAAF,GAAS,kBAAT;AACA,gBAAMhQ,CAAN;AACA,SAJM,CAAP;AAKA;;AACD2P,8BAAwB,CAAC5E,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACA4E,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAM,YAAM,CAAC7K,OAAP,GAAiBuK,wBAAjB;AACAA,8BAAwB,CAACjP,EAAzB,GAA8B,MAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAoBawP,sB;AAKT,wCACUC,aADV,EAEU/Z,WAFV,EAGSga,QAHT,EAIU9Z,KAJV,EAI2B;AAAA;;AAHjB,eAAA6Z,aAAA,GAAAA,aAAA;AACA,eAAA/Z,WAAA,GAAAA,WAAA;AACD,eAAAga,QAAA,GAAAA,QAAA;AACC,eAAA9Z,KAAA,GAAAA,KAAA;AAPZ,eAAA+Z,iBAAA,GAAoB,KAApB;AACA,eAAAC,YAAA,GAAwC,IAAI,oDAAJ,CAA4B,IAA5B,CAAxC;AAOM;;;;iBAEJ,kBAASV,GAAT,EAAgChO,KAAhC,EAA6C;AAC3C,mBAAOgO,GAAG,CAACW,KAAJ,CAAU;AAAEC,wBAAU,EAAE;AAAEC,6BAAa,EAAE,YAAY7O;AAA7B;AAAd,aAAV,CAAP;AACD;;;iBAED,mBAAU8O,OAAV,EAAqCrY,IAArC,EAAsD;AAAA;;AAEpD,mBAAOA,IAAI,CAACsY,MAAL,CAAY,KAAKC,QAAL,CAAcF,OAAd,EAAuB,KAAKP,aAAL,CAAmB3O,UAAnB,CAA8B,YAA9B,CAAvB,CAAZ,EACN/K,IADM,CAEL,2DAAI,UAAAsJ,KAAK,EAAI;AACX,kBAAIA,KAAK,YAAY,iEAArB,EAAmC;AACjC;AACA,oBAAIA,KAAK,CAACsE,MAAN,KAAiB,GAArB,EAA0B,CAAE;AAC1B;AACD,iBAFD,MAEM,IAAItE,KAAK,CAACsE,MAAN,KAAiB,GAArB,EAA0B;AAAE;AAChC,yBAAI,CAAC+L,QAAL,CAAcS,IAAd,CAAmB9Q,KAAK,CAAC+Q,UAAzB,EAAqC,SAArC,EAAgD;AAACC,4BAAQ,EAAE;AAAX,mBAAhD;AACD,iBAFK,MAEA,IAAIhR,KAAK,CAACsE,MAAN,KAAiB,GAArB,EAA0B;AAAE;AAChC,yBAAI,CAAC+L,QAAL,CAAcS,IAAd,CAAmB9Q,KAAK,CAAC+Q,UAAzB,EAAqC,SAArC,EAAgD;AAACC,4BAAQ,EAAE;AAAX,mBAAhD;AACD,iBAFK,MAEA,IAAIhR,KAAK,CAACsE,MAAN,KAAiB,GAArB,EAA0B;AAAE;AAChC,yBAAI,CAAC+L,QAAL,CAAcS,IAAd,CAAmB9Q,KAAK,CAAC+Q,UAAzB,EAAqC,SAArC,EAAgD;AAACC,4BAAQ,EAAE;AAAX,mBAAhD;AACD;AACF;AACF,aAbD,EAaG,UAAA9Z,KAAK,EAAI;AACV;AACA,sBAAQA,KAAK,CAACoN,MAAd;AACE,qBAAK,GAAL;AACI,yBAAO,OAAI,CAAC2M,cAAL,CAAoB/Z,KAApB,CAAP;;AACJ,qBAAK,GAAL;AACE,yBAAO,OAAI,CAACga,cAAL,CAAoBP,OAApB,EAA6BrY,IAA7B,CAAP;;AACF,qBAAK,GAAL;AACE,yBAAO,OAAI,CAAC+X,QAAL,CAAcS,IAAd,CAAmB5Z,KAAK,CAACA,KAAzB,EAAgC,SAAhC,CAAP;;AACF,qBAAK,GAAL;AACE,yBAAO,OAAI,CAACmZ,QAAL,CAAcS,IAAd,CAAmB,eAAnB,EAAoC,SAApC,CAAP;AARJ;AAUD,aAzBD,CAFK,CAAP;AA6BA;;;;;;;;;;;;;;AAiBD;;;iBAID,wBAAejB,GAAf,EAAsCvX,IAAtC,EAAyD;AAEzD;AACEnB,mBAAO,CAACC,GAAR,CAAY,8BAAZ;AACA,iBAAKb,KAAL,CAAWqB,QAAX,CAAoB,IAAI,0EAAJ,EAApB,EAJuD,CAKvD;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCH;;;iBAEC,wBAAeV,KAAf,EAAsB;AACpB,iBAAKX,KAAL,CAAWqB,QAAX,CAAoB,IAAI,0EAAJ,EAApB,EADoB,CAElB;AACA;AACA;AACA;AAEA;AACH;;;;;;;yBAvHQuY,sB,EAAsB,uH,EAAA,iH,EAAA,+H,EAAA,yG;AAAA,O;;;eAAtBA,sB;AAAsB,iBAAtBA,sBAAsB;;;;;wEAAtBA,sB,EAAsB;gBADlC;AACkC,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOagB,sB;AAEX,wCACS9O,SADT,EAEkCC,IAFlC,EAE2C;AAAA;;AADlC,eAAAD,SAAA,GAAAA,SAAA;AACyB,eAAAC,IAAA,GAAAA,IAAA;AAC7B;;;;iBAEL,qBAAYG,YAAZ,EAAmC;AACjC,iBAAKJ,SAAL,CAAeK,KAAf,CAAqBD,YAArB;AACD;;;;;;;yBATU0O,sB,EAAsB,sI,EAAA,gEAIvB,wEAJuB,C;AAIR,O;;;cAJdA,sB;AAAsB,2C;AAAA,iB;AAAA,e;AAAA,qN;AAAA;AAAA;ACPnC;;AAAqB;;AAAc;;AACnC;;AACE;;AAAG;;AAAgB;;AACrB;;AACA;;AACE;;AAAmB;AAAA,qBAAS,IAAAxO,WAAA,CAAY,KAAZ,CAAT;AAA2B,aAA3B;;AAA0C;;AAAE;;AAC/D;;AAAmB;AAAA,qBAAS,IAAAA,WAAA,CAAY,IAAZ,CAAT;AAA0B,aAA1B;;AAA0C;;AAAG;;AAClE;;;;AAPqB;;AAAA;;AAEhB;;AAAA;;;;;;;;;wEDKQwO,sB,EAAsB;gBAJlC,uDAIkC;iBAJxB;AACTjR,oBAAQ,EAAE,oBADD;AAET2C,uBAAW,EAAE;AAFJ,W;AAIwB,U;;;;;;oBAI9B,oD;qBAAO,wE;;;;;;;;;;;;;;;;;;;;;AEVZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASO,UAAM1C,YAAY,GAAc;AACnCiR,cAAM,EAAE,EAD2B;AAEnCC,uBAAe,EAAE;AAACC,qBAAW,EAAE,IAAd;AAAoBC,iBAAO,EAAE,IAA7B;AAAmCC,mBAAS,EAAE,IAA9C;AAAoDC,sBAAY,EAAE;AAAlE,SAFkB;AAGnCC,iBAAS,EAAE,EAHwB;AAInCC,0BAAkB,EAAE;AAACL,qBAAW,EAAE,IAAd;AAAoBC,iBAAO,EAAE,IAA7B;AAAmCC,mBAAS,EAAE,IAA9C;AAAoDC,sBAAY,EAAE;AAAlE,SAJe;AAKnCpR,gBAAQ,EAAE,KALyB;AAMnCuR,sBAAc,EAAE,KANmB;AAOnCC,qBAAa,EAAE,KAPoB;AAQnCC,eAAO,EAAE;AAR0B,OAAhC;;AAgBA,eAASrR,OAAT,GAAqE;AAAA,YAApDlI,KAAoD,uEAA5C4H,YAA4C;AAAA,YAA9BxJ,MAA8B;AAC1EQ,eAAO,CAACC,GAAR,CAAYmB,KAAZ,EAAmB5B,MAAnB;AACAQ,eAAO,CAACC,GAAR,CAAY,oBAAZ;;AAEA,gBAAQT,MAAM,CAAC4E,IAAf;AAEE,eAAK,yDAAL;AAA8B;AAC5B,qBAAO,MAAP,OAAO,CAAP,kBACKhD,KADL,CAAO,EACG;AACR8Y,+BAAe,EAAE;AACfC,6BAAW,EAAE3a,MAAM,CAACC,OAAP,CAAe0a,WADb;AAEfC,yBAAO,EAAE5a,MAAM,CAACC,OAAP,CAAe2a;AAFT,iBADT;AAKRK,8BAAc,EAAE,KALR;AAMRvR,wBAAQ,EAAE;AANF,eADH,CAAP;AASD;;AAED,eAAK,iEAAL;AAAsC;AACpC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR6Y,sBAAM,EAAEza,MAAM,CAACC,OAAP,CAAe0L,IADf;AAER+O,+BAAe,EAAE;AACfC,6BAAW,EAAE3a,MAAM,CAACC,OAAP,CAAemb,YADb;AAEfR,yBAAO,EAAES,MAAM,CAACrb,MAAM,CAACC,OAAP,CAAeqb,QAAhB,CAFA;AAGfT,2BAAS,EAAE7a,MAAM,CAACC,OAAP,CAAesb,SAHX;AAIfT,8BAAY,EAAE9a,MAAM,CAACC,OAAP,CAAeub;AAJd,iBAFT;AAQRP,8BAAc,EAAE,IARR;AASRvR,wBAAQ,EAAE;AATF,eADH,CAAP;AAYD;;AAED,eAAK,4DAAL;AAAiC;AAC/B,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACRoZ,kCAAkB,EAAE;AAClBL,6BAAW,EAAE3a,MAAM,CAACC,OAAP,CAAe0a,WADV;AAElBC,yBAAO,EAAE5a,MAAM,CAACC,OAAP,CAAe2a;AAFN,iBADZ;AAKRM,6BAAa,EAAE,KALP;AAMRxR,wBAAQ,EAAE;AANF,eADH,CAAP;AASD;;AAED,eAAK,oEAAL;AAAyC;AACvC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACRmZ,yBAAS,EAAE/a,MAAM,CAACC,OAAP,CAAe0L,IADlB;AAERqP,kCAAkB,EAAE;AAClBL,6BAAW,EAAE3a,MAAM,CAACC,OAAP,CAAemb,YADV;AAElBR,yBAAO,EAAES,MAAM,CAACrb,MAAM,CAACC,OAAP,CAAeqb,QAAhB,CAFG;AAGlBT,2BAAS,EAAE7a,MAAM,CAACC,OAAP,CAAesb,SAHR;AAIlBT,8BAAY,EAAE9a,MAAM,CAACC,OAAP,CAAeub;AAJX,iBAFZ;AAQRN,6BAAa,EAAE,IARP;AASRxR,wBAAQ,EAAE;AATF,eADH,CAAP;AAYD;;AAED,eAAK,yDAAL;AAA8B;AAC5B,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED,eAAK,iEAAL;AAAsC;AACpC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR6Y,sBAAM,EAAE7Y,KAAK,CAAC6Y,MAAN,CAAa1Q,MAAb,CAAqB,UAACN,IAAD;AAAA,yBAAUA,IAAI,CAACO,EAAL,KAAYhK,MAAM,CAACC,OAAP,CAAe+J,EAArC;AAAA,iBAArB,CADA;AAER+Q,yBAAS,+BACJnZ,KAAK,CAACmZ,SADF,sBAEJ3G,MAAM,CAACqH,MAAP,CAAc7Z,KAAK,CAAC6Y,MAAN,CAAa1Q,MAAb,CAAoB,UAACN,IAAD;AAAA,yBAAUA,IAAI,CAACO,EAAL,KAAYhK,MAAM,CAACC,OAAP,CAAe+J,EAArC;AAAA,iBAApB,CAAd,EAA4E;AAAE0R,4BAAU,EAAE;AAAE/N,0BAAM,EAAE;AAAV;AAAd,iBAA5E,CAFI,EAFD;AAMRjE,wBAAQ,EAAE,IANF;AAORuR,8BAAc,EAAE,KAPR;AAQRC,6BAAa,EAAE;AARP,eADH,CAAP;AAWD;;AAED,eAAK,kEAAL;AAAuC;AACrC,qBAAO,MAAP,OAAO,CAAP,kBACKtZ,KADL,CAAO,EACG;AACR6Y,sBAAM,+BACD7Y,KAAK,CAAC6Y,MADL,sBAEA7Y,KAAK,CAACmZ,SAAN,CAAgBhR,MAAhB,CAAwB,UAACN,IAAD;AAAA,yBAAUA,IAAI,CAACO,EAAL,KAAYhK,MAAM,CAACC,OAAP,CAAe+J,EAArC;AAAA,iBAAxB,CAFA,EADE;AAKR+Q,yBAAS,EAAEnZ,KAAK,CAACmZ,SAAN,CAAgBhR,MAAhB,CAAwB,UAACN,IAAD;AAAA,yBAAUA,IAAI,CAACO,EAAL,KAAYhK,MAAM,CAACC,OAAP,CAAe+J,EAArC;AAAA,iBAAxB,CALH;AAMRN,wBAAQ,EAAE,KANF;AAORuR,8BAAc,EAAE,KAPR;AAQRC,6BAAa,EAAE;AARP,eADH,CAAP;AAWD;;AAED;;;;;;AAKA;;;;AAGA,eAAK,yDAAL;AAA8B;AAC5B,qBAAO,MAAP,OAAO,CAAP,kBACKtZ,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AACD,eAAK,iEAAL;AAAsC;AACpC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE,IADF;AAERyR,uBAAO,EAAEnb,MAAM,CAACC;AAFR,eADH,CAAP;AAKD;;AACD,eAAK,+DAAL;AAAoC;AAClC,qBAAO,MAAP,OAAO,CAAP,kBACK2B,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED;;;;AAGA,eAAK,6DAAL;AAAkC;AAChC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AACD,eAAK,qEAAL;AAA0C;AACxC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE,IADF;AAERyR,uBAAO,EAAEnb,MAAM,CAACC;AAFR,eADH,CAAP;AAKD;;AACD,eAAK,mEAAL;AAAwC;AACtC,qBAAO,MAAP,OAAO,CAAP,kBACK2B,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED;;;;AAGA,eAAK,iEAAL;AAAsC;AACpC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AACD,eAAK,yEAAL;AAA8C;AAC5C,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE,IADF;AAERyR,uBAAO,EAAEnb,MAAM,CAACC;AAFR,eADH,CAAP;AAKD;;AACD,eAAK,uEAAL;AAA4C;AAC1C,qBAAO,MAAP,OAAO,CAAP,kBACK2B,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED;;;;AAGA,eAAK,oEAAL;AAAyC;AACvC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AACD,eAAK,4EAAL;AAAiD;AAC/C,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE,IADF;AAERyR,uBAAO,EAAEnb,MAAM,CAACC;AAFR,eADH,CAAP;AAKD;;AACD,eAAK,0EAAL;AAA+C;AAC7C,qBAAO,MAAP,OAAO,CAAP,kBACK2B,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED;;;;AAGA,eAAK,gEAAL;AAAqC;AACnC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AACD,eAAK,wEAAL;AAA6C;AAC3C,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE,IADF;AAERyR,uBAAO,EAAEnb,MAAM,CAACC;AAFR,eADH,CAAP;AAKD;;AACD,eAAK,sEAAL;AAA2C;AACzC,qBAAO,MAAP,OAAO,CAAP,kBACK2B,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED;;;;AAGA,eAAK,wDAAL;AAA6B;AAC3B,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AACD,eAAK,gEAAL;AAAqC;AACnC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE,IADF;AAERyR,uBAAO,EAAEnb,MAAM,CAACC;AAFR,eADH,CAAP;AAKD;;AACD,eAAK,8DAAL;AAAmC;AACjC,qBAAO,MAAP,OAAO,CAAP,kBACK2B,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;AAID;;AACA,eAAK,gEAAL;AAAqC;AACnC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE1J,MAAM,CAACC,OAAP,CAAeyJ;AADjB,eADH,CAAP;AAID;;AACD,eAAK,mEAAL;AAAwC;AACtC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACRqZ,8BAAc,EAAEjb,MAAM,CAACC,OAAP,CAAegb;AADvB,eADH,CAAP;AAID;;AACD,eAAK,sEAAL;AAA2C;AACzC,qBAAO,MAAP,OAAO,CAAP,kBACKrZ,KADL,CAAO,EACG;AACRsZ,6BAAa,EAAElb,MAAM,CAACC,OAAP,CAAe0b;AADtB,eADH,CAAP;AAID;;AAED,eAAK,0DAAL;AAA+B;AAC7B,qBAAO,MAAP,OAAO,CAAP,kBACK/Z,KADL,CAAO,EACG;AACR8H,wBAAQ,EAAE;AADF,eADH,CAAP;AAID;;AAED,eAAK,kEAAL;AAAuC;AACrC,qBAAO,MAAP,OAAO,CAAP,kBACK9H,KADL,CAAO,EACG;AACRmZ,yBAAS,EAAEnZ,KAAK,CAACmZ,SAAN,CAAgBhR,MAAhB,CAAwB,UAACN,IAAD;AAAA,yBAAUA,IAAI,CAACO,EAAL,KAAYhK,MAAM,CAACC,OAAP,CAAe+J,EAArC;AAAA,iBAAxB,CADH;AAERN,wBAAQ,EAAE;AAFF,eADH,CAAP;AAKD;;AAED,eAAK,+DAAL;AAAoC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAOF,YAAP;AACD;;AAED;AAAS;AACP,qBAAO5H,KAAP;AACD;AA9RH;AAiSD;;AAEM,UAAMga,YAAY,GAAG,0EAAiC,WAAjC,CAArB;AAEA,UAAMxR,SAAS,GAAG,mEACvBwR,YADuB,EAEvB,UAACha,KAAD;AAAA,eAAsBA,KAAK,CAAC6Y,MAA5B;AAAA,OAFuB,CAAlB;;AAKA,UAAMpQ,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAUN,EAAV;AAAA,eAAiB,mEAAe4R,YAAf,EAA6B,UAACrR,QAAD,EAAc;AACrF,cAAIA,QAAJ,EAAc;AACZ,mBAAOA,QAAQ,CAACD,OAAD,CAAR,CAAkBE,IAAlB,CAAuB,UAAAC,IAAI,EAAI;AACpC,qBAAOA,IAAI,CAACT,EAAL,KAAYA,EAAnB;AACD,aAFM,CAAP;AAGD,WAJD,MAIO;AACL,mBAAO,EAAP;AACD;AACF,SAR2C,CAAjB;AAAA,OAApB;;AAUA,UAAM6R,iBAAiB,GAAG,SAApBA,iBAAoB,CAAClO,MAAD;AAAA,eAC/B,mEAAeiO,YAAf,EAA6B,UAAAha,KAAK;AAAA,iBAAIA,KAAK,CAAC6Y,MAAN,CAAa1Q,MAAb,CAAoB,UAAA+R,CAAC;AAAA,mBAAIA,CAAC,CAACJ,UAAF,CAAa/N,MAAb,KAAwBA,MAA5B;AAAA,WAArB,CAAJ;AAAA,SAAlC,CAD+B;AAAA,OAA1B;;;;;;;;;;;;;;;;;AClVP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaoO,c;AAeX,gCACUnc,KADV,EAEUgL,IAFV,EAE0B;AAAA;;AADhB,eAAAhL,KAAA,GAAAA,KAAA;AACA,eAAAgL,IAAA,GAAAA,IAAA;AAfF,eAAAoR,iBAAA,GAA4B,CAA5B,CAekB,CAfa;;AAC/B,eAAAC,kBAAA,GAA8B,KAA9B;AAGD,eAAAjS,EAAA,GAAK,EAAL;AACA,eAAA3C,IAAA,GAAO,OAAP;AACA,eAAAlH,KAAA,GAAQ,EAAR;AAKP,eAAAuB,eAAA,GAAiC,IAAI,4CAAJ,EAAjC;AAKI;;;;iBAEG,mBAAO;AACZwa,0BAAc,CAACC,KAAf;AAEA,iBAAKC,WAAL,GAAmB,IAAnB;AACA,iBAAK/U,IAAL,GAAY,OAAZ;AACA,iBAAKlH,KAAL,GAAa,EAAb;AACA,iBAAK+T,KAAL,GAAa,EAAb;AACA,iBAAKmI,SAAL,GAAiB,EAAjB;AACD;;;iBAEM,qBAAYpR,SAAZ,EAA6B;AAClC;AACA,gBAAMqR,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACAD,gBAAI,CAACE,WAAL,CAAiBF,IAAI,CAACG,WAAL,KAAqB,KAAKT,iBAA3C;AAEAE,0BAAc,CAACQ,OAAf,CAAuB,IAAvB,EAAqCzR,SAAS,CAACjB,EAA/C;AACAkS,0BAAc,CAACQ,OAAf,CAAuB,MAAvB,EAAqCzR,SAAS,CAAC5D,IAA/C;AACA6U,0BAAc,CAACQ,OAAf,CAAuB,OAAvB,EAAqCzR,SAAS,CAAC9K,KAA/C;;AACA,gBAAG8K,SAAS,CAACC,KAAb,EAAmB;AACjBgR,4BAAc,CAACQ,OAAf,CAAuB,YAAvB,EAAqCzR,SAAS,CAACC,KAAV,CAAgBA,KAArD;AACD;;AACDgR,0BAAc,CAACQ,OAAf,CAAuB,OAAvB,EAAqCC,IAAI,CAACC,SAAL,CAAe3R,SAAS,CAACiJ,KAAzB,CAArC;AACAgI,0BAAc,CAACQ,OAAf,CAAuB,QAAvB,EAAqCJ,IAAI,CAACO,MAAL,EAArC,EAZkC,CAalC;AAEA;;AACAX,0BAAc,CAACQ,OAAf,CAAuB,SAAvB,EAAiCC,IAAI,CAACC,SAAL,CAAe3R,SAAS,CAAC6R,OAAzB,CAAjC;AAEA,iBAAK9S,EAAL,GAAmB,KAAKc,UAAL,CAAgB,IAAhB,CAAnB;AACA,iBAAKzD,IAAL,GAAmB,KAAKyD,UAAL,CAAgB,MAAhB,CAAnB;AACA,iBAAK3K,KAAL,GAAmB,KAAK2K,UAAL,CAAgB,OAAhB,CAAnB;AACA,iBAAKsR,WAAL,GAAmB,KAAKtR,UAAL,CAAgB,kBAAhB,CAAnB;AACA,iBAAKoJ,KAAL,GAAmB,KAAKpJ,UAAL,CAAgB,OAAhB,CAAnB;AACA,iBAAKuR,SAAL,GAAmB,KAAKvR,UAAL,CAAgB,WAAhB,CAAnB;AAEA,mBAAO,IAAP;AACD;AAED;;;;;;;iBAIO,0BAAiB;AAAA;;AACtB,gBAAI,CAAC,KAAKA,UAAL,CAAgB,YAAhB,CAAL,EAAoC;AAClC,qBAAO,KAAKiS,oBAAL,EAAP,CADkC,CAElC;AACD;;AAED,mBAAO,gDAAWC,MAAX,CAAkB,UAAAC,QAAQ,EAAI;AACnC,kBAAIH,OAAO,GAAGH,IAAI,CAACO,KAAL,CAAW,OAAI,CAACpS,UAAL,CAAgB,SAAhB,CAAX,CAAd;AACAtK,qBAAO,CAACC,GAAR,CAAYqc,OAAZ;AACA,kBAAMzc,IAAI,GAAG;AACX2J,kBAAE,EAAO,OAAI,CAACc,UAAL,CAAgB,IAAhB,CADE;AAEX3K,qBAAK,EAAI,OAAI,CAAC2K,UAAL,CAAgB,OAAhB,CAFE;AAGXzD,oBAAI,EAAK,OAAI,CAACyD,UAAL,CAAgB,MAAhB,CAHE;AAIXI,qBAAK,EAAI;AAAEA,uBAAK,EAAE,OAAI,CAACJ,UAAL,CAAgB,YAAhB;AAAT,iBAJE;AAKXoJ,qBAAK,EAAIyI,IAAI,CAACO,KAAL,CAAW,OAAI,CAACpS,UAAL,CAAgB,OAAhB,CAAX,CALE;AAMXqS,uBAAO,EAAER,IAAI,CAACO,KAAL,CAAW,OAAI,CAACpS,UAAL,CAAgB,WAAhB,CAAX,CANE;AAOXgS,uBAAO,EAAE;AACP,wBAAeA,OAAO,CAAC9S,EADhB;AAEP,6BAAe8S,OAAO,CAACrQ,OAFhB;AAGP,yBAAeqQ,OAAO,CAACpQ,GAHhB;AAIP,4BAAeoQ,OAAO,CAACnQ,MAJhB;AAKP,2BAAemQ,OAAO,CAACjQ,KALhB;AAMP,wBAAeiQ,OAAO,CAAClQ,EANhB;AAOP,6BAAekQ,OAAO,CAAChQ,OAPhB;AAQP,2BAAegQ,OAAO,CAAC3c,KARhB;AASP,2BAAe2c,OAAO,CAAC/P,KAThB;AAUP,gCAAe+P,OAAO,CAAC9P,UAVhB;AAWP,gCAAe8P,OAAO,CAAC7P;AAXhB;AAPE,eAAb;AAqBEgQ,sBAAQ,CAACtb,IAAT,CAActB,IAAd;AACA4c,sBAAQ,CAACG,QAAT;AACH,aA1BM,CAAP;AA4BD;AAED;;;;;;;iBAIO,8BAAqB;AAC1B,mBAAO,KAAKxS,IAAL,CAAUyS,GAAV,CAAmB,sEAAYxV,MAAZ,GAAqB,cAAxC,CAAP;AACD;AAED;;;;;;;;;;iBAOA,uBAAc;AACZ,gBAAG,KAAKoU,kBAAR,EAA4B;AAC1B,kBAAIqB,OAAO,GAAG,IAAIf,IAAJ,EAAd,CAD0B,CAE1B;;AAEA,kBAAIgB,WAAW,GAAG,IAAIhB,IAAJ,CAASL,cAAc,CAACsB,OAAf,CAAuB,QAAvB,CAAT,CAAlB,CAJ0B,CAK1B;AACA;;AAEA,kBAAGF,OAAO,CAACb,WAAR,KAAwBc,WAAW,CAACd,WAAZ,EAA3B,EAAsD;AACpDjc,uBAAO,CAACC,GAAR,CAAY,UAAZ;AACA,qBAAKgd,eAAL;AACA,uBAAO,KAAP;AACD,eAJD,MAIM,IAAGH,OAAO,CAACI,QAAR,KAAqBH,WAAW,CAACG,QAAZ,EAAxB,EAAgD;AACpDld,uBAAO,CAACC,GAAR,CAAY,UAAZ;AACA,qBAAKgd,eAAL;AACA,uBAAO,KAAP;AACD,eAJK,MAIA,IAAGH,OAAO,CAACK,MAAR,KAAmBJ,WAAW,CAACI,MAAZ,EAAtB,EAA4C;AAChDnd,uBAAO,CAACC,GAAR,CAAY,UAAZ;AACA,qBAAKgd,eAAL;AACA,uBAAO,KAAP;AACD;;AAED,kBAAIG,OAAO,GAAON,OAAO,CAACO,QAAR,KAAmB,GAAnB,GAAuBP,OAAO,CAACQ,UAAR,EAAvB,GAA4C,GAA5C,GAAgDR,OAAO,CAACS,UAAR,EAAlE;AACA,kBAAIC,WAAW,GAAGT,WAAW,CAACM,QAAZ,KAAuB,GAAvB,GAA2BN,WAAW,CAACO,UAAZ,EAA3B,GAAoD,GAApD,GAAwDP,WAAW,CAACQ,UAAZ,EAA1E,CAvB0B,CAwB1B;;AACA,kBAAIE,MAAM,GAAG,iCAAb;;AACA,kBAAIC,QAAQ,CAACN,OAAO,CAACO,OAAR,CAAgBF,MAAhB,EAAwB,QAAxB,CAAD,CAAR,GAA8CC,QAAQ,CAACF,WAAW,CAAEG,OAAb,CAAqBF,MAArB,EAA6B,QAA7B,CAAD,CAA1D,EAAmG;AACjGzd,uBAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBmd,OAAxB,EAAiCI,WAAjC;AACA,qBAAKP,eAAL;AACA,uBAAO,KAAP;AACD;AACF;;AAED,mBAAO,IAAP;AACD;;;iBAED,2BAAe;AACb,iBAAK/b,eAAL,CAAqBC,IAArB,GADa,CAEb;;AACA,iBAAK/B,KAAL,CAAWqB,QAAX,CAAoB,IAAI,6EAAJ,EAApB;AACD;AAED;;;;;;;iBAIO,gCAAuB;AAE5B,mBAAO,gDAAW+b,MAAX,CAAkB,UAAAC,QAAQ,EAAI;AACnC,kBAAM5c,IAAI,GAAG;AACXF,qBAAK,EAAE,IADI;AAEXkH,oBAAI,EAAE,IAFK;AAGX6D,qBAAK,EAAE;AAAEA,uBAAK,EAAE;AAAT,iBAHI;AAIXgJ,qBAAK,EAAE,IAJI;AAKXiJ,uBAAO,EAAE;AALE,eAAb;AAOAF,sBAAQ,CAACtb,IAAT,CAActB,IAAd,EARmC,CAQd;AACrB;;AACA4c,sBAAQ,CAACG,QAAT,GAVmC,CAUd;AACrB;AACD,aAZM,CAAP;AAcD,W,CAED;;;;iBACO,oBAAWpV,GAAX,EAAwB;AAC7B,mBAAOkU,cAAc,CAACsB,OAAf,CAAuBxV,GAAvB,CAAP;AACD;AAED;;;;;;iBAGO,mBAAUvG,IAAV,EAAwB;AAC7B,gBAAI2c,KAAK,GAAG,KAAZ;;AAEA,gBAAI,KAAKC,WAAL,EAAJ,EAAwB;AAEtB,mBAAKze,KAAL,CAAWsO,MAAX,CAAkB,UAAAtM,KAAK;AAAA,uBAAIA,KAAK,CAACuM,SAAN,CAAgB9N,IAAhB,CAAqB6T,KAAzB;AAAA,eAAvB,EACCnU,IADD,CACM,iEAAU,KAAK2B,eAAf,CADN,EAECK,SAFD,CAEW,UAAAuc,IAAI,EAAI;AACjB,oBAAGA,IAAH,EAAQ;AACR;AACIA,sBAAI,CAAC/V,OAAL,CAAa,UAACgW,SAAD,EAAqB;AAChC,wBAAIA,SAAS,CAAC9c,IAAV,KAAmBA,IAAvB,EAA6B;AAC3B2c,2BAAK,GAAG,IAAR;AACD;AACF,mBAJD;AAKH;AACF,eAXD;AAaD,aAfD,MAeK,CACH;AACD;;AAED,mBAAOA,KAAP;AACD;;;iBAED,uBAAc;AACZ;AACA,iBAAK1c,eAAL,CAAqBC,IAArB;AACD;;;;;;;yBAtNUoa,c,EAAc,yG,EAAA,uH;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc,K;AAAA,oBAFb;;;;;wEAEDA,c,EAAc;gBAH1B,wDAG0B;iBAHf;AACV7Z,sBAAU,EAAE;AADF,W;AAGe,U;;;;;;;;;;;;;;;;;;;;;;;;ACf3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAAasc,I;AAgBX,wBAAc;AAAA;;AACZ,eAAKC,SAAL,GAAiB,EAAjB;AACA,eAAKC,OAAL,GAAe,EAAf;AACA,eAAKC,IAAL,GAAY,EAAZ;AACA,eAAKC,aAAL,GAAqB,CAArB;AACA,eAAKnS,OAAL,GAAe,CAAf;AACA,eAAKoS,QAAL,GAAgB,IAAIC,QAAJ,CAAa,EAAb,EAAiB,EAAjB,CAAhB;AACA,eAAKC,OAAL,GAAe,CAAC,IAAIC,OAAJ,CAAY,EAAZ,EAAgB,EAAhB,CAAD,CAAf;AACA,eAAKC,KAAL,GAAa,KAAb;AACD;;;;iBAED,4BAAuB;AACrB,mBAAO,IAAIT,IAAJ,EAAP;AACD;;;;;;UAIUQ,O,GAEX,iBACSE,KADT,EAESC,MAFT,EAGSnV,EAHT,EAISC,OAJT,EAKSmV,UALT,EAMSC,SANT,EAM2B;AAAA;;AALlB,aAAAH,KAAA,GAAAA,KAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAnV,EAAA,GAAAA,EAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AACA,aAAAmV,UAAA,GAAAA,UAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACJ,O;;UAIMC,U,GAEX,oBACS7V,IADT,EACqB;AAAA;;AAAZ,aAAAA,IAAA,GAAAA,IAAA;AACJ,O;;UAIMqV,Q,GAEX,kBACSS,aADT,EAESV,QAFT,EAGS7U,EAHT,EAGoB;AAAA;;AAFX,aAAAuV,aAAA,GAAAA,aAAA;AACA,aAAAV,QAAA,GAAAA,QAAA;AACA,aAAA7U,EAAA,GAAAA,EAAA;AACL,O;;UAIOwV,U,GAEX,oBACSxV,EADT,EAES2D,MAFT,EAGSwR,MAHT,EAGuB;AAAA;;AAFd,aAAAnV,EAAA,GAAAA,EAAA;AACA,aAAA2D,MAAA,GAAAA,MAAA;AACA,aAAAwR,MAAA,GAAAA,MAAA;AACL,O;;UAIOM,Q,GAEX,kBACSzV,EADT,EAESC,OAFT,EAGSyV,IAHT,EAGqB;AAAA;;AAFZ,aAAA1V,EAAA,GAAAA,EAAA;AACA,aAAAC,OAAA,GAAAA,OAAA;AACA,aAAAyV,IAAA,GAAAA,IAAA;AACL,O;;UAIOC,Q,GAQX,oBAAc;AAAA;;AACZ,aAAK3V,EAAL,GAAU,IAAV;AACA,aAAK3C,IAAL,GAAY,EAAZ;AACA,aAAK+X,UAAL,GAAkB,EAAlB;AACA,aAAKQ,UAAL,GAAkB,EAAlB;AACA,aAAKC,SAAL,GAAiB,CAAC,IAAIC,QAAJ,EAAD,CAAjB;AACD,O;;UAIUA,Q,GASX,oBAAc;AAAA;;AACZ,aAAK9V,EAAL,GAAU,IAAV;AACA,aAAK+V,YAAL,GAAoB,IAApB;AACA,aAAK9V,OAAL,GAAe,IAAf;AACA,aAAKmV,UAAL,GAAkB,IAAlB;AACA,aAAKQ,UAAL,GAAkB,IAAlB;AACA,aAAKnW,IAAL,GAAY,IAAI+U,IAAJ,EAAZ;AACD,O;;UAIUwB,S,GAKX,mBAAc9V,OAAd,EAAuBD,OAAvB,EAAgCgW,KAAhC,EAAqC;AAAA;;AACnC,aAAK/V,OAAL,GAAgBA,OAAhB;AACA,aAAKD,OAAL,GAAgBA,OAAhB;AACA,aAAKgW,KAAL,GAAgBA,KAAhB;AACD,O;;UAGUC,M,GAUX,kBAAc;AAAA;;AACZ,aAAK7Y,IAAL,GAAY,EAAZ;AACD,O;;UAGU8Y,W,GAWX,uBAAc;AAAA;;AACZ,aAAK1W,IAAL,GAAY,EAAZ;AACA,aAAKoV,QAAL,GAAgB,IAAIC,QAAJ,CAAa,EAAb,EAAiB,EAAjB,CAAhB;AACD,O;;UAKUsB,mB,GAIX,+BAAc;AAAA;;AACZ,aAAKC,YAAL,GAAoB,IAAIC,8BAAJ,EAApB;AACA,aAAK3W,KAAL,GAAa,EAAb;AACD,O;;UAEU2W,8B,GAMX,0CAAc;AAAA;;AACZ,aAAKC,EAAL,GAAU,CAAV;AACA,aAAKC,MAAL,GAAc,CAAd;AACA,aAAKC,QAAL,GAAgB,CAAhB;AACA,aAAKC,SAAL,GAAiB,CAAjB;AACD,O;;;;;;;;;;;;;;;;;AC5LH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,c,CAoBA;AACA;;;UACaC,e;AAkBX,iCACUC,IADV,EAEUC,MAFV,EAGUC,OAHV,EAIUC,QAJV,EAI6B;AAAA;;AAHnB,eAAAH,IAAA,GAAAA,IAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AApBD,eAAAC,cAAA,GAAiB,IAAjB;AAET,eAAAC,SAAA,GAAY,IAAZ;AAKU,eAAAC,aAAA,GAAgB,IAAI,0DAAJ,EAAhB;AAEV,eAAAC,UAAA,GAAc,2EAAd;AACA,eAAAC,WAAA,GAAc;AACZ,wBAAY,2EADA;AAEZ,2BAAe,2EAFH;AAGZ,0BAAc;AAHF,WAAd;AAYC;;;;iBAED,oBAAW;AACT,iBAAKC,QAAL,GAAgB,KAAKT,IAAL,CAAUU,aAAV,CAAwBC,cAAxC;AACA,iBAAKC,MAAL,GAAgB,KAAKZ,IAAL,CAAUU,aAAV,CAAwBG,YAAxC;AACD;;;iBAED,2BAAe;AACb,iBAAKC,kBAAL,CAAwB,KAAKV,cAA7B;AACD;;;iBAEF,4BAAmBW,KAAnB,EAAmC;AACjC,gBAAIA,KAAJ,EAAW;AACV,mBAAKf,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BC,KAA9B,GAAsC,SAAtC;AACA,mBAAKjB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BE,QAA9B,GAAyC,MAAzC;AACA,mBAAKlB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BG,SAA9B,GAA0C,OAA1C;AACA,mBAAKnB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BI,SAA9B,GAA0C,KAA1C;AACA,mBAAKpB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BK,UAA9B,GAA2C,MAA3C;AACA,mBAAKrB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BM,UAA9B,GAA2C,YAA3C;AACA,mBAAKnB,QAAL,CAAcoB,QAAd,CAAuB,KAAKvB,IAAL,CAAUU,aAAjC,EAAgD,KAAhD,EAPU,CAQV;AACD,aATA,MASK;AACJ,mBAAKV,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BC,KAA9B,GAAsC,SAAtC;AACA,mBAAKjB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BE,QAA9B,GAAyC,MAAzC;AACA,mBAAKlB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BG,SAA9B,GAA0C,MAA1C;AACA,mBAAKnB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BI,SAA9B,GAA0C,KAA1C;AACA,mBAAKpB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BQ,WAA9B,GAA4C,EAA5C;AACA,mBAAKxB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BK,UAA9B,GAA2C,MAA3C;AACA,mBAAKrB,IAAL,CAAUU,aAAV,CAAwBM,KAAxB,CAA8BM,UAA9B,GAA2C,SAA3C;AACA,mBAAKnB,QAAL,CAAcsB,WAAd,CAA0B,KAAKzB,IAAL,CAAUU,aAApC,EAAmD,KAAnD;AACD;AACD,W,CAEF;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEI;AACA;AAEA;AACA;AAEA;AACA;AACA;AACJ;;;;iBAGE,mBAAUjY,KAAV,EAAiB;AAEf,gBAAI,CAAC,KAAK2X,cAAV,EAA0B;AACxB,mBAAKU,kBAAL,CAAwB,KAAxB;AACA;AACD,aAHD,MAGO;AACL,mBAAKA,kBAAL,CAAwB,IAAxB;AACD;;AAED,gBAAMY,IAAI,GAAG,KAAK1B,IAAL,CAAUU,aAAvB;AAEA,gBAAMiB,WAAW,GAAGD,IAAI,CAAChX,KAAzB,CAXe,CAWiB;;AAChC,gBAAIkX,IAAI,GAAGnZ,KAAK,CAACrB,GAAjB;AACA,gBAAIya,QAAQ,GAAG,EAAf;AACA,gBAAIC,IAAJ;;AAEA,gBAAIH,WAAW,CAACI,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,qBAAO,IAAP;AACD,aAFD,MAEO,IAAIJ,WAAW,CAACI,MAAZ,IAAsB,CAA1B,EAA6B;AAClC;AACAF,sBAAQ,GAAGF,WAAX;AACD,aAHM,MAGA;AACL;AACAE,sBAAQ,GAAGF,WAAW,CAACK,MAAZ,CAAmBN,IAAI,CAACf,cAAL,GAAsB,CAAzC,EAA4C,CAA5C,CAAX,CAFK,CAGL;AACD;;AAED,gBAAIlY,KAAK,CAACwZ,KAAN,IAAe,IAAnB,EAAyB;AACvB;AACAL,kBAAI,GAAGnZ,KAAK,CAACrB,GAAb;AACD,aAHD,MAGM,IAAIqB,KAAK,CAACwZ,KAAN,GAAc,CAAlB,EAAqB;AACzB;AACAL,kBAAI,GAAGnZ,KAAK,CAACwZ,KAAb,CAFyB,CAIzB;;AACA,kBAAI,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiBja,OAAjB,CAAyBS,KAAK,CAACrB,GAA/B,MAAwC,CAA5C,EAA+C;AAC7C,uBAAO,IAAP;AACD;AACF,aARK,MAQA,CACJ;AACA;AACD,aAzCc,CA2Cf;;;AACA,gBAAIqB,KAAK,CAACyZ,QAAV,EAAoB;AAClBJ,kBAAI,GAAGrZ,KAAK,CAAC0Z,SAAN,IAAmB1Z,KAAK,CAAC2Z,YAAhC;AACD,aAFD,MAEM,IAAI,OAAO3Z,KAAK,CAAC4Z,OAAb,KAA0B,WAA9B,EAA2C;AAC/CP,kBAAI,GAAGrZ,KAAK,CAAC4Z,OAAb;AACD;;AAED,gBAAMC,MAAM,GAAWZ,IAAI,CAACb,YAA5B;AACA,iBAAKD,MAAL,GAAcc,IAAI,CAACb,YAAnB;AACA,iBAAKJ,QAAL,GAAgBiB,IAAI,CAACf,cAArB;;AAEA,gBAAI;AACF,kBAAM4B,UAAU,GAAG,KAAKhC,UAAL,CAAgBvY,OAAhB,CAAwB6Z,QAAxB,CAAnB;;AAEA,kBAAIU,UAAU,KAAK,CAAC,CAAhB,IAAqBT,IAAzB,EAA+B;AAC7B,uBAAO,IAAP;AACD;;AAED,kBAAMU,KAAK,GAAG,KAAKhC,WAAL,CAAiB,UAAjB,EAA6BwB,MAA7B,CAAoCO,UAApC,EAAgD,CAAhD,CAAd;;AAEA,kBAAI,KAAKlC,SAAT,EAAoB;AAClB;AACA,qBAAKA,SAAL,GAAiB,KAAjB;AAEA,qBAAKoC,QAAL,GAAgBd,WAAW,CAACe,SAAZ,CAAsB,CAAtB,EAAyBhB,IAAI,CAACf,cAAL,GAAsB,CAA/C,IACA6B,KADA,GAEAb,WAAW,CAACe,SAAZ,CAAsBhB,IAAI,CAACb,YAA3B,EAAyCc,WAAW,CAACI,MAArD,CAFhB;AAGD,eAPD,MAOO;AACL,qBAAKU,QAAL,GAAgBd,WAAW,CAACe,SAAZ,CAAsB,CAAtB,EAAyBhB,IAAI,CAACf,cAAL,GAAsB,CAA/C,IACA6B,KADA,GAEAb,WAAW,CAACe,SAAZ,CAAsBhB,IAAI,CAACb,YAA3B,EAAyCc,WAAW,CAACI,MAArD,CAFhB;AAID;;AAEC,mBAAKzB,aAAL,CAAmBjV,IAAnB,CAAwB,KAAKoX,QAA7B;;AACA,mBAAKxC,MAAL,CAAY0C,aAAZ,CAA0BC,UAA1B,CAAqC,KAAKH,QAA1C;AAEH,aA1BD,CA0BC,OAAO9iB,KAAP,EAAc;AACbC,qBAAO,CAACD,KAAR,CAAcA,KAAd;AACD;;AAED,iBAAKkjB,SAAL;AACD;;;iBAGD,qBAAY;AACV;AACA,iBAAK7C,IAAL,CAAUU,aAAV,CAAwBoC,KAAxB;AACA,iBAAK9C,IAAL,CAAUU,aAAV,CAAwBqC,iBAAxB,CAA0C,KAAKtC,QAA/C,EAAyD,KAAKG,MAA9D;AACD;;;;;;;yBA7PUb,e,EAAe,yH,EAAA,uH,EAAA,yH,EAAA,wH;AAAA,O;;;cAAfA,e;AAAe,+C;AAAA;AAAA;;qBAAf,qB;AAAiB,a;;;;;;;;;;;;;wEAAjBA,e,EAAe;gBAT3B,uDAS2B;iBATjB;AACTpX,oBAAQ,EAAE,kBADD;AAET;AACEqa,gBAAI,EAAE;AACJ,yBAAW;AADP;AAHC,W;AASiB,U;;;;;;;;;;;AAEjB5C,wBAAc;kBAAtB;AAAsB,Y;AAObE,uBAAa;kBAAtB;AAAsB;;;;;;;;;;;;;;;;;;;AC/BzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AAMe;;AACP;;AACE;;AACA;;AACF;;AACJ;;;;UAGS2C,gB;AAKT,kCAAoBhkB,MAApB,EAA8DikB,QAA9D,EAAkF;AAAA;;AAAA;;AAA9D,eAAAjkB,MAAA,GAAAA,MAAA;AAA0C,eAAAikB,QAAA,GAAAA,QAAA;AAJvD,eAAAC,gBAAA,GAAmB,IAAnB;AAES,eAAAC,eAAA,GAAkB,yBAAlB;AAGd,eAAKnkB,MAAL,CAAYuJ,MAAZ,CAAmBrH,SAAnB,CAA6B,UAAAsH,KAAK,EAAI;AAClC,gBAAIA,KAAK,YAAY,+DAArB,EAAsC;AAClC,qBAAI,CAAC0a,gBAAL,GAAwB,IAAxB;AACH,aAFD,MAEO,IAAK1a,KAAK,YAAY,6DAAjB,IAAkCA,KAAK,YAAY,gEAAnD,IAAuEA,KAAK,YAAY,+DAA7F,EAA8G;AACjH,qBAAI,CAAC0a,gBAAL,GAAwB,KAAxB;AACH;AACJ,WAND,EAMG,YAAM;AACL,mBAAI,CAACA,gBAAL,GAAwB,KAAxB;AACH,WARD;AASD;;;;iBAED,uBAAW;AACP,iBAAKA,gBAAL,GAAwB,KAAxB;AACH;;;;;;;yBAnBQF,gB,EAAgB,uH,EAAA,gEAKmB,wDALnB,C;AAK2B,O;;;cAL3CA,gB;AAAgB,oC;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,mI;AAAA;AAAA;AARd;;;;AAAuB;;;;;;;;;wEAQzBA,gB,EAAgB;gBAV5B,uDAU4B;iBAVlB;AACPta,oBAAQ,EAAE,aADH;AAEP0a,oBAAQ,qNAFD;AAQPC,yBAAa,EAAE,gEAAkBC;AAR1B,W;AAUkB,U;;;;kBAK+CC,Q;AAAQ;oBAA3C,oDAA2C;qBAApC,wD;AAAoC;;;AAFhEJ,yBAAe;kBAA9B;AAA8B;;;;;;;;;;;;;;;;;;;ACjBniDA;;;;;UA+CaK,kB;;;;;cAAAA;;;;2BAAAA,kB;AAAkB,S;AAAA,kBA1C3B,oFA0C2B,EAzC3B,wEAyC2B,EAxC3B,qFAwC2B,EAvC3B,oEAuC2B,EAtC3B,4EAsC2B,EArC3B,sEAqC2B,EApC3B,uEAoC2B,EAnC3B,gFAmC2B,EAlC3B,wEAkC2B,EAjC3B,8EAiC2B,EAhC3B,gFAgC2B,EA/B3B,8EA+B2B,EA9B3B,qEA8B2B,EA7B3B,uEA6B2B,EA5B3B,qEA4B2B,EA3B3B,qEA2B2B,EA1B3B,+EA0B2B,EAzB3B,oFAyB2B,EAxB3B,4FAwB2B,EAvB3B,uEAuB2B,EAtB3B,uEAsB2B,EArB3B,yEAqB2B,EApB3B,2EAoB2B,EAnB3B,oFAmB2B,EAlB3B,yEAkB2B,EAjB3B,8EAiB2B,EAhB3B,qEAgB2B,EAf3B,2EAe2B,EAd3B,qEAc2B,EAb3B,2EAa2B,EAZ3B,2EAY2B,EAX3B,2EAW2B,EAV3B,kEAU2B,EAT3B,6DAS2B,EAR3B,6DAQ2B,EAP3B,0EAO2B,EAN3B,uEAM2B,EAL3B,mEAK2B,EAJ3B,qEAI2B,EAH3B,iEAG2B;;;;4HAAlBA,kB,EAAkB;AAAA,oBA1C3B,oFA0C2B,EAzC3B,wEAyC2B,EAxC3B,qFAwC2B,EAvC3B,oEAuC2B,EAtC3B,4EAsC2B,EArC3B,sEAqC2B,EApC3B,uEAoC2B,EAnC3B,gFAmC2B,EAlC3B,wEAkC2B,EAjC3B,8EAiC2B,EAhC3B,gFAgC2B,EA/B3B,8EA+B2B,EA9B3B,qEA8B2B,EA7B3B,uEA6B2B,EA5B3B,qEA4B2B,EA3B3B,qEA2B2B,EA1B3B,+EA0B2B,EAzB3B,oFAyB2B,EAxB3B,4FAwB2B,EAvB3B,uEAuB2B,EAtB3B,uEAsB2B,EArB3B,yEAqB2B,EApB3B,2EAoB2B,EAnB3B,oFAmB2B,EAlB3B,yEAkB2B,EAjB3B,8EAiB2B,EAhB3B,qEAgB2B,EAf3B,2EAe2B,EAd3B,qEAc2B,EAb3B,2EAa2B,EAZ3B,2EAY2B,EAX3B,2EAW2B,EAV3B,kEAU2B,EAT3B,6DAS2B,EAR3B,6DAQ2B,EAP3B,0EAO2B,EAN3B,uEAM2B,EAL3B,mEAK2B,EAJ3B,qEAI2B,EAH3B,iEAG2B;AAAA,S;AAHf,O;;;;;wEAGHA,kB,EAAkB;gBA5C9B,sDA4C8B;iBA5CrB;AACR3V,mBAAO,EAAE,CACP,oFADO,EAEP,wEAFO,EAGP,qFAHO,EAIP,oEAJO,EAKP,4EALO,EAMP,sEANO,EAOP,uEAPO,EAQP,gFARO,EASP,wEATO,EAUP,8EAVO,EAWP,gFAXO,EAYP,8EAZO,EAaP,qEAbO,EAcP,uEAdO,EAeP,qEAfO,EAgBP,qEAhBO,EAiBP,+EAjBO,EAkBP,oFAlBO,EAmBP,4FAnBO,EAoBP,uEApBO,EAqBP,uEArBO,EAsBP,yEAtBO,EAuBP,2EAvBO,EAwBP,oFAxBO,EAyBP,yEAzBO,EA0BP,8EA1BO,EA2BP,qEA3BO,EA4BP,2EA5BO,EA6BP,qEA7BO,EA8BP,2EA9BO,EA+BP,2EA/BO,EAgCP,2EAhCO,EAiCP,kEAjCO,EAkCP,6DAlCO,EAmCP,6DAnCO,EAoCP,0EApCO,EAqCP,uEArCO,EAsCP,mEAtCO,EAuCP,qEAvCO,EAwCP,iEAxCO;AADD,W;AA4CqB,U;;;;;;;;;;;;;;;;;;AChG/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWa4V,4B;AAMX,8CACS5Y,SADT,EAEkCC,IAFlC,EAGU/L,KAHV,EAG2B;AAAA;;AAFlB,eAAA8L,SAAA,GAAAA,SAAA;AACyB,eAAAC,IAAA,GAAAA,IAAA;AACxB,eAAA/L,KAAA,GAAAA,KAAA;AARV,eAAA2kB,KAAA,GAAQ,IAAI,0DAAJ,EAAR;AAEA,eAAAC,UAAA,GAAa,IAAI,6DAAJ,EAAb;AACgB,eAAAC,cAAA,GAAiB,IAAjB;AAMX;;;;iBAEL,oBAAW;AACT,iBAAKD,UAAL,CAAgB3F,QAAhB,CAAyBU,aAAzB,GAAyC,KAAzC;AACA,iBAAKiF,UAAL,CAAgBE,SAAhB,GAA4B,KAAK/Y,IAAL,CAAU3B,EAAtC;AACA,iBAAKwa,UAAL,CAAgBG,OAAhB,GAA4B,CAA5B,CAHS,CAGsB;AAChC;;;iBAGD,0BAAiB;AACf,gBAAI,KAAKF,cAAT,EAAyB;AACvB,mBAAKD,UAAL,CAAgB3F,QAAhB,CAAyBU,aAAzB,GAAyC,KAAzC;AACD,aAFD,MAEO;AACL,mBAAKiF,UAAL,CAAgB3F,QAAhB,CAAyBU,aAAzB,GAAyC,KAAzC;AACD;AACF;;;iBAED,qBAAYzT,YAAZ,EAAmC;AACjC,iBAAKJ,SAAL,CAAeK,KAAf,CAAqBD,YAArB;AACD;;;iBAED,eAAM9B,EAAN,EAAmB;AACjB,iBAAKgC,WAAL,CAAiB,IAAjB,EADiB,CAEjB;;AACA,iBAAKpM,KAAL,CAAWqB,QAAX,CAAoB,IAAI,sEAAJ,CAA8B,KAAKujB,UAAnC,CAApB;AACA,iBAAKD,KAAL,CAAWtY,IAAX;AACD;;;;;;;yBApCUqY,4B,EAA4B,sI,EAAA,gEAQ7B,wEAR6B,C,EAQd,kH;AAAA,O;;;cARdA,4B;AAA4B,mD;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,iuB;AAAA;AAAA;ACTzC;;AACI;;AACI;;AAAyC;;AAAyB;;AAClE;;AACI;;AAA0D;AAAA;AAAA,eAA4B,eAA5B,EAA4B;AAAA,qBAAkB,IAAAM,cAAA,EAAlB;AAAkC,aAA9D;;AAAgE;;AAAqC;;AACnK;;AACJ;;AACF;;AAEF;;AAaE;;AACI;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AAEE;AAAA;AAAA;;AACgB;;AACpB;;AACF;;AACJ;;AAQF;;AAEA;;AACE;;AAAiC;AAAA,qBAAS,IAAA5Y,WAAA,CAAY,IAAZ,CAAT;AAA0B,aAA1B;;AAA4B;;AAAM;;AACnE;;AAA0C;AAAA,qBAAS,IAAA6Y,KAAA,aAAT;AAAuB,aAAvB;;AAAyB;;AAAG;;AAGxE;;;;AA7CiD;;AAAA;;AAEqB;;AAAA;;AAAgE;;AAAA;;AAuB1H;;AAAA,2GAAiC,SAAjC,EAAiC,mBAAjC;;;;;;;;;wEDlBCP,4B,EAA4B;gBAJxC,uDAIwC;iBAJ9B;AACT/a,oBAAQ,EAAE,4BADD;AAET2C,uBAAW,EAAE;AAFJ,W;AAI8B,U;;;;;;oBAQpC,oD;qBAAO,wE;;;;;;AAJMuY,wBAAc;kBAA7B;AAA6B;;;;;;;;;;;;;;;;;;;AEfhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACGA;;AACE;;AAAgC;;AAAc;;AAChD;;;;AAFsE;;;;;;AA8D9C;;AACI;;AACI;;AAEJ;;AACA;;AACI;;AAAI;;AAAsB;;AAC1B;;AAAwB;;AAAkB;;AAE9C;;AACJ;;;;;;;;AARa;;AAAA;;AAID;;AAAA;;AACoB;;AAAA;;;;;;AAaxD;;AACE;;AAAU;;AAAc;;AAC1B;;;;;;;;AAFQ;;;;;;;;UDhEKK,kB;AAkBX,oCACUtjB,IADV,EAEU5B,KAFV,EAGUiP,EAHV,EAIUvB,MAJV,EAI4B;AAAA;;AAAA;;AAHlB,eAAA9L,IAAA,GAAAA,IAAA;AACA,eAAA5B,KAAA,GAAAA,KAAA;AACA,eAAAiP,EAAA,GAAAA,EAAA;AACA,eAAAvB,MAAA,GAAAA,MAAA;AArBH,eAAAE,MAAA,GAA0C,EAA1C;AAEP,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAsX,cAAA,GAAiB,KAAjB;AACO,eAAArX,QAAA,GAAiB,IAAI,wDAAJ,EAAjB;AAKP,eAAAO,WAAA,GAAsB,IAAtB;AACA,eAAAiR,KAAA,GAAQ,UAAR;AAEA,eAAA8F,IAAA,GAAe,mBAAf;AAEA,eAAAC,SAAA,GAAY,EAAZ;AASE,eAAKhX,WAAL,GAAmB,sEAAYnG,UAA/B,CAF0B,CAI1B;;AACA,eAAKjG,WAAL,GAAmB,KAAKL,IAAL,CAAUM,SAAV,CAAoBC,SAApB,CAA+B,UAAAC,QAAQ;AAAA,mBAAI,OAAI,CAACyL,SAAL,GAAiBzL,QAArB;AAAA,WAAvC,CAAnB;AAEA,eAAKsL,MAAL,CAAYY,MAAZ,CAAmB,UAAAtO,KAAK;AAAA,mBAAIA,KAAK,CAACuO,SAAV;AAAA,WAAxB,EAA6CpM,SAA7C,CAAuD,UAAAqM,QAAQ,EAAI;AACjE,mBAAI,CAACV,QAAL,GAAgBU,QAAQ,CAAC/N,IAAzB,CADiE,CAEjE;AACD,WAHD;AAID;;;;iBAED,kBAAM;AACJ;AACA,iBAAKT,KAAL,CAAWqB,QAAX,CAAoB,IAAI,6EAAJ,EAApB;AAED;;;;;;;yBAvCU6jB,kB,EAAkB,0I,EAAA,kH,EAAA,sI,EAAA,kH;AAAA,O;;;cAAlBA,kB;AAAkB,mC;AAAA,iB;AAAA,e;AAAA,+wB;AAAA;AAAA;AClB/B;;AA6CA;;AAOA;;AACI;;AACI;;AAII;;AACI;;AACI;;AAEI;;AAWJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AAIA;;AAGA;;AAGI;;AACI;;AAAU;;AAAW;;AAAY;;AAAQ;;AAG7C;;AAAsB;AAAA,qBAAS,IAAAvW,MAAA,EAAT;AAAiB,aAAjB;;AAClB;;AAAU;;AAAW;;AAAY;;AAAS;;AAClD;;;;;;AA9FmD;;AA6C3C;;AAAA;;AAe+B;;AAAA;;AAEH;;AAAA;;AAoBgC;;AAAA;;AAM1C;;AAAA;;;;;;;;;wEDtEbuW,kB,EAAkB;gBAL9B,uDAK8B;iBALpB;AACTvb,oBAAQ,EAAE,YADD;AAET2C,uBAAW,EAAE,yBAFJ;AAGTE,qBAAS,EAAE;AAHF,W;AAKoB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;AErB/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAQA,UAAM8Y,MAAM,GAAc;AAAE7kB,YAAI,EAAE;AAAEF,eAAK,EAAE,IAAT;AAAekH,cAAI,EAAE,IAArB;AAA2B6D,eAAK,EAAE;AAACA,iBAAK,EAAE;AAAR,WAAlC;AAAiDgJ,eAAK,EAAE,IAAxD;AAA8DiJ,iBAAO,EAAE,IAAvE;AAA6EL,iBAAO,EAAE,IAAI,2DAAJ;AAAtF;AAAR,OAA1B;AACO,UAAMtT,YAAY,GAAc0b,MAAhC;;AAOA,eAASpb,OAAT,GAAqE;AAAA,YAApDlI,KAAoD,uEAA5C4H,YAA4C;AAAA,YAA9BxJ,MAA8B;;AAC1E,gBAAQA,MAAM,CAAC4E,IAAf;AACE,eAAK,wDAAL;AAA6B;AAC3B,qBAAO,MAAP,OAAO,CAAP,EAAO,EACFhD,KADE,CAAP;AAGD;;AAED,eAAK,gEAAL;AAAqC;AACnC,qBAAO,MAAP,OAAO,CAAP,kBACKA,KADL,CAAO,EACG;AACRvB,oBAAI,EAAEL,MAAM,CAACC;AADL,eADH,CAAP;AAID;;AAED,eAAK,+DAAL;AAAoC;AAClC,qBAAO,MAAP,OAAO,CAAP,EAAO,EACF2B,KADE,CAAP;AAGD;;AAED,eAAK,uEAAL;AAA4C;AAC1C,qBAAO,MAAP,OAAO,CAAP,kBACKA,KADL,CAAO,EACG;AACRvB,oBAAI,EAAEL,MAAM,CAACC;AADL,eADH,CAAP;AAID;;AAED,eAAK,yDAAL;AAA8B;AAC5B;AACA;AACA;AACA,qBAAOuJ,YAAP;AACD;;AAED,eAAK,iEAAL;AAAsC;AACpC;AACA;AACA;AACA;AACA;AACA,qBAAOA,YAAP;AACD;;AAKD,eAAK,sEAAL;AAA2C;AACzC,qBAAO,MAAP,OAAO,CAAP,EAAO,EACF5H,KADE,CAAP;AAGD;;AAED,eAAK,8EAAL;AAAmD;AACjD,qBAAO,MAAP,OAAO,CAAP,kBACKA,KADL,CAAO,EACG;AACRvB,oBAAI,EAAEL,MAAM,CAACC;AADL,eADH,CAAP;AAID;;AAED;AAAS;AACP,qBAAO2B,KAAP;AACD;AA7DH;AA+DD;;AAEM,UAAMujB,YAAY,GAAG,0EAAiC,WAAjC,CAArB;AAEA,UAAMC,OAAO,GAAG,mEACrBD,YADqB,EAErB,UAACvjB,KAAD;AAAA,eAAsBA,KAAK,CAACvB,IAA5B;AAAA,OAFqB,CAAhB;;;;;;;;;;;;;;;;ACpFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaglB,wB;AAIX,0CAA6CC,OAA7C,EAA8E;AAAA;;AAC5E,eAAKA,OAAL,GAAeA,OAAf;AACD;;;;iBAGD,iBAAQhc,CAAR,EAAgB;AACd,iBAAKgc,OAAL,CAAa1Q,MAAb;AACD;;;;;;;yBAXUyQ,wB,EAAwB,gEAId,+EAJc,C;AAIQ,O;;;cAJhCA,wB;AAAwB,mD;AAAA;AAAA;;qBAAxB,mB;AAAe,a;;;;;;;wEAAfA,wB,EAAwB;gBAHpC,uDAGoC;iBAH1B;AACT9b,oBAAQ,EAAE;AADD,W;AAG0B,U;;;;oBAIrB,oD;qBAAO,+E;;;;AAKrBgc,iBAAO;kBADN,0DACM;mBADO,O,EAAS,CAAC,QAAD,C;AAChB;;;;;;;;;;;;;;;;;;;AChBT;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAI,sEAAY3d,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyB4d,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAIjlB,OAAO,CAACC,GAAR,CAAYglB,GAAZ,CAAJ;AAAA,OADZ","file":"main-es5.js","sourcesContent":["\nimport {of as observableOf,  Observable } from 'rxjs';\n\nimport {catchError, switchMap, map} from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport {Effect, Actions, ofType} from '@ngrx/effects';\n\n\n\n\n\nimport { AuthService } from '../../shared/services/auth.service';\nimport * as UserActions from './user.actions';\nimport * as NewsActions from '../../news/store/news.actions';\nimport * as EditorActions from '../../editor/store/news-editor.actions';\nimport { SessionService } from '../../shared/services/session.service';\nimport { User } from '../../shared/models/user';\n\n@Injectable()\nexport class UserEffects {\n\n  constructor(\n    private actions: Actions,\n    private authService: AuthService,\n    private sessionService: SessionService,\n    private store: Store<any>,\n    private router: Router\n  ) {}\n\n  @Effect()\n  LogIn: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.USER_LOGIN),\n      map((action: UserActions.UserLogin) => action.payload),\n      switchMap(payload => {\n        return this.authService.signIn(payload.email, payload.password).pipe(\n          map((user: User) => {\n            // console.log(user);\n            this.authService.doSignIn(user);\n            return new UserActions.UserLoginSuccess(user);\n          }),\n          catchError((error) => {\n            console.log(error);\n            return observableOf(new UserActions.UserLoginError());\n          }),);\n      }),\n    );\n\n  @Effect({ dispatch: false })\n  LogInSuccess: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.USER_LOGIN_SUCCESS),\n      map((action: UserActions.UserLoginSuccess) => action.payload),\n      map((user: User) => {\n        // console.log(user);\n        if (this.sessionService.saveSession(user)) {\n          // this.router.navigate(['/dashboard/default']);\n          // this._location.back();\n        }\n        // localStorage.setItem('token', user.user.token.token);\n\n      }),\n    );\n\n  @Effect()\n  GetUserSettings: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.USER_GET_SETTINGS),\n      map((action: UserActions.GetUserSettings) => action),\n      switchMap(payload => {\n        return this.sessionService.getUserSetting()\n          .pipe(\n            map((user: User) => {\n              return new UserActions.GetUserSettingsSuccess(user);\n            }),\n            catchError((error) => {\n              console.log(error);\n              return observableOf(new UserActions.GetUserSettingsError());\n            })\n          )\n      }),\n    );\n\n  @Effect()\n  ServerGetUserSettings: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.SERVER_USER_GET_SETTINGS),\n      map((action: UserActions.ServerGetUserSettings) => action),\n      switchMap(payload => {\n        return this.sessionService.updateUserSettings().pipe(\n          map((user: User) => {\n            this.sessionService.saveSession(user);\n            return new UserActions.ServerGetUserSettingsSuccess(user);\n          }),\n          catchError((error) => {\n            console.log(error);\n            return observableOf(new UserActions.ServerGetUserSettingsError());\n          }),);\n      }),\n    );\n\n  @Effect()\n  UserLogout: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.USER_LOGOUT),\n      map((action: UserActions.UserLogout) => action),\n      switchMap(payload => {\n        this.store.dispatch(new NewsActions.LogoutNewsState());\n        this.store.dispatch(new EditorActions.LogoutEditorState());\n        this.authService.doSignOut();\n\n        this.router.navigate(['/authentication/login']);\n        // return Observable.of(new UserActions.UserLogoutSuccess(this.sessionService.getUserLogoutSetting()));\n        return observableOf(new UserActions.UserLogoutSuccess());\n      }),\n    );\n\n  UserLogoutSuccess: Observable<any> = this.actions.\n    pipe(\n      ofType(UserActions.USER_LOGOUT_SUCCESS),\n      map((action: UserActions.UserLogoutSuccess) => {\n        //location.reload();\n        this.router.navigate(['/authentication/login']);\n      })\n    );\n\n  @Effect()\n  User401: Observable<any> = this.actions.\n    pipe(\n        ofType(UserActions.USER_401),\n        switchMap(payload => {\n          console.warn('401 user found!!');\n          return observableOf(new UserActions.UserLogout());\n        })\n    );\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable, Subscription ,  Subject } from 'rxjs';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from './auth.service';\nimport { RouteRoleService } from './route-role.service';\nimport { takeUntil } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, OnDestroy {\n  loggedInSub: Subscription;\n  destroySubject$: Subject<void> = new Subject();\n\n  constructor(\n      private auth: AuthService,\n      private router: Router,\n      private role: RouteRoleService\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n    this.loggedInSub = this.auth.loggedIn$.pipe(takeUntil(this.destroySubject$)).subscribe(\n        loggedIn => {\n          if (!loggedIn ) {\n            this.router.navigate(['/authentication/login']);\n          }\n          this.role.initialize();\n        }\n    );\n\n    return true;\n  }\n\n  ngOnDestroy() {\n    this.destroySubject$.next();\n  }\n}\n","import { Action } from '@ngrx/store';\nimport { News, Ticker, TickersNews } from './../../news/models/news';\n\nexport const GET_A_NEWS = '[News] GET_A_NEWS';\nexport const GET_A_NEWS_SUCCESS = '[News] GET_A_NEWS_SUCCESS';\nexport const GET_A_NEWS_ERROR = '[News] GET_A_NEWS_ERROR';\n\nexport const GET_MY_NEWS = '[News] GET_MY_NEWS';\nexport const GET_MY_NEWS_SUCCESS = '[News] GET_MY_NEWS_SUCCESS';\nexport const GET_MY_NEWS_ERROR = '[News] GET_MY_NEWS_ERROR';\n\nexport const GET_TRASH_NEWS = '[News] GET_TRASH_NEWS';\nexport const GET_TRASH_NEWS_SUCCESS = '[News] GET_TRASH_NEWS_SUCCESS';\nexport const GET_TRASH_NEWS_ERROR = '[News] GET_TRASH_NEWS_ERROR';\n\nexport const DELETE_NEWS = '[News] DELETE_NEWS';\nexport const DELETE_NEWS_SUCCESS = '[News] DELETE_NEWS_SUCCESS';\nexport const DELETE_NEWS_ERROR = '[News] DELETE_NEWS_ERROR';\n\nexport const RESTORE_NEWS = '[News] RESTORE_NEWS';\nexport const RESTORE_NEWS_SUCCESS = '[News] RESTORE_NEWS_SUCCESS';\nexport const RESTORE_NEWS_ERROR = '[News] RESTORE_NEWS_ERROR';\n\nexport const CHANGE_NEWS_LOADED = '[News] CHANGE_NEWS_LOADED';\nexport const CHANGE_MY_NEWS_LOADED = '[News] CHANGE_MY_NEWS_LOADED';\nexport const CHANGE_TRASH_NEWS_LOADED = '[News] CHANGE_TRASH_NEWS_LOADED';\n\nexport const DESTROY_NEWS = '[News] DESTROY_NEWS';\nexport const DESTROY_NEWS_SUCCESS = '[News] DESTROY_NEWS_SUCCESS';\nexport const DESTROY_NEWS_ERROR = '[News] DESTROY_NEWS_ERROR';\n\nexport const GET_TICKERS = '[News] GET_TICKERS';\nexport const GET_TICKERS_SUCCESS = '[News] GET_TICKERS_SUCCESS';\nexport const GET_TICKERS_ERROR = '[News] GET_TICKERS_ERROR';\n\nexport const ADD_TICKER_NEWS = '[News] ADD_TICKER_NEWS';\nexport const ADD_TICKER_NEWS_SUCCESS = '[News] ADD_TICKER_NEWS_SUCCESS';\nexport const ADD_TICKER_NEWS_ERROR = '[News] ADD_TICKER_NEWS_ERROR';\n\nexport const APPROVE_TICKER_NEWS = '[News] APPROVE_TICKER_NEWS';\nexport const APPROVE_TICKER_NEWS_SUCCESS = '[News] APPROVE_TICKER_NEWS_SUCCESS';\nexport const APPROVE_TICKER_NEWS_ERROR = '[News] APPROVE_TICKER_NEWS_ERROR';\n\nexport const DISAPPROVE_TICKER_NEWS = '[News] DISAPPROVE_TICKER_NEWS';\nexport const DISAPPROVE_TICKER_NEWS_SUCCESS = '[News] DISAPPROVE_TICKER_NEWS_SUCCESS';\nexport const DISAPPROVE_TICKER_NEWS_ERROR = '[News] DISAPPROVE_TICKER_NEWS_ERROR';\n\nexport const DELETE_TICKER_NEWS = '[News] DELETE_TICKER_NEWS';\nexport const DELETE_TICKER_NEWS_SUCCESS = '[News] DELETE_TICKER_NEWS_SUCCESS';\nexport const DELETE_TICKER_NEWS_ERROR = '[News] DELETE_TICKER_NEWS_ERROR';\n\nexport const ADD_TICKER = '[News] ADD_TICKER';\nexport const ADD_TICKER_SUCCESS = '[News] ADD_TICKER_SUCCESS';\nexport const ADD_TICKER_ERROR = '[News] ADD_TICKER_ERROR';\n\nexport const LOGOUT_NEWS_STATE = '[News] LOGOUT_NEWS_STATE'; // clears news state when user logout is called\n\n\n/** -------------------------------------------------->MY NEWS LOADING ACTIONS */\nexport class GetMyNews implements Action {\n  readonly type = GET_MY_NEWS;\n  constructor(public payload: { perPage?: any, currentPage?: number }) {}\n}\n\nexport class GetMyNewsSuccess implements Action {\n  readonly type = GET_MY_NEWS_SUCCESS;\n  constructor(public payload: any) {}\n}\n\nexport class GetMyNewsError implements Action {\n  readonly type = GET_MY_NEWS_ERROR;\n}\n\n\n/** -------------------------------------------------->TRASH NEWS LOADING ACTIONS */\nexport class GetTrashNews implements Action {\n  readonly type = GET_TRASH_NEWS;\n  constructor(public payload: { perPage?: any, currentPage?: number }) {}\n}\n\nexport class GetTrashNewsSuccess implements Action {\n  readonly type = GET_TRASH_NEWS_SUCCESS;\n  constructor(public payload: any) {}\n}\n\nexport class GetTrashNewsError implements Action {\n  readonly type = GET_TRASH_NEWS_ERROR;\n}\n\n\n/**\n * -------------------------------------------------->GET ONE NEWS FROM STORE\n * --------------------------------------------------//TODO - remove later\n * */\nexport class GetNews implements Action {\n  readonly type = GET_A_NEWS;\n  constructor(public payload: string) {}\n}\n\nexport class GetNewsSuccess implements Action {\n  readonly type = GET_A_NEWS_SUCCESS;\n  constructor(public payload: News) {}\n}\n\nexport class GetNewsError implements Action {\n  readonly type = GET_A_NEWS_ERROR;\n}\n\n\n/**\n * -------------------------------------------------->NEWS DELETING (TRASHING) ACTIONS,\n * -------------------------------------------------->sets news status to deleted\n*/\nexport class DeleteNews implements Action {\n  readonly type = DELETE_NEWS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class DeleteNewsSuccess implements Action {\n  readonly type = DELETE_NEWS_SUCCESS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class DeleteNewsError implements Action {\n  readonly type = DELETE_NEWS_ERROR;\n}\n\n\n/** -------------------------------------------------->NEWS RESTORING ACTIONS */\nexport class RestoreNews implements Action {\n  readonly type = RESTORE_NEWS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class RestoreNewsSuccess implements Action {\n  readonly type = RESTORE_NEWS_SUCCESS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class RestoreNewsError implements Action {\n  readonly type = RESTORE_NEWS_ERROR;\n}\n\n\n/**\n * -------------------------------------------------->ACTIONS TO SET LOADING FLAGS\n * -------------------------------------------------->inorder for the controllers to load new news from api\n */\nexport class UpdateNewsLoaded implements Action {\n  readonly type = CHANGE_NEWS_LOADED;\n  constructor(public payload: { isLoaded: boolean }) {}\n}\nexport class UpdateMyNewsLoaded implements Action {\n  readonly type = CHANGE_MY_NEWS_LOADED;\n  constructor(public payload: { isMyNewsLoaded: boolean }) {}\n}\nexport class UpdateTrashNewsLoaded implements Action {\n  readonly type = CHANGE_TRASH_NEWS_LOADED;\n  constructor(public payload: { isTrashNewsLoaded: boolean }) {}\n}\n\n\n/**\n * -------------------------------------------------->ACTIONS FOR REMOVING NEWS FROM DATABASE\n * -------------------------------------------------->compleatly destroy them\n */\nexport class DestroyNews implements Action {\n  readonly type = DESTROY_NEWS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class DestroyNewsSuccess implements Action {\n  readonly type = DESTROY_NEWS_SUCCESS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class DestroyNewsError implements Action {\n  readonly type = DESTROY_NEWS_ERROR;\n}\n\n\n/**\n * -------------------------------------------------->TICKER ACTIONS\n * -------------------------------------------------->users cannot remove, disable or enable ticker or ticker news\n * -------------------------------------------------->users can add ticker news, but the added news is marked unpublished (an editor have to publish the news)\n */\n/**\n * -------------------------------------------------->GET TICKERS\n */\nexport class GetTickers implements Action {\n  readonly type = GET_TICKERS;\n}\n\nexport class GetTickersSuccess implements Action {\n  readonly type = GET_TICKERS_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class GetTickersError implements Action {\n  readonly type = GET_TICKERS_ERROR;\n}\n\n/**\n * -------------------------------------------------->ADD TICKER NEWS\n */\nexport class AddTickerNews implements Action {\n  readonly type = ADD_TICKER_NEWS;\n  constructor(public payload: TickersNews) {}\n}\n\nexport class AddTickerNewsSuccess implements Action {\n  readonly type = ADD_TICKER_NEWS_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class AddTickerNewsError implements Action {\n  readonly type = ADD_TICKER_NEWS_ERROR;\n}\n\n/**\n * -------------------------------------------------->APPROVE TICKER NEWS\n */\nexport class ApproveTickerNews implements Action {\n  readonly type = APPROVE_TICKER_NEWS;\n  constructor(public payload: { ticker_news_id: number }) {}\n}\n\nexport class ApproveTickerNewsSuccess implements Action {\n  readonly type = APPROVE_TICKER_NEWS_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class ApproveTickerNewsError implements Action {\n  readonly type = APPROVE_TICKER_NEWS_ERROR;\n}\n\n/**\n * -------------------------------------------------->DISAPPROVE TICKER NEWS\n */\nexport class DisApproveTickerNews implements Action {\n  readonly type = DISAPPROVE_TICKER_NEWS;\n  constructor(public payload: { ticker_news_id: number }) {}\n}\n\nexport class DisApproveTickerNewsSuccess implements Action {\n  readonly type = DISAPPROVE_TICKER_NEWS_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class DisApproveTickerNewsError implements Action {\n  readonly type = DISAPPROVE_TICKER_NEWS_ERROR;\n}\n\n/**\n * -------------------------------------------------->DELETE TICKER NEWS\n */\nexport class DeleteTickerNews implements Action {\n  readonly type = DELETE_TICKER_NEWS;\n  constructor(public payload: { ticker_news_id: number }) {}\n}\n\nexport class DeleteTickerNewsSuccess implements Action {\n  readonly type = DELETE_TICKER_NEWS_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class DeleteTickerNewsError implements Action {\n  readonly type = DELETE_TICKER_NEWS_ERROR;\n}\n\n/**\n * -------------------------------------------------->ADD A TICKER\n */\nexport class AddTicker implements Action {\n  readonly type = ADD_TICKER;\n  constructor(public payload: Ticker) {}\n}\n\nexport class AddTickerSuccess implements Action {\n  readonly type = ADD_TICKER_SUCCESS;\n  constructor(public payload: Ticker[]) {}\n}\n\nexport class AddTickerError implements Action {\n  readonly type = ADD_TICKER_ERROR;\n}\n\n\n\n\n\n/** action called when user logs out of the system to clear the \"NewsState\" */\nexport class LogoutNewsState implements Action {\n  readonly type = LOGOUT_NEWS_STATE;\n}\n\nexport type All = GetNews | GetNewsSuccess | GetNewsError |\n                  GetMyNews | GetMyNewsSuccess | GetMyNewsError |\n                  DeleteNews | DeleteNewsSuccess | DeleteNewsError |\n                  DestroyNews | DestroyNewsSuccess | DestroyNewsError |\n                  UpdateNewsLoaded | UpdateMyNewsLoaded | UpdateTrashNewsLoaded |\n                  LogoutNewsState;\n","import { Injectable, OnInit } from '@angular/core';\n\nexport interface BadgeItem {\n  type: string;\n  value: string;\n}\nexport interface Saperator {\n  name: string;\n  type?: string;\n}\nexport interface ChildrenItems {\n  state: string;\n  name: string;\n  type?: string;\n  badge?: BadgeItem[];\n}\n\nexport interface Menu {\n  state: string;\n  name: string;\n  type: string;\n  icon: string;\n  role?: string;\n  badge?: BadgeItem[];\n  saperator?: Saperator[];\n  children?: ChildrenItems[];\n}\n\nconst MENUITEMS = [\n  /*{ state: '',\n    name: 'Personal',\n    type: 'saperator',\n    icon: 'av_timer'\n  }, {\n    state: 'dashboards',\n    name: 'Dashboards',\n    type: 'sub',\n    icon: 'av_timer',\n    children: [\n      {state: 'dashboard1', name: 'Dashboard 1'},\n      {state: 'dashboard2', name: 'Dashboard 2'},\n    ]\n  },\n    {\n    state: 'material',\n    name: 'Material Ui',\n    type: 'sub',\n    icon: 'bubble_chart',\n    badge: [\n      {type: 'red', value: '17'}\n    ],\n    children: [\n      {state: 'button', name: 'Buttons'},\n      {state: 'cards', name: 'Cards'},\n      {state: 'grid', name: 'Grid List'},\n      {state: 'lists', name: 'Lists'},\n      {state: 'menu', name: 'Menu'},\n      {state: 'tabs', name: 'Tabs'},\n      {state: 'stepper', name: 'Stepper'},\n      {state: 'expansion', name: 'Expansion Panel'},\n      {state: 'chips', name: 'Chips'},\n      {state: 'toolbar', name: 'Toolbar'},\n      {state: 'progress-snipper', name: 'Progress snipper'},\n      {state: 'progress', name: 'Progress Bar'},\n      {state: 'dialog', name: 'Dialog'},\n      {state: 'tooltip', name: 'Tooltip'},\n      {state: 'snackbar', name: 'Snackbar'},\n      {state: 'slider', name: 'Slider'},\n      {state: 'slide-toggle', name: 'Slide Toggle'}\n    ]\n  },\n  {\n    state: 'apps',\n    name: 'Apps',\n    type: 'sub',\n    icon: 'apps',\n    children: [\n      {state: 'calendar', name: 'Calendar'},\n      {state: 'messages', name: 'Mail box'},\n      {state: 'chat', name: 'Chat'},\n      {state: 'taskboard', name: 'Taskboard'}\n    ]\n  },\n    {\n    state: '',\n    name: 'Forms, Table & Widgets',\n    type: 'saperator',\n    icon: 'av_timer'\n  }, {\n    state: 'forms',\n    name: 'Forms',\n    type: 'sub',\n    icon: 'insert_drive_file',\n\n    children: [\n\n      {state: 'form-layout', name: 'Form-Layout'},\n      {state: 'autocomplete', name: 'Autocomplete'},\n      {state: 'checkbox', name: 'Checkbox'},\n      {state: 'datepicker', name: 'Datepicker'},\n      {state: 'editor', name: 'Editor'},\n      {state: 'form-validation', name: 'Form Validation'},\n      {state: 'file-upload', name: 'File Upload'},\n      {state: 'wizard', name: 'Wizard'}\n\n    ]\n  }, {\n    state: 'tables',\n    name: 'Tables',\n    type: 'sub',\n    icon: 'web',\n\n    children: [\n\n      {state: 'basictable', name: 'Basic Table'},\n      {state: 'filterable', name: 'Filterable Table'},\n      {state: 'pagination', name: 'Pagination Table'},\n      {state: 'sortable', name: 'Sortable Table'},\n      {state: 'mix', name: 'Mix Table'},\n      {state: 'smarttable', name: 'Smart Table'}\n\n    ]\n  }, {\n    state: 'datatables',\n    name: 'Data Tables',\n    type: 'sub',\n    icon: 'border_all',\n\n    children: [\n      {state: 'basicdatatable', name: 'Basic Data Table'},\n      {state: 'filter', name: 'Filterable'},\n      {state: 'editing', name: 'Editing'},\n    ]\n  }, {\n    state: 'widgets',\n    name: 'Widgets',\n    type: 'link',\n    icon: 'widgets'\n  }, {\n    state: '',\n    name: 'Extra Component',\n    type: 'saperator',\n    icon: 'av_timer'\n  },\n    {\n    state: 'authentication',\n    name: 'Authentication',\n    type: 'sub',\n    icon: 'perm_contact_calendar',\n\n    children: [\n      {state: 'login', name: 'Login'},\n      {state: 'register', name: 'Register'},\n      {state: 'forgot', name: 'Forgot'},\n      {state: 'lockscreen', name: 'Lockscreen'},\n      {state: '404', name: 'Error'}\n\n    ]\n  }, {\n    state: 'charts',\n    name: 'Charts',\n    type: 'sub',\n    icon: 'insert_chart',\n\n    children: [\n      {state: 'chartjs', name: 'Chart Js'},\n      {state: 'chartistjs', name: 'Chartist Js'},\n      {state: 'ngxchart', name: 'Ngx Charts'}\n\n    ]\n  }, {\n    state: 'pages',\n    name: 'Pages',\n    type: 'sub',\n    icon: 'content_copy',\n\n    children: [\n      {state: 'icons', name: 'Material Icons'},\n      {state: 'timeline', name: 'Timeline'},\n      {state: 'invoice', name: 'Invoice'},\n      {state: 'pricing', name: 'Pricing'},\n      {state: 'helper', name: 'Helper Classes'}\n    ]\n  }*/\n\n  {\n    state: 'admin',\n    name: 'App Management',\n    role: 'admin',\n    type: 'sub',\n    icon: 'vpn_key',\n    children: [\n      { state: 'admin-dashboard', name: 'Dashboard', type: 'link' },\n      { state: 'user-console', name: 'User Console', type: 'link' },\n\n      {\n        state: 'news-settings',\n        name: 'News Settings',\n        type: 'subchild',\n        subchildren: [\n          {\n            state: 'list',\n            name: 'News Lists',\n            type: 'link'\n          },\n          {\n            state: 'breakers',\n            name: 'News Breakers',\n            type: 'link'\n          }\n        ]\n      }\n    ]\n  },\n  {\n    state: 'user',\n    name: 'Dashboard',\n    role: 'user',\n    type: 'sub',\n    icon: 'av_timer',\n    children: [\n      {state: 'profile', name: 'User Dashboard', type: 'link'},\n      {state: 'chat', name: 'Message Board', type: 'link'}\n    ]\n  },\n  {\n    state: 'editor',\n    name: 'News Editor',\n    role: 'news-editor',\n    type: 'sub',\n    icon: 'featured_play_list',\n    children: [\n      {state: 'dashboard', name: 'Dashboard', type: 'link'},\n      {state: 'review', name: 'Review News', type: 'link'},\n      {state: 'list', name: 'News List', type: 'link'},\n    ]\n  },\n  {\n    state: 'news',\n    name: 'News',\n    role: 'journalist',\n    type: 'sub',\n    icon: 'view_headline',\n    children: [\n      {state: 'dashboard', name: 'News Dashboard', type: 'link'},\n      {state: 'write', name: 'Write News', type: 'link'},\n      {\n        state: 'my',\n        name: 'My News', type: 'link'\n        // badge: [\n        //   {type: 'primary', value: '17'}\n        // ],\n      },\n      {state: 'ticker', name: 'Ticker News', type: 'link'},\n      {\n        state: 'trash',\n        name: 'Trash', type: 'link'\n        // badge: [\n        //   {type: 'red', value: '17'}\n        // ],\n      }\n    ]\n  },\n  {\n    state: 'control',\n    name: 'Controller',\n    role: 'control',\n    type: 'sub',\n    icon: 'traffic',\n    children: [\n      {state: 'news-cg', name: 'News CG', type: 'link'},\n      /*{state: 'ticker', name: 'Tickers', type: 'link'},\n      {state: 'cg-text', name: 'CG Text', type: 'link'},*/\n      {state: 'on-air', name: 'On Air', type: 'link'},\n      // {state: 'sms', name: 'SMS', type: 'link'},\n    ]\n  }\n\n];\n\n@Injectable()\n\nexport class MenuItems {\n  trash = 2;\n\n  OnInit() {\n    // get user array\n  }\n\n  getMenuitem(): Menu[] {\n    return MENUITEMS;\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n\n  /*apiUrl: 'http://192.168.18.18/nrs/api/',\n  storageUrl: 'http://192.168.18.18/nrs/storage/',*/\n\n  apiUrl: 'http://203.104.25.202:84/api/',\n  storageUrl: 'http://203.104.25.202:84/nrs/storage/',\n  pusher: {\n    key: '5289e5ee971f625d85fa',\n    cluster: 'ap2',\n  }\n};\n","\nimport {filter} from 'rxjs/operators';\nimport { Directive, OnInit, AfterViewInit, AfterContentChecked } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\n\n@Directive({\n  selector: '[appAccordion]',\n})\nexport class AccordionDirective implements AfterContentChecked {\n\n  protected navlinks: Array<AccordionLinkDirective> = [];\n\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link !== selectedLink) {\n        link.selected = false;\n      }\n    });\n  }\n\n  addLink(link: AccordionLinkDirective): void {\n    this.navlinks.push(link);\n  }\n\n  removeGroup(link: AccordionLinkDirective): void {\n    const index = this.navlinks.indexOf(link);\n    if (index !== -1) {\n      this.navlinks.splice(index, 1);\n    }\n  }\n\n  checkOpenLinks() {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link.group) {\n        const routeUrl = this.router.url;\n        const currentUrl = routeUrl.split('/');\n        if (currentUrl.indexOf( link.group ) > 0) {\n          link.selected = true;\n          this.closeOtherLinks(link);\n        }\n      }\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(e => this.checkOpenLinks());\n  }\n\n  constructor( private router: Router) {\n    setTimeout(() => this.checkOpenLinks());\n  }\n}\n","import { News } from '../../news/models/news';\nimport { Action, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as EditorActions from './news-editor.actions';\nimport { ReviewNewsState } from '../../store/app.state';\n\n\n\n\n\nexport const initialState: ReviewNewsState = {\n    news: [],\n    isLoaded: false,\n    // pageState: {currentPage: null, perPage: null, lastPages: null, totalResults: null},\n    lists: [],\n    isListLoaded: false,\n    selectedList: null,\n  };\n\nexport type Actions = EditorActions.All;\nexport interface ActionWithPayload<T> extends Action {\n  payload: T;\n}\n\nexport function reducer(state = initialState, action: ActionWithPayload<any>): ReviewNewsState {\n  console.log(state, action);\n\n  switch (action.type) {\n\n    /**\n     * --------------------------------------------------------------------------------------> REVIEW NEWS\n     */\n    case EditorActions.GET_REVIEW_NEWS: {\n      return {\n        ...state,\n        news: [],\n        isLoaded: false\n      };\n    }\n\n    case EditorActions.GET_REVIEW_NEWS_SUCCESS: {\n      return {\n        ...state,\n        news: action.payload,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> APPROVE NEWS\n     */\n    case EditorActions.APPROVE_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n\n    case EditorActions.APPROVE_NEWS_SUCCESS: {\n      return {\n        ...state,\n        news: [\n         ...(state.news.filter( (news) => news.id !== action.payload.id )),\n        ],\n        isLoaded: true\n      };\n    }\n\n    case EditorActions.APPROVE_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> REJECT NEWS\n     */\n    case EditorActions.REJECT_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n\n    case EditorActions.REJECT_NEWS_SUCCESS: {\n      return {\n        ...state,\n        news: [\n         ...(state.news.filter( (news) => news.id !== action.payload.news_id )),\n        ],\n        isLoaded: true\n      };\n    }\n\n    case EditorActions.REJECT_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------------------------------------------\n     * --------------------------------------------------------------------------------------> NEWS LIST ACTIONS\n     * ---------------------------------------------------------------------------------------------------------\n     */\n    /**\n     * --------------------------------------------------------------------------------------> GET LIST\n     */\n    case EditorActions.GET_LISTS: {\n      return {\n        ...state,\n        isListLoaded: false\n      }\n    }\n\n    case EditorActions.GET_LISTS_SUCCESS: {\n      return {\n        ...state,\n        lists: action.payload,\n        isListLoaded: true\n      }\n    }\n\n    case EditorActions.GET_LISTS_ERROR: {\n      return {\n        ...state,\n        isListLoaded: true\n      }\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> GET LIST BY DATE\n     */\n\n    case EditorActions.GET_LISTS_BY_DATE: {\n      return {\n        ...state,\n        isListLoaded: false\n      }\n    }\n\n    case EditorActions.GET_LISTS_BY_DATE_SUCCESS: {\n      return {\n        ...state,\n        lists: action.payload,\n        isListLoaded: true\n      }\n    }\n\n    case EditorActions.GET_LISTS_BY_DATE_ERROR: {\n      return {\n        ...state,\n        isListLoaded: true\n      }\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> ADD TO LIST\n     */\n    case EditorActions.ADD_TO_LIST: {\n      return {\n        ...state,\n        isListLoaded: true\n      }\n    }\n\n    case EditorActions.ADD_TO_LIST_SUCCESS: {\n      return {\n        ...state,\n        isListLoaded: false,\n        // lists: [action.payload, ...state.lists]\n        // lists: [\n        //   ...(state.lists.filter( (list) => list.id !== action.payload.id )),\n        // ]\n\n        // lists: state.lists.map(\n        //   list => list.id === action.payload.id ? {\n        //       ...list,\n        //       lists: action.payload,\n        //   } : list,\n        // ),\n        // lists: {\n        //   ...state.lists,\n        //   [action.payload.id] : action.payload\n        // }\n        lists: action.payload\n      }\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> REMOVE FROM LIST\n     */\n    case EditorActions.REMOVE_FROM_LIST: {\n      return {\n        ...state,\n        isListLoaded: true\n      }\n    }\n\n    case EditorActions.REMOVE_FROM_LIST_SUCCESS: {\n      return {\n        ...state,\n        isListLoaded: false,\n        lists: action.payload\n      }\n    }\n    /**\n     * --------------------------------------------------------------------------------------> UPDATE LIST ORDER\n     */\n    case EditorActions.UPDATE_LIST_ORDER: {\n      return {\n        ...state,\n        isListLoaded: true\n      }\n    }\n\n    case EditorActions.UPDATE_LIST_ORDER_SUCCESS: {\n      return {\n        ...state,\n        isListLoaded: false,\n        lists: action.payload\n      }\n    }\n    /**\n     * --------------------------------------------------------------------------------------> GET SELECTED LIST\n     */\n    case EditorActions.GET_SELECTED_LIST_SUCCESS: {\n      return {\n        ...state,\n        selectedList: action.payload.list_id\n      }\n    }\n    /**\n     * --------------------------------------------------------------------------------------> UPDATE SELECTED LIST\n     */\n    case EditorActions.UPDATE_SELECTED_LIST_SUCCESS: {\n      return {\n        ...state,\n        selectedList: action.payload.list_id\n      }\n    }\n\n\n    /**\n     * --------------------------------------------------------------------------------------> OTHER ACTIONS\n     */\n    case EditorActions.CHANGE_REVIEW_NEWS_LOADED: {\n      return {\n        ...state,\n        isLoaded: action.payload.isLoaded\n      };\n    }\n\n    case EditorActions.LOGOUT_EDITOR_STATE: {\n      return initialState;\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const getReviewNewsState = createFeatureSelector<ReviewNewsState>('ReviewNewsState');\n\nexport const getMyNews = createSelector(\n  getReviewNewsState,\n  (state: ReviewNewsState) => state.news\n);\n\nexport const getNewsById = (newsBox, id) => createSelector(getReviewNewsState, (allItems) => {\n  if (allItems) {\n    return allItems[newsBox].find(item => {\n      return item.id === id;\n    });\n  } else {\n    return {};\n  }\n});\n","import { User } from './../models/user';\nimport { Injectable } from '@angular/core';\nimport { SessionService } from './session.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\n\nimport { environment } from './../../../environments/environment';\n/*import { NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR } from '@angular/core/src/view/provider';*/\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private API_URL = environment.apiUrl;\n\n  // Create a stream of logged in status to communicate throughout app\n  loggedIn: boolean;\n  loggedIn$ = new BehaviorSubject<boolean>(this.loggedIn);\n\n  constructor(\n      private session: SessionService,\n      private http: HttpClient\n  ) {\n    if (this.session.getSession('dnms_token')) {\n      this.loggedIn$.next(true);\n      this.loggedIn = true;\n    }\n  }\n\n  public isSignedIn() {\n    return !!this.session.getSession('dnms_token');\n  }\n\n  public doSignOut() {\n    console.log('sign out');\n    this.loggedIn$.next(false);\n    this.loggedIn = false;\n    this.session.destroy();\n  }\n\n  public signIn(email: string, password: string) {\n    return this.http.post<any>(this.API_URL + 'authenticate/', { email, password });\n  }\n\n  // public doSignIn(accessToken: string, name: string, email: string, roles: string, roles_all: any[]) {\n  public doSignIn(loginUser: User) {\n    if ((!loginUser.token) || (!loginUser.name)) {\n      return;\n    }\n\n    this.loggedIn$.next(true);\n    this.loggedIn = true;\n\n    this.session.saveSession(loginUser);\n  }\n\n  public refreshToken(token) {\n    /**\n     *    token refresh is not working from api\n     *     //TODO need to fix token refreshing from API\n      */\n    // const headers = new HttpHeaders({'Authorization': 'Bearer ' + token});\n\n    /*const ttoken = '{token: \\'' + token + '\\'}';\n    const post_token = JSON.parse(JSON.stringify(ttoken));\n    console.log(post_token);*/\n\n    return this.http.post<any>(this.API_URL + 'refresh/?token=' + token , null);\n  }\n\n  public getUserSettings() {\n    return this.session.getUserSetting;\n  }\n\n}\n","import {\n  Directive, HostBinding, Inject, Input, OnInit, OnDestroy\n} from '@angular/core';\n\nimport { AccordionDirective } from './accordion.directive';\n\n@Directive({\n  selector: '[appAccordionLink]'\n})\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\n\n  @Input() public group: any;\n\n  @HostBinding('class.selected')\n  @Input()\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  set selected(value: boolean) {\n    this._selected = value;\n    if (value) {\n      this.nav.closeOtherLinks(this);\n    }\n  }\n\n  protected _selected: boolean;\n  protected nav: AccordionDirective;\n\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\n    this.nav = nav;\n  }\n\n  ngOnInit(): any {\n    this.nav.addLink(this);\n\n  }\n\n  ngOnDestroy(): any {\n    this.nav.removeGroup(this);\n  }\n\n  toggle(): any {\n    this.selected = !this.selected;\n  }\n}\n","import { Component, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport {News} from \"../../../news/models/news\";\n\n@Component({\n  selector: 'app-view-news-dialog',\n  templateUrl: './view-news-dialog.component.html'\n})\nexport class ViewNewsDialogComponent {\n  onDelete = new EventEmitter();\n  onUndo = new EventEmitter();\n\n  constructor(\n    public dialogRef: MatDialogRef<ViewNewsDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: News\n  ) { }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n  doDelete(id) {\n    this.closeDialog(false);\n    this.onDelete.emit(id);\n  }\n\n  doUndo(id) {\n    this.closeDialog(false);\n    this.onUndo.emit(id);\n  }\n\n}\n","<h3 mat-dialog-title>{{data.news_name}}</h3>\n<div mat-dialog-content>\n  <div fxLayout=\"column\" fxLayoutWrap=\"wrap\">\n      <!-- title column -->\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" [class.dhv-title]=\"data.language.language_code == 'Dhv'\">\n          {{data.heading}}\n      </div>\n      <!-- hr column -->\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n        <mat-divider></mat-divider>\n      </div>\n      <!-- news body column -->\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n          <div [innerHTML]=\"data.body\" style=\"white-space: pre-wrap\" [class.dhv]=\"data.language.language_code == 'Dhv'\"></div>\n      </div>\n      <!-- hr column -->\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n        <mat-divider></mat-divider>\n      </div>\n      <!-- news bars column -->\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n          <mat-card>\n              <mat-card-content>\n                  <mat-card-title>News Bar(s)</mat-card-title>\n              </mat-card-content>\n              <mat-tab-group>\n                  <mat-tab *ngFor=\"let bar of data.newsbar; let i = index\" label=\"Bar {{i+1}}\">\n                    <mat-card-content>\n                      <p [class]=\"data.language.language_code == 'Dhv' ? 'dhv' : '' \">{{bar.title}}</p>\n                      <p [class]=\"data.language.language_code == 'Dhv' ? 'dhv m-t-20' : '' \">{{bar.detail}}</p>\n                    </mat-card-content>\n                  </mat-tab>\n              </mat-tab-group>\n          </mat-card>\n      </div>\n  </div>\n</div>\n<!-- actions column -->\n<div align=\"end\" mat-dialog-actions align=\"end\">\n  <button mat-button color=\"warn\" *ngIf=\"data.newsstatus.status != 'published'\" (click)=\"doDelete(data.id)\">Delete</button>\n  <button mat-button color=\"basic\" *ngIf=\"data.newsstatus.status != 'published' && data.newsstatus.status != 'deleted'\" routerLink=\"/news/{{data.id}}\" (click)=\"closeDialog(true)\">Edit</button>\n  <button mat-raised-button color=\"primary\" *ngIf=\"data.newsstatus.status === 'deleted'\" (click)=\"doUndo(data.id)\">Restore</button>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-blank',\n  templateUrl: './blank.component.html',\n  styleUrls: []\n})\nexport class AppBlankComponent {}\n","<!-- ============================================================== -->\n<!-- Only router without any element -->\n<!-- ============================================================== -->\n<mat-sidenav-container>\n  <router-outlet></router-outlet>\n</mat-sidenav-container>","export * from './accordionanchor.directive';\nexport * from './accordionlink.directive';\nexport * from './accordion.directive';\n","export class User {\n  id?: string;\n  email?: string;\n  password?: string;\n  token?: Token;\n  name?: string;\n  roles_a?: any;\n  roles?: Role[];\n  profile?: Profile;\n\n  constructor() {\n    this.id = null;\n  }\n}\n\nexport class Token {\n  token?: string;\n}\n\nexport class Role {\n  role: string;\n  display_name: string;\n  permissions: string[];\n}\n\nexport class Profile{\n  id?: string;\n  user_id?: string;\n  dob?: string;\n  gender?: string;\n  fb?: string;\n  insta?: string;\n  twitter?: string;\n  email?: string;\n  phone?: string;\n  profilepic?: string;\n  coverimage?: string;\n\n  constructor(){\n    this.user_id    = null;\n    this.dob        = null;\n    this.gender     = null;\n    this.fb         = null;\n    this.insta      = null;\n    this.twitter    = null;\n    this.email      = null;\n    this.phone      = null;\n    this.profilepic = '';\n    this.coverimage = '';\n\n  }\n}\n","import { ChangeDetectorRef, Component, NgZone, OnInit, OnDestroy, ViewChild, HostListener, Directive, AfterViewInit } from '@angular/core';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { MenuItems } from '../../../shared/menu-items/menu-items';\nimport { SessionService } from '../../../shared/services/session.service';\nimport { Subscription } from 'Rxjs';\nimport { AuthService } from '../../../shared/services/auth.service';\n\nimport { Store } from '@ngrx/store';\nimport { UserState } from '../../../store/app.state';\nimport * as userActions from '../../../authentication/store/user.actions';\nimport { User } from '../../../shared/models/user';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: []\n})\nexport class AppSidebarComponent implements OnInit, OnDestroy {\n  public username = 'Guest';\n  public config: PerfectScrollbarConfigInterface = {};\n  mobileQuery: MediaQueryList;\n  loggedInSub: Subscription;\n  logged_in = false;\n\n  public userData: User = new User();\n  public storagePath: string;\n\n  private _mobileQueryListener: () => void;\n  status: boolean = false;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public menuItems: MenuItems,\n    private session: SessionService,\n    private auth: AuthService,\n    private store: Store<UserState>,\n    private store2: Store<any>,\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n\n    // get user authentication status\n    this.loggedInSub = this.auth.loggedIn$.subscribe( loggedIn => this.logged_in = loggedIn );\n    this.username = session.getSession('name');\n  }\n\n  ngOnInit() {\n    this.storagePath = environment.storageUrl;\n    this.store2.select(store => store.UserState).subscribe(userdata => {\n      this.userData = userdata.user;\n    });\n  }\n\n\n  clickEvent() {\n    this.status = !this.status;\n  }\n\n  subclickEvent() {\n    this.status = true;\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  checkRole(role: string) {\n    return this.session.checkRole(role);\n  }\n\n  logOut(): void {\n    this.store.dispatch(new userActions.UserLogout());\n  }\n}\n","<!-- ============================================================== -->\n<!-- sidebar -->\n<!-- ============================================================== -->\n<div class=\"user-profile\" style=\"background: url(assets/images/background/user-info.jpg) no-repeat;\">\n    <!-- User profile image -->\n    <div class=\"profile-img\" *ngIf=\"userData.id == null\">\n        <img src=\"{{storagePath+'profiles/default.jpg'}}\" alt=\"user\" *ngIf=\"userData == null\">\n    </div>\n    <div class=\"profile-img\" *ngIf=\"userData.id != null\">\n        <img src=\"{{storagePath+'profiles/user/'+userData.profile.profilepic}}\" alt=\"user\" *ngIf=\"userData.profile.profilepic\">\n    </div>\n    <!-- User profile text-->\n    <!-- ============================================================== -->\n    <!-- Profile - style you can find in header.scss -->\n    <!-- ============================================================== -->\n    <div class=\"profile-text\">\n        <a [matMenuTriggerFor]=\"sdprofile\" class=\"\" *ngIf=\"logged_in\"> {{ username }} <i class=\"ti-angle-down font-12 m-l-5\"></i></a>\n        <a class=\"\" *ngIf=\"!logged_in\"> {{ username }} </a>\n    </div>\n    <mat-menu #sdprofile=\"matMenu\" class=\"mymegamenu\">\n        <!-- <button mat-menu-item>\n            <mat-icon>settings</mat-icon> Settings </button> -->\n        <button mat-menu-item [routerLink]=\"['/user/profile']\">\n            <mat-icon>account_box</mat-icon> Profile </button>\n        <!--<button mat-menu-item>\n            <mat-icon>notifications_off</mat-icon> Disable notifications </button>-->\n        <button mat-menu-item (click)=\"logOut()\">\n            <mat-icon>exit_to_app</mat-icon> Sign Out </button>\n    </mat-menu>\n</div>\n\n<mat-nav-list appAccordion>\n    <!-- <div *ngIf=\"checkRole(menuitem.role)\"> -->\n    <mat-list-item appAccordionLink routerLinkActive=\"selected\" group=\"{{menuitem.state}}\" *ngFor=\"let menuitem of menuItems.getMenuitem()\">\n        <a class=\"\" appAccordionToggle [routerLink]=\"['/', menuitem.state]\" *ngIf=\"menuitem.type === 'link' && checkRole(menuitem.role)\">\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\n            <span>{{ menuitem.name }}</span>\n            <span fxFlex></span>\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\n        </a>\n\n        <a class=\"\" appAccordionToggle href=\"{{menuitem.state}}\" *ngIf=\"menuitem.type === 'extLink' && checkRole(menuitem.role)\">\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\n            <span>{{ menuitem.name }}</span>\n            <span fxFlex></span>\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\n        </a>\n        <a class=\"\" appAccordionToggle href=\"{{menuitem.state}}\" target=\"_blank\" *ngIf=\"menuitem.type === 'extTabLink' && checkRole(menuitem.role)\">\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\n            <span>{{ menuitem.name}}</span>\n            <span fxFlex></span>\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\n        </a>\n\n        <a class=\"\" appAccordionToggle href=\"javascript:;\" *ngIf=\"menuitem.type === 'sub' && checkRole(menuitem.role)\">\n            <mat-icon>{{ menuitem.icon }}</mat-icon>\n            <span>{{ menuitem.name }}</span>\n            <span fxFlex></span>\n            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuitem.badge\">{{ badge.value }}</span>\n            <mat-icon class=\"dd-icon\">keyboard_arrow_down</mat-icon>\n        </a>\n        <mat-nav-list class=\"sub-item\" *ngIf=\"menuitem.type === 'sub' && checkRole(menuitem.role)\">\n            <mat-list-item *ngFor=\"let childitem of menuitem.children\" routerLinkActive=\"selected\">\n                <a [routerLink]=\"['/', menuitem.state, childitem.state ]\" *ngIf=\"childitem.type === 'link'\" class=\"relative\"\n                    routerLinkActive=\"selected\">{{ childitem.name}}</a>\n            </mat-list-item>\n            <mat-list-item *ngFor=\"let childitem of menuitem.children\">\n                <a class=\"\" href=\"javascript: void(0);\" *ngIf=\"childitem.type === 'subchild'\" (click)=\"clickEvent()\"\n                    [ngClass]=\"status ? 'selected' : ''\">\n                    <span>{{ childitem.name }}</span>\n                    <span fxFlex></span>\n                    <mat-icon class=\"dd-icon\">keyboard_arrow_down</mat-icon>\n                </a>\n                <mat-nav-list class=\"child-sub-item\" *ngIf=\"childitem.type === 'subchild'\">\n                    <mat-list-item *ngFor=\"let child of childitem.subchildren\" routerLinkActive=\"selected\">\n                        <a [routerLink]=\"['/', menuitem.state, childitem.state, child.state ]\" routerLinkActive=\"selected\">{{child.name}}</a>\n                    </mat-list-item>\n                </mat-nav-list>\n            </mat-list-item>\n\n        </mat-nav-list>\n\n        <div class=\"saperator text-muted\" *ngIf=\"menuitem.type === 'saperator'\">\n            <span>{{ menuitem.name }}</span>\n        </div>\n    </mat-list-item>\n    <!-- </div> -->\n</mat-nav-list>\n","import { NgModule } from '@angular/core';\n\nimport { MenuItems } from './menu-items/menu-items';\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\nimport { ThaanaDirective } from './directives/thaana.directive';\n\n\n@NgModule({\n  declarations: [\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective,\n    ThaanaDirective\n  ],\n  exports: [\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective,\n    ThaanaDirective\n   ],\n  providers: [ MenuItems ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\ndeclare var deepstream:any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DsService {\n  private ds;\n  public dsInstance;\n\n  constructor() {\n     this.ds = this.dsInstance = deepstream('192.168.1.70:6020');\n  }\n\n  login (credentials?, loginHandler?) {\n    // {username: 'chris', password:'password'}\n    this.ds.login(credentials, loginHandler);\n  }\n\n  getRecord(name) {\n    return this.ds.record.getRecord(name);\n  }\n\n  getList(name){\n    return this.ds.record.getList(name);\n  }\n}\n","import { RejectNotes } from './../notes-dialog/notes-dialog.component';\nimport { Action } from '@ngrx/store';\nimport { News, NewsList, ListOrder } from './../../news/models/news';\n\nexport const GET_REVIEW_NEWS = '[NewsEditor] GET_REVIEW_NEWS';\nexport const GET_REVIEW_NEWS_SUCCESS = '[NewsEditor] GET_REVIEW_NEWS_SUCCESS';\nexport const GET_REVIEW_NEWS_ERROR = '[NewsEditor] GET_REVIEW_NEWS_ERROR';\n\nexport const APPROVE_NEWS = '[NewsEditor] APPROVE_NEWS';\nexport const APPROVE_NEWS_SUCCESS = '[NewsEditor] APPROVE_NEWS_SUCCESS';\nexport const APPROVE_NEWS_ERROR = '[NewsEditor] APPROVE_NEWS_ERROR';\n\nexport const REJECT_NEWS = '[NewsEditor] REJECT_NEWS';\nexport const REJECT_NEWS_SUCCESS = '[NewsEditor] REJECT_NEWS_SUCCESS';\nexport const REJECT_NEWS_ERROR = '[NewsEditor] REJECT_NEWS_ERROR';\n\n\n/**\n * ------------------------------------------------------------------------------> LIST ACTIONS\n */\nexport const GET_LISTS = '[NewsEditor] GET_LISTS';\nexport const GET_LISTS_SUCCESS = '[NewsEditor] GET_LISTS_SUCCESS';\nexport const GET_LISTS_ERROR = '[NewsEditor] GET_LISTS_ERROR';\n\nexport const GET_LISTS_BY_DATE = '[NewsEditor] GET_LISTS_BY_DATE';\nexport const GET_LISTS_BY_DATE_SUCCESS = '[NewsEditor] GET_LISTS_BY_DATE_SUCCESS';\nexport const GET_LISTS_BY_DATE_ERROR = '[NewsEditor] GET_LISTS_BY_DATE_ERROR';\n\nexport const ADD_TO_LIST = '[NewsEditor] ADD_TO_LISTS';\nexport const ADD_TO_LIST_SUCCESS = '[NewsEditor] ADD_TO_LISTS_SUCCESS';\nexport const ADD_TO_LIST_ERROR = '[NewsEditor] ADD_TO_LISTS_ERROR';\n\nexport const REMOVE_FROM_LIST = '[NewsEditor] REMOVE_FROM_LIST';\nexport const REMOVE_FROM_LIST_SUCCESS = '[NewsEditor] REMOVE_FROM_LIST_SUCCESS';\nexport const REMOVE_FROM_LIST_ERROR = '[NewsEditor] REMOVE_FROM_LIST_ERROR';\n\nexport const UPDATE_LIST_ORDER = '[NewsEditor] UPDATE_LIST_ORDER';\nexport const UPDATE_LIST_ORDER_SUCCESS = '[NewsEditor] UPDATE_LIST_ORDER_SUCCESS';\nexport const UPDATE_LIST_ORDER_ERROR = '[NewsEditor] UPDATE_LIST_ORDER_ERROR';\n\nexport const UPDATE_SELECTED_LIST = '[NewsEditor] UPDATE_SELECTED_LIST';\nexport const UPDATE_SELECTED_LIST_SUCCESS = '[NewsEditor] UPDATE_SELECTED_LIST_SUCCESS';\nexport const UPDATE_SELECTED_LIST_ERROR = '[NewsEditor] UPDATE_SELECTED_LIST_ERROR';\n\nexport const GET_SELECTED_LIST = '[NewsEditor] GET_SELECTED_LIST';\nexport const GET_SELECTED_LIST_SUCCESS = '[NewsEditor] GET_SELECTED_LIST_SUCCESS';\nexport const GET_SELECTED_LIST_ERROR = '[NewsEditor] GET_SELECTED_LIST_ERROR';\n\n\nexport const CHANGE_REVIEW_NEWS_LOADED = '[NewsEditor] CHANGE_REVIEW_NEWS_LOADED';\nexport const LOGOUT_EDITOR_STATE = '[NewsEditor] LOGOUT_EDITOR_STATE';\n\n/**\n * ---------------------------------------------------------------------------------------------------\n * ------------------------------------------------------------------------------> REVIEW NEWS ACTIONS\n * ---------------------------------------------------------------------------------------------------\n *\n *\n * ------------------------------------------------------------------------------> GET REVIEW NEWS\n */\nexport class GetReviewNews implements Action {\n  readonly type = GET_REVIEW_NEWS;\n  constructor() {}\n}\n\nexport class GetReviewNewsSuccess implements Action {\n  readonly type = GET_REVIEW_NEWS_SUCCESS;\n  constructor(public payload: News[]) {}\n}\n\nexport class GetReviewNewsError implements Action {\n  readonly type = GET_REVIEW_NEWS_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> APPROVE NEWS\n */\nexport class ApproveNews implements Action {\n  readonly type = APPROVE_NEWS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class ApproveNewsSuccess implements Action {\n  readonly type = APPROVE_NEWS_SUCCESS;\n  constructor(public payload: { id: number }) {}\n}\n\nexport class ApproveNewsError implements Action {\n  readonly type = APPROVE_NEWS_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> REJECT NEWS\n */\nexport class RejectNews implements Action {\n  readonly type = REJECT_NEWS;\n  constructor(public payload: RejectNotes ) {}\n}\n\nexport class RejectNewsSuccess implements Action {\n  readonly type = REJECT_NEWS_SUCCESS;\n  constructor(public payload: RejectNotes) {}\n}\n\nexport class RejectNewsError implements Action {\n  readonly type = REJECT_NEWS_ERROR;\n}\n\n\n/**\n * -------------------------------------------------------------------------------------------------\n * ------------------------------------------------------------------------------> NEWS LIST ACTIONS\n * -------------------------------------------------------------------------------------------------\n *\n *\n * ------------------------------------------------------------------------------> GET LISTS\n */\nexport class GetLists implements Action {\n  readonly type = GET_LISTS;\n  constructor() {};\n}\n\nexport class GetListsSuccess implements Action {\n  readonly type = GET_LISTS_SUCCESS;\n  constructor(public payload: NewsList[]) {}\n}\n\nexport class GetListsError implements Action {\n  readonly type = GET_LISTS_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> GET LISTS BY DATE\n */\nexport class GetListsByDate implements Action {\n  readonly type = GET_LISTS_BY_DATE;\n  constructor(public payload: { date: string }) {};\n}\n\nexport class GetListsByDateSuccess implements Action {\n  readonly type = GET_LISTS_BY_DATE_SUCCESS;\n  constructor(public payload: NewsList[]) {}\n}\n\nexport class GetListsByDateError implements Action {\n  readonly type = GET_LISTS_BY_DATE_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> ADD NEWS TO LIST\n */\nexport class AddToList implements Action {\n  readonly type = ADD_TO_LIST;\n  constructor(public payload: { list_id: number, news_id: number }) {};\n}\n\nexport class AddToListSuccess implements Action {\n  readonly type = ADD_TO_LIST_SUCCESS;\n  constructor(public payload: News[]) {}\n}\n\nexport class AddToListError implements Action {\n  readonly type = ADD_TO_LIST_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> REMOVE NEWS FROM LIST\n */\nexport class RemoveFromList implements Action {\n  readonly type = REMOVE_FROM_LIST;\n  constructor(public payload: { id: number }) {};\n}\n\nexport class RemoveFromListSuccess implements Action {\n  readonly type = REMOVE_FROM_LIST_SUCCESS;\n  constructor(public payload: News[]) {}\n}\n\nexport class RemoveFromListError implements Action {\n  readonly type = REMOVE_FROM_LIST_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> UPDATE LIST ORDER\n */\nexport class UpdateListOrder implements Action {\n  readonly type = UPDATE_LIST_ORDER;\n  constructor(public payload: ListOrder[]) {};\n}\n\nexport class UpdateListOrderSuccess implements Action {\n  readonly type = UPDATE_LIST_ORDER_SUCCESS;\n  constructor(public payload: News[]) {}\n}\n\nexport class UpdateListOrderError implements Action {\n  readonly type = UPDATE_LIST_ORDER_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> GET SELECTED LIST\n */\nexport class GetSelectedList implements Action {\n  readonly type = GET_SELECTED_LIST;\n  // constructor(public payload: { list_id: number }) {};\n}\n\nexport class GetSelectedListSuccess implements Action {\n  readonly type = GET_SELECTED_LIST_SUCCESS;\n  constructor(public payload: { list_id: number }) {}\n}\n\nexport class GetSelectedListError implements Action {\n  readonly type = GET_SELECTED_LIST_ERROR;\n}\n\n/**\n * ------------------------------------------------------------------------------> UPDATE SELECTED LIST\n */\nexport class UpdateSelectedList implements Action {\n  readonly type = UPDATE_SELECTED_LIST;\n  constructor(public payload: { list_id: number }) {};\n}\n\nexport class UpdateSelectedListSuccess implements Action {\n  readonly type = UPDATE_SELECTED_LIST_SUCCESS;\n  constructor(public payload: { list_id: number }) {}\n}\n\nexport class UpdateSelectedListError implements Action {\n  readonly type = UPDATE_SELECTED_LIST_ERROR;\n}\n\n\n\n\nexport class LogoutEditorState implements Action {\n  readonly type = LOGOUT_EDITOR_STATE;\n}\n\nexport class UpdateReviewNewsLoaded implements Action {\n  readonly type = CHANGE_REVIEW_NEWS_LOADED;\n  constructor(public payload: { isLoaded: boolean }) {}\n}\n\nexport type All = GetReviewNews | GetReviewNewsSuccess | GetReviewNewsError |\n                  ApproveNews | ApproveNewsSuccess | ApproveNewsError |\n                  RejectNews | RejectNewsSuccess | RejectNewsError;\n","import { Store } from '@ngrx/store';\nimport { Router, ActivatedRoute, RoutesRecognized, NavigationEnd } from '@angular/router';\nimport { SessionService } from './session.service';\nimport { Injectable, OnInit, OnDestroy } from '@angular/core';\n\nimport * as userActions from '../../authentication/store/user.actions';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteRoleService implements OnInit, OnDestroy {\n\n  routeObserver$: any;\n  roleSubscription$: any;\n\n  destroySubject$: Subject<void> = new Subject();\n\n  constructor(\n    private session: SessionService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private store: Store<any>\n  ) { }\n\n  ngOnInit() {\n  }\n\n  initialize() {\n    this.routeObserver$ = this.router.events\n      .pipe(takeUntil(this.destroySubject$))\n      .subscribe(event => {\n        if (event instanceof RoutesRecognized) {\n          this.guardRoute(event);\n        } /*else if (event instanceof NavigationEnd) {\n          this.checkRole(event);\n        }*/\n      });\n  }\n\n  private guardRoute(event: RoutesRecognized): void {\n    if (this.isPublic(event)) {\n      return;\n    }\n\n    if (!this.callCheckToken(event)) {\n      return;\n    }\n  }\n\n  private callCheckToken(event: RoutesRecognized) {\n    // const token_date = new Date(this.session.getSession('expiry'));\n    // const now_date   = new Date().getTime();\n\n    // if (token_date.getTime() < now_date) {\n    //   this.store.dispatch(new userActions.UserLogout());\n    //   //this.routeObserver$.unsubscribe();\n    //   return false;\n    // }\n\n    return true;\n  }\n\n  private isPublic(event: RoutesRecognized) {\n    return event.state.root.firstChild.data.isPublic;\n  }\n\n  private checkRole(event) {\n    let roles_  = false;\n\n    const sRoutes = event.url.split('/');\n    this.roleSubscription$ = this.store.select(RootStore => RootStore.UserState.user.roles)\n      .pipe(takeUntil(this.destroySubject$))\n      .subscribe(roles => {\n\n        if (sRoutes.includes('authentication') || sRoutes.includes('dashboard')) {\n          roles_ = true;\n        }\n\n        if (roles) {\n          Object.keys(roles).forEach(function(key) {\n            Object.keys(roles[key].permissions).forEach(function(role_key) {\n              // console.log(sRoutes);\n              // console.log('PERM= ' + roles[key].permissions[role_key].permission);\n              if (sRoutes.includes(roles[key].permissions[role_key].permission)) {\n                roles_ = true;\n              }\n            });\n        });\n        }\n      });\n\n    // user have permission to this route\n    if (roles_) {\n      return;\n    }\n    // the user does not have the required permission\n    if (!roles_) {\n      this.router.navigate(['/authentication/401']);\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroySubject$.next();\n    // this.routeObserver$.unsubscribe();\n    // this.roleSubscription$.unsubscribe();\n  }\n\n}\n","import * as $ from 'jquery';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Router } from '@angular/router';\nimport {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  ViewChild,\n  HostListener,\n  Directive,\n  AfterViewInit\n} from '@angular/core';\nimport { MenuItems } from '../../shared/menu-items/menu-items';\nimport { AppHeaderComponent } from './header/header.component';\nimport { AppSidebarComponent } from './sidebar/sidebar.component';\n\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\n/** @title Responsive sidenav */\n@Component({\n  selector: 'app-full-layout',\n  templateUrl: 'full.component.html',\n  styleUrls: []\n})\nexport class FullComponent implements OnDestroy, AfterViewInit {\n  mobileQuery: MediaQueryList;\n  dir = 'ltr';\n  green: boolean;\n  blue: boolean;\n  dark: boolean;\n  minisidebar: boolean;\n  boxed: boolean;\n  danger: boolean;\n  showHide: boolean;\n  sidebarOpened;\n\n  public config: PerfectScrollbarConfigInterface = {};\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public menuItems: MenuItems\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n  ngAfterViewInit() {\n    // This is for the topbar search\n    (<any>$('.srh-btn, .cl-srh-btn')).on('click', function() {\n      (<any>$('.app-search')).toggle(200);\n    });\n    // This is for the megamenu\n  }\n\n  // Mini sidebar\n}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<div class=\"main-container\" [dir]=\"dir\" [ngClass]=\"{'minisidebar': minisidebar, 'boxed': boxed, 'danger': danger, 'blue': blue, 'green': green, 'dark': dark }\">\n    <!-- ============================================================== -->\n    <!-- Topbar - style you can find in header.scss -->\n    <!-- ============================================================== -->\n    <mat-toolbar color=\"primary\" class=\"topbar telative\">\n        <!-- ============================================================== -->\n        <!-- Logo - style you can find in header.scss -->\n        <!-- ============================================================== -->\n        <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" href=\"/\">\n                <!-- Logo icon -->\n                <b>\n                    <!--You can put here icon as well // <i class=\"wi wi-sunset\"></i> //-->\n                    <!-- Dark Logo icon -->\n                    <img src=\"assets/images/logo-icon.png\" alt=\"homepage\" class=\"dark-logo\">\n                    <!-- Light Logo icon -->\n                    <img src=\"assets/images/logo-light-icon.png\" alt=\"homepage\" class=\"light-logo\">\n                </b>\n                <!--End Logo icon -->\n                <!-- Logo text -->\n                <span fxShow=\"false\" fxShow.gt-xs>\n                    <!-- dark Logo text -->\n                    <img src=\"assets/images/logo-text.png\" alt=\"homepage\" class=\"dark-logo\">\n                    <!-- Light Logo text -->\n                    <img src=\"assets/images/logo-light-text.png\" class=\"light-logo\" alt=\"homepage\">\n                </span>\n            </a>\n        </div>\n        <!-- ============================================================== -->\n        <!-- sidebar toggle -->\n        <!-- ============================================================== -->\n\n        <button mat-icon-button (click)=\"snav.toggle()\" value=\"sidebarclosed\">\n            <mat-icon>menu</mat-icon>\n        </button>\n        <!-- ============================================================== -->\n        <!-- Search - style you can find in header.scss -->\n        <!-- ============================================================== -->\n        <!-- <button mat-icon-button class=\"srh-btn\">\n            <mat-icon>search</mat-icon>\n        </button>\n        <form class=\"app-search\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search &amp; enter\">\n            <a class=\"cl-srh-btn\">\n                <i class=\"ti-close\"></i>\n            </a>\n        </form> -->\n        <span fxFlex></span>\n        <!-- ============================================================== -->\n        <!-- app header component - style you can find in header.scss / header.component.ts-->\n        <!-- ============================================================== -->\n        <app-header></app-header>\n        <!-- ============================================================== -->\n        <!-- Right sidebar toggle - style you can find in rightsidebar.component.scss -->\n        <!-- ============================================================== -->\n        <!-- <button (click)=\"end.toggle()\" mat-icon-button class=\"ml-xs overflow-visible\">\n            <mat-icon>settings</mat-icon>\n        </button> -->\n    </mat-toolbar>\n    <!-- ============================================================== -->\n    <!-- End Topbar - style you can find in pages.scss -->\n    <!-- ============================================================== -->\n    <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 0 : 0\"\n        [ngClass]=\"{'minisidebar': minisidebar}\">\n        <!-- ============================================================== -->\n        <!-- Sidebar - style you can find in sidebar.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav #snav id=\"snav\" class=\"pl-xs\" [mode]=\"mobileQuery.matches ? 'side' : 'over'\" fixedTopGap=\"0\"\n            [opened]=\"mobileQuery.matches\" [disableClose]=\"mobileQuery.matches\" (open)=\"sidebarOpened = true\" (close)=\"sidebarOpened = false\"\n            [perfectScrollbar]=\"config\">\n\n            <app-sidebar class=\"app-sidebar\"></app-sidebar>\n\n        </mat-sidenav>\n        <!-- ============================================================== -->\n        <!-- Sidebar - style you can find in sidebar.scss -->\n        <!-- ============================================================== -->\n        <!-- ============================================================== -->\n        <!-- Right Sidebar - style you can find in rightsidebar.component.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav #end position=\"end\" class=\"chat-panel\" mode=\"over\" opened=\"false\">\n            <div class=\"scroll\">\n                <mat-nav-list>\n\n                    <h3 mat-subheader class=\"text-uppercase font-weight-bold\">Settings</h3>\n                    <mat-list-item>\n                        <mat-slide-toggle color=\"warn\" (change)=\"dir = (dir == 'rtl' ? 'ltr' : 'rtl')\">RTL</mat-slide-toggle>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <mat-slide-toggle color=\"warn\" [(ngModel)]=\"boxed\">Boxed Layout</mat-slide-toggle>\n                    </mat-list-item>\n                    <!--<mat-list-item>\n                    <mat-slide-toggle [(ngModel)]=\"minisidebar\">Mini Sidebar</mat-slide-toggle>\n                  </mat-list-item>    -->\n                    <mat-divider></mat-divider>\n                    <h3 mat-subheader class=\"text-uppercase font-weight-bold\">Colors</h3>\n                    <mat-list-item>\n                        <mat-checkbox color=\"warn\" [(ngModel)]=\"danger\" (change)=\"green = blue = false\" class=\"text-danger\">Red</mat-checkbox>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <mat-checkbox color=\"warn\" [(ngModel)]=\"green\" (change)=\"danger = blue = false\" class=\"text-megna\">Teal\n                            Green</mat-checkbox>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <mat-checkbox color=\"warn\" [(ngModel)]=\"blue\" (change)=\"green = danger = false\" class=\"text-info\">Blue</mat-checkbox>\n                    </mat-list-item>\n                    <mat-list-item>\n                        <mat-checkbox color=\"warn\" [(ngModel)]=\"dark\" (change)=\"green = blue = danger = false\">Dark</mat-checkbox>\n                    </mat-list-item>\n                </mat-nav-list>\n            </div>\n        </mat-sidenav>\n\n        <!-- ============================================================== -->\n        <!-- Page container - style you can find in pages.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav-content class=\"page-wrapper\">\n\n                <div class=\"page-content\">\n\n                    <router-outlet>\n                        <app-spinner></app-spinner>\n                    </router-outlet>\n\n                </div>\n\n        </mat-sidenav-content>\n        <!-- ============================================================== -->\n        <!-- Page container - style you can find in pages.scss -->\n        <!-- ============================================================== -->\n    </mat-sidenav-container>\n</div>\n","import { ActionReducerMap, ActionReducer, MetaReducer } from '@ngrx/store';\nimport { AppState } from './app.state';\nimport { environment } from '../../environments/environment';\n\nimport * as userAction from '../authentication/store/user.actions';\n\nimport * as userReducer from '../authentication/store/user.reducer';\nimport * as newsReducer from '../news/store/news.reducer';\nimport * as reviewNewsReducer from '../editor/store/news-editor.reducer';\n\nexport const reducers: ActionReducerMap<AppState> = {\n  UserState: userReducer.reducer,\n  NewsState: newsReducer.reducer,\n  ReviewNews: reviewNewsReducer.reducer,\n};\n\nexport function logger(reducer: ActionReducer<AppState>): ActionReducer<AppState> {\n  return function(state: AppState, action: any): AppState {\n    console.log('state', state);\n    console.log('action', action);\n\n\n    // if (action.type === userAction.USER_LOGOUT_SUCCESS) {\n    //   console.log('x-x ROOT REDUCER LOGOUT x-x');\n    //   // state = { UserState: { user: { email: null, name: null, token: {token: null}, roles: null, roles_a: null } }, NewsState: {myNews: null, myNewsPageState: { currentPage: null, perPage: null, lastPages: null, totalResults: null }, trashNewsPageState: null, trashNews: null} };\n    //   state = undefined;\n    //   this.router.navigate(['/authentication/login']);\n    // }\n\n    return reducer(state, action);\n  };\n}\n\nexport const metaReducers: MetaReducer<AppState>[] = !environment.production\n  ? [logger]\n  : [];\n","import { Location } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\n\nimport { Subscription } from 'Rxjs';\n\nimport { Store } from '@ngrx/store';\nimport * as userReducer from './authentication/store/user.reducer';\nimport * as userActions from './authentication/store/user.actions';\nimport { UserState } from './store/app.state';\nimport { AuthService } from './shared/services/auth.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  loggedInSub: Subscription;\n\n  constructor (\n    private auth: AuthService,\n    private store: Store<UserState>,\n    private router: Router,\n    private _location: Location\n  ) {}\n\n  ngOnInit() {\n    console.log('app comp init!');\n    this.loggedInSub = this.auth.loggedIn$.subscribe(\n      loggedIn => {\n        this.store.dispatch(new userActions.GetUserSettings());\n        // redirect if logged in\n        // this._location.back();\n      });\n  }\n}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<router-outlet><app-spinner></app-spinner></router-outlet>\n\n","import * as $ from 'jquery';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\nimport { AppRoutes } from './app.routing';\nimport { AppComponent } from './app.component';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FullComponent } from './layouts/full/full.component';\nimport { AppBlankComponent } from './layouts/blank/blank.component';\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DemoMaterialModule} from './demo-material-module';\n\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { PERFECT_SCROLLBAR_CONFIG } from 'ngx-perfect-scrollbar';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\n\nimport { SharedModule } from './shared/shared.module';\nimport { SpinnerComponent } from './shared/spinner.component';\nimport { HttpInterceptorService} from './shared/services/http-interceptor.service';\nimport { ConfirmDialogComponent } from './shared/component/confirm-dialog/confirm-dialog.component';\nimport { ViewNewsDialogComponent } from './shared/component/view-news-dialog/view-news-dialog.component';\nimport { AddTickerNewsDialogComponent } from './shared/component/add-ticker-news-dialog/add-ticker-news-dialog.component';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\n\nimport { reducers, metaReducers } from './store/app.reducer';\nimport { UserEffects } from './authentication/store/user.effects';\n\nimport { ContextMenuModule } from 'ngx-contextmenu';\n//import { SmsComponent } from './sms/sms.component';\n\n\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\n  suppressScrollX: true,\n  wheelSpeed: 2,\n  wheelPropagation: true,\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FullComponent,\n    AppHeaderComponent,\n    SpinnerComponent,\n    AppBlankComponent,\n    AppSidebarComponent,\n    ConfirmDialogComponent,\n    ViewNewsDialogComponent,\n    AddTickerNewsDialogComponent,\n    //SmsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    DemoMaterialModule,\n    FormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    PerfectScrollbarModule,\n    SharedModule,\n    RouterModule.forRoot(AppRoutes),\n    StoreModule.forRoot(reducers, {metaReducers}),\n    EffectsModule.forRoot([UserEffects]),\n    StoreDevtoolsModule.instrument({maxAge: 50}),\n    ContextMenuModule.forRoot(),\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpInterceptorService,\n      multi: true,\n    },\n    {\n      provide: PERFECT_SCROLLBAR_CONFIG,\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\n    },\n    {\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n    }\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [ConfirmDialogComponent, ViewNewsDialogComponent, AddTickerNewsDialogComponent]\n})\nexport class AppModule { }\n\n","import { Action } from '@ngrx/store';\nimport { User } from './../../shared/models/user';\n\nexport const USER_LOGIN = '[User] USER_LOGIN';\nexport const USER_LOGIN_SUCCESS = '[User] USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_ERROR = '[User] USER_LOGIN_ERROR';\n\nexport const USER_LOGOUT = '[User] USER_LOGOUT';\nexport const USER_LOGOUT_SUCCESS = '[User] USER_LOGOUT_SUCCESS';\nexport const USER_LOGOUT_ERROR = '[User] USER_LOGOUT_ERROR';\n\nexport const USER_GET_SETTINGS = '[User] USER_GET_SETTINGS';\nexport const USER_GET_SETTINGS_SUCCESS = '[User] USER_GET_SETTINGS_SUCCESS';\nexport const USER_GET_SETTINGS_ERROR = '[User] USER_GET_SETTINGS_ERROR';\n\nexport const SERVER_USER_GET_SETTINGS = '[User] SERVER_USER_GET_SETTINGS';\nexport const SERVER_USER_GET_SETTINGS_SUCCESS = '[User] SERVER_USER_GET_SETTINGS_SUCCESS';\nexport const SERVER_USER_GET_SETTINGS_ERROR = '[User] SERVER_USER_GET_SETTINGS_ERROR';\n\nexport const USER_GET_ROLES = '[User] USER_GET_ROLES';\n\nexport const USER_401 = '[User] USER_401';\n\n\nexport class UserLogin implements Action {\n  readonly type = USER_LOGIN;\n  constructor(public payload: any) {}\n}\n\nexport class UserLoginSuccess implements Action {\n  readonly type = USER_LOGIN_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class UserLoginError implements Action {\n  readonly type = USER_LOGIN_ERROR;\n}\n\nexport class UserLogout implements Action {\n  readonly type = USER_LOGOUT;\n}\n\nexport class UserLogoutSuccess implements Action {\n  readonly type = USER_LOGOUT_SUCCESS;\n  //constructor(public payload: User) {}\n}\n\nexport class UserLogoutError implements Action {\n  readonly type = USER_LOGOUT_ERROR;\n}\n\nexport class User401 implements Action {\n  readonly type = USER_401;\n}\n\nexport class GetUserSettings implements Action {\n  readonly type = USER_GET_SETTINGS;\n}\n\nexport class GetUserSettingsSuccess implements Action {\n  readonly type = USER_GET_SETTINGS_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class GetUserSettingsError implements Action {\n  readonly type = USER_GET_SETTINGS_ERROR;\n}\n\nexport class GetUserRoles implements Action {\n  readonly type = USER_GET_ROLES;\n}\n\n\n\n/**\n * Fetch user settings from server\n */\nexport class ServerGetUserSettings implements Action {\n  readonly type = SERVER_USER_GET_SETTINGS;\n}\n\nexport class ServerGetUserSettingsSuccess implements Action {\n  readonly type = SERVER_USER_GET_SETTINGS_SUCCESS;\n  constructor(public payload: User) {}\n}\n\nexport class ServerGetUserSettingsError implements Action {\n  readonly type = SERVER_USER_GET_SETTINGS_ERROR;\n}\n\nexport type All = UserLogin | UserLoginSuccess | UserLoginError | GetUserSettings |\n                  GetUserSettingsSuccess | GetUserSettingsError | GetUserRoles;\n","import { Routes, CanActivate } from '@angular/router';\n\nimport { FullComponent } from './layouts/full/full.component';\nimport { AppBlankComponent } from './layouts/blank/blank.component';\nimport { AuthGuard } from './shared/services/auth.guard';\n\nexport const AppRoutes: Routes = [{\n  path: '',\n  component: FullComponent,\n  children: [\n    {\n      path: 'admin',\n      loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule),\n      // canActivate: [AuthGuard],\n      // data: { isPublic: false, role: 'editor' }\n  },{\n    path: '',\n    redirectTo: '/user',\n    pathMatch: 'full'\n  },{\n    path: 'user',\n    loadChildren: () => import('./dashboards/dashboards.module').then(m => m.DashboardsModule),\n    canActivate: [AuthGuard],\n    data: { isPublic: true, role: 'user' }\n  },\n  {\n    path: 'editor',\n    loadChildren: () => import('./editor/editor.module').then(m => m.EditorModule),\n    // canActivate: [AuthGuard],\n    // data: { isPublic: false, role: 'editor' }\n  },\n  {\n    path: 'news',\n    loadChildren: () => import('./news/news.module').then(m => m.NewsModule),\n    canActivate: [AuthGuard],\n    data: { isPublic: false, role: 'journalist' }\n  },\n  {\n    path: 'control',\n    loadChildren: () => import('./control/control.module').then(m => m.ControlModule),\n    canActivate: [AuthGuard],\n    data: { isPublic: false, role: 'journalist' }\n  },\n  {\n    path: 'material',\n    loadChildren: () => import('./material-component/material.module').then(m => m.MaterialComponentsModule)\n  },\n  {\n    path: 'apps',\n    loadChildren: () => import('./apps/apps.module').then(m => m.AppsModule)\n  },\n  {\n    path: 'forms',\n    loadChildren: () => import('./forms/forms.module').then(m => m.FormModule)\n  },\n  {\n    path: 'tables',\n    loadChildren: () => import('./tables/tables.module').then(m => m.TablesModule)\n  },\n  {\n    path: 'datatables',\n    loadChildren: () => import('./datatables/datatables.module').then(m => m.DataTablesModule)\n  },\n  {\n    path: 'pages',\n    loadChildren: () => import('./pages/pages.module').then(m => m.PagesModule)\n  },\n  {\n    path: 'widgets',\n    loadChildren: () => import('./widgets/widgets.module').then(m => m.WidgetsModule)\n  },\n  {\n    path: 'charts',\n    loadChildren: () => import('./charts/chartslib.module').then(m => m.ChartslibModule)\n  }]\n},\n  {\n  path: '',\n  component: AppBlankComponent,\n  children: [{\n    path: 'authentication',\n    loadChildren: () => import('./authentication/authentication.module').then(m => m.AuthenticationModule)\n  }],\n  data: { isPublic: true }\n},\n  {\n  path: '**',\n  redirectTo: 'authentication/404'\n}];\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Observable ,  BehaviorSubject, of } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nimport { SessionService } from './session.service';\nimport { AuthService } from './auth.service';\n\nimport { map, filter, tap ,  catchError, finalize } from 'rxjs/operators';\n\n\n\n\n\nimport * as userReducer from '../../authentication/store/user.reducer';\nimport * as userActions from '../../authentication/store/user.actions';\nimport { UserState } from '../../store/app.state';\nimport { Store } from '@ngrx/store';\n\n@Injectable()\nexport class HttpInterceptorService implements HttpInterceptor {\n\n  isRefreshingToken = false;\n  tokenSubject: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n\n    constructor(\n      private sessonService: SessionService,\n      private authService: AuthService,\n      public snackBar: MatSnackBar,\n      private store: Store<any>,\n    ) {}\n\n    addToken(req: HttpRequest<any>, token: string): HttpRequest<any> {\n      return req.clone({ setHeaders: { Authorization: 'Bearer ' + token }});\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n      return next.handle(this.addToken(request, this.sessonService.getSession('dnms_token')))\n      .pipe(\n        tap(event => {\n          if (event instanceof HttpResponse) {\n            // console.log(`Request for ${request.urlWithParams} with method ${request.method}`);\n            if (event.status === 200) { // OK\n              // this.snackBar.open(event.statusText, 'dismiss', {duration: 1000});\n            }else if (event.status === 201) { // created\n              this.snackBar.open(event.statusText, 'dismiss', {duration: 1000});\n            }else if (event.status === 202) { // accepted\n              this.snackBar.open(event.statusText, 'dismiss', {duration: 1000});\n            }else if (event.status === 204) { // no content (delete)\n              this.snackBar.open(event.statusText, 'dismiss', {duration: 1000});\n            }\n          }\n        }, error => {\n          // console.error('NICE ERROR', error);\n          switch (error.status) {\n            case 400:\n                return this.handle400Error(error);\n            case 401:\n              return this.handle401Error(request, next);\n            case 403:\n              return this.snackBar.open(error.error, 'dismiss');\n            case 500:\n              return this.snackBar.open('Server Error!', 'dismiss');\n          }\n        })\n      );\n      /*try {\n\n        return next.handle(this.addToken(request, this.sessonService.getSession('dnms_token')));\n\n      } catch (error) {\n        if (error instanceof HttpErrorResponse) {\n\n          switch ((<HttpErrorResponse>error).status) {\n              case 400:\n                  // return this.handle400Error(error);\n              case 401:\n                  this.handle401Error(request, next);\n          }\n        } else {\n            return Observable.throw(error);\n        }\n      }*/\n    }\n\n\n\n    handle401Error(req: HttpRequest<any>, next: HttpHandler) {\n\n    // logged_inthis.store.dispatch(new User401());\n      console.log('signing out from interceptor');\n      this.store.dispatch(new userActions.User401());\n      // return this.authService.doSignOut();\n\n      /*if (!this.isRefreshingToken) {\n        console.log('handling 401');\n          this.isRefreshingToken = true;\n\n          // Reset here so that the following requests wait until the token\n          // comes back from the refreshToken call.\n          this.tokenSubject.next(null);\n\n          return this.authService.refreshToken(this.sessonService.getSession('dnms_token'))\n              .map((newToken: string) => {\n                  if (newToken) {\n                      this.tokenSubject.next(newToken);\n                      console.log(newToken);\n                      return next.handle(this.addToken(req, newToken));\n                  }\n\n                  // If we don't get a new token, we are in trouble so logout.\n                  return this.authService.doSignOut();\n              })\n              .subscribe(error => {\n                  // If there is an exception calling 'refreshToken', bad news so logout.\n                  return this.authService.doSignOut();\n              })\n              .finally(() => {\n                  this.isRefreshingToken = false;\n              });\n      } else {\n          return this.tokenSubject\n              .filter(token => token != null)\n              // .take(1)\n              .map(token => {\n                  return next.handle(this.addToken(req, token));\n              });\n      }*/\n  }\n\n    handle400Error(error) {\n      this.store.dispatch(new userActions.User401());\n        // if (error && error.status === 400 && error.error && error.error.error === 'invalid_grant') {\n        //     // If we get a 400 and the error message is 'invalid_grant', the token is no longer valid so logout.\n        //     return this.authService.doSignOut();\n        // }\n\n        // return Observable.throw(error);\n    }\n}\n/*\nexport class HTTPStatus {\n  private requestInFlight$: BehaviorSubject<boolean>;\n  constructor() {\n    this.requestInFlight$ = new BehaviorSubject(false);\n  }\n\n  setHttpStatus(inFlight: boolean) {\n    this.requestInFlight$.next(inFlight);\n  }\n\n  getHttpStatus(): Observable<boolean> {\n    return this.requestInFlight$.asObservable();\n  }\n}\n\n@Injectable()\nexport class HTTPListener implements HttpInterceptor {\n  constructor(private status: HTTPStatus) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      map(event => {\n        console.log(event)\n        return event;\n      }),\n      catchError(error => {\n        return Observable.throw(error);\n      }),\n      finalize(() => {\n        this.status.setHttpStatus(false);\n      })\n    );\n  }\n}\n*/\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html'\n})\nexport class ConfirmDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n}\n","<h1 mat-dialog-title>{{data.title}}</h1>\n<div mat-dialog-content>\n  <p>{{data.message}}</p>\n</div>\n<div mat-dialog-actions align=\"end\">\n  <button mat-button (click)=\"closeDialog(false)\" tabindex=\"2\">No</button>\n  <button mat-button (click)=\"closeDialog(true)\" tabindex=\"-1\">Yes</button>\n</div>\n","import { News } from './../models/news';\nimport { Action, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as NewsActions from './news.actions';\nimport { NewsState } from '../../store/app.state';\n\n\n\n\n\nexport const initialState: NewsState = {\n    myNews: [],\n    myNewsPageState: {currentPage: null, perPage: null, lastPages: null, totalResults: null},\n    trashNews: [],\n    trashNewsPageState: {currentPage: null, perPage: null, lastPages: null, totalResults: null},\n    isLoaded: false,\n    isMyNewsLoaded: false,\n    isTrashLoaded: false,\n    tickers: null,\n  };\n\nexport type Actions = NewsActions.All;\nexport interface ActionWithPayload<T> extends Action {\n  payload: T;\n}\n\nexport function reducer(state = initialState, action: ActionWithPayload<any>): NewsState {\n  console.log(state, action);\n  console.log('News REDUCER Call!')\n\n  switch (action.type) {\n\n    case NewsActions.GET_MY_NEWS: {\n      return {\n        ...state,\n        myNewsPageState: {\n          currentPage: action.payload.currentPage,\n          perPage: action.payload.perPage,\n        },\n        isMyNewsLoaded: false,\n        isLoaded: false\n      };\n    }\n\n    case NewsActions.GET_MY_NEWS_SUCCESS: {\n      return {\n        ...state,\n        myNews: action.payload.data,\n        myNewsPageState: {\n          currentPage: action.payload.current_page,\n          perPage: Number(action.payload.per_page),\n          lastPages: action.payload.last_page,\n          totalResults: action.payload.total,\n        },\n        isMyNewsLoaded: true,\n        isLoaded: true\n      };\n    }\n\n    case NewsActions.GET_TRASH_NEWS: {\n      return {\n        ...state,\n        trashNewsPageState: {\n          currentPage: action.payload.currentPage,\n          perPage: action.payload.perPage,\n        },\n        isTrashLoaded: false,\n        isLoaded: false\n      };\n    }\n\n    case NewsActions.GET_TRASH_NEWS_SUCCESS: {\n      return {\n        ...state,\n        trashNews: action.payload.data,\n        trashNewsPageState: {\n          currentPage: action.payload.current_page,\n          perPage: Number(action.payload.per_page),\n          lastPages: action.payload.last_page,\n          totalResults: action.payload.total,\n        },\n        isTrashLoaded: true,\n        isLoaded: true\n      };\n    }\n\n    case NewsActions.DELETE_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n\n    case NewsActions.DELETE_NEWS_SUCCESS: {\n      return {\n        ...state,\n        myNews: state.myNews.filter( (news) => news.id !== action.payload.id ),\n        trashNews: [\n          ...state.trashNews,\n          ...Object.assign(state.myNews.filter((news) => news.id === action.payload.id), { newsstatus: { status: 'deleted' } })\n        ],\n        isLoaded: true,\n        isMyNewsLoaded: false,\n        isTrashLoaded: false\n      };\n    }\n\n    case NewsActions.RESTORE_NEWS_SUCCESS: {\n      return {\n        ...state,\n        myNews: [\n          ...state.myNews,\n          ...(state.trashNews.filter( (news) => news.id === action.payload.id ))\n        ],\n        trashNews: state.trashNews.filter( (news) => news.id !== action.payload.id ),\n        isLoaded: false,\n        isMyNewsLoaded: false,\n        isTrashLoaded: false\n      };\n    }\n\n    /**\n     * ----------------------------------------------------------------------------------\n     * ---------------------------------------------------------------------> Ticker News\n     * ----------------------------------------------------------------------------------\n     */\n    /**\n     * ---------------------------------------------------------------------> GET TICKERS\n     */\n    case NewsActions.GET_TICKERS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.GET_TICKERS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.GET_TICKERS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------> ADD TICKER NEWS\n     */\n    case NewsActions.ADD_TICKER_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.ADD_TICKER_NEWS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.ADD_TICKER_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------> APPROVE TICKER NEWS\n     */\n    case NewsActions.APPROVE_TICKER_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.APPROVE_TICKER_NEWS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.APPROVE_TICKER_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------> DISAPPROVE TICKER NEWS\n     */\n    case NewsActions.DISAPPROVE_TICKER_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.DISAPPROVE_TICKER_NEWS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.DISAPPROVE_TICKER_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------> DELETE TICKER NEWS\n     */\n    case NewsActions.DELETE_TICKER_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.DELETE_TICKER_NEWS_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.DELETE_TICKER_NEWS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n    /**\n     * ---------------------------------------------------------------------> ADD TICKER\n     */\n    case NewsActions.ADD_TICKER: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n    case NewsActions.ADD_TICKER_SUCCESS: {\n      return {\n        ...state,\n        isLoaded: true,\n        tickers: action.payload\n      };\n    }\n    case NewsActions.ADD_TICKER_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      };\n    }\n\n\n\n    // when set to false myNews will be fetched from api\n    case NewsActions.CHANGE_NEWS_LOADED: {\n      return {\n        ...state,\n        isLoaded: action.payload.isLoaded\n      };\n    }\n    case NewsActions.CHANGE_MY_NEWS_LOADED: {\n      return {\n        ...state,\n        isMyNewsLoaded: action.payload.isMyNewsLoaded\n      };\n    }\n    case NewsActions.CHANGE_TRASH_NEWS_LOADED: {\n      return {\n        ...state,\n        isTrashLoaded: action.payload.isTrashNewsLoaded\n      };\n    }\n\n    case NewsActions.DESTROY_NEWS: {\n      return {\n        ...state,\n        isLoaded: false\n      };\n    }\n\n    case NewsActions.DESTROY_NEWS_SUCCESS: {\n      return {\n        ...state,\n        trashNews: state.trashNews.filter( (news) => news.id !== action.payload.id ),\n        isLoaded: true\n      };\n    }\n\n    case NewsActions.LOGOUT_NEWS_STATE: {\n      // return {\n      //   myNews: [],\n      //   myNewsPageState: {currentPage: null, perPage: null, lastPages: null, totalResults: null},\n      //   trashNews: [],\n      //   trashNewsPageState: {currentPage: null, perPage: null, lastPages: null, totalResults: null},\n      //   isLoaded: false,\n      //   isMyNewsLoaded: false,\n      //   isTrashLoaded: false\n      // };\n      return initialState;\n    }\n\n    default: {\n      return state;\n    }\n\n  }\n}\n\nexport const getNewsState = createFeatureSelector<NewsState>('NewsState');\n\nexport const getMyNews = createSelector(\n  getNewsState,\n  (state: NewsState) => state.myNews\n);\n\nexport const getNewsById = (newsBox, id) => createSelector(getNewsState, (allItems) => {\n  if (allItems) {\n    return allItems[newsBox].find(item => {\n      return item.id === id;\n    });\n  } else {\n    return {};\n  }\n});\n\nexport const getMyNewsByStatus = (status) =>\n  createSelector(getNewsState, state => state.myNews.filter(x => x.newsstatus.status === status));\n\n","import { BehaviorSubject ,  Observable ,  SubscriptionLike as ISubscription ,  Subject } from 'rxjs';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { User, Role } from '../models/user';\nimport { Store } from '@ngrx/store';\nimport { UserState } from '../../store/app.state';\n\nimport * as userActions from '../../authentication/store/user.actions';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from './../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionService implements OnDestroy {\n\n  private sessionExpiryTime: number = 1; //token expiry time local\n  private checkSessionExpiry: boolean = false;\n\n  public accessToken: string;\n  public id = '';\n  public name = 'Guest';\n  public email = '';\n  public roles: string;\n  public roles_all: string;\n  private subscription: ISubscription;\n\n  destroySubject$: Subject<void> = new Subject();\n\n  constructor(\n    private store: Store<any>,\n    private http: HttpClient\n  ) {}\n\n  public destroy(): void {\n    sessionStorage.clear();\n\n    this.accessToken = null;\n    this.name = 'Guest';\n    this.email = '';\n    this.roles = '';\n    this.roles_all = '';\n  }\n\n  public saveSession(loginUser: User) {\n    // set token expiry time\n    const date = new Date();\n    date.setFullYear(date.getFullYear() + this.sessionExpiryTime);\n\n    sessionStorage.setItem('id',         loginUser.id);\n    sessionStorage.setItem('name',       loginUser.name);\n    sessionStorage.setItem('email',      loginUser.email);\n    if(loginUser.token){\n      sessionStorage.setItem('dnms_token', loginUser.token.token);\n    }\n    sessionStorage.setItem('roles',      JSON.stringify(loginUser.roles));\n    sessionStorage.setItem('expiry',     date.toJSON());\n    //sessionStorage.setItem('roles_all', JSON.stringify(loginUser.roles_a));\n\n    //profile\n    sessionStorage.setItem('profile',JSON.stringify(loginUser.profile));\n\n    this.id          = this.getSession('id');\n    this.name        = this.getSession('name');\n    this.email       = this.getSession('email');\n    this.accessToken = this.getSession('dnms_token.token');\n    this.roles       = this.getSession('roles');\n    this.roles_all   = this.getSession('roles_all');\n\n    return true;\n  }\n\n  /**\n   * pass user data as an observable (from session storage)\n   * called when page is refreshed for user state to update\n   */\n  public getUserSetting() {\n    if (!this.getSession('dnms_token')) {\n      return this.getUserLogoutSetting();\n      // return false;\n    }\n\n    return Observable.create(observer => {\n      let profile = JSON.parse(this.getSession('profile'));\n      console.log(profile)\n      const user = {\n        id:      this.getSession('id'),\n        email:   this.getSession('email'),\n        name:    this.getSession('name'),\n        token:   { token: this.getSession('dnms_token') },\n        roles:   JSON.parse(this.getSession('roles')),\n        roles_a: JSON.parse(this.getSession('roles_all')),\n        profile: {\n          'id':          profile.id,\n          'user_id':     profile.user_id,\n          'dob':         profile.dob,\n          'gender':      profile.gender,\n          'insta':       profile.insta,\n          'fb':          profile.fb,\n          'twitter':     profile.twitter,\n          'email':       profile.email,\n          'phone':       profile.phone,\n          'profilepic':  profile.profilepic,\n          'coverimage':  profile.coverimage,\n        }\n      };\n        observer.next(user);\n        observer.complete();\n    });\n\n  }\n\n  /**\n   *  update user data from server\n   *  called when user updates their profile\n   */\n  public updateUserSettings() {\n    return this.http.get<any>(environment.apiUrl + 'userdata/all');\n  }\n\n  /**\n   * Check Expiry\n   * experiment to check if users token has expired\n   *\n   * year, month, day\n   * hour,min, sec\n   */\n  checkExpiry() {\n    if(this.checkSessionExpiry) {\n      let nowDate = new Date();\n      //nowDate.setMinutes(nowDate.getMinutes() + this.sessionExpiryTime);\n\n      let sessionDate = new Date(sessionStorage.getItem('expiry'));\n      // console.log(nowDate)\n      // console.log(new Date(sessionDate))\n\n      if(nowDate.getFullYear() > sessionDate.getFullYear()) {\n        console.log('this!!!!');\n        this.CallLogoutState();\n        return false;\n      }else if(nowDate.getMonth() > sessionDate.getMonth()) {\n        console.log('this!!!!');\n        this.CallLogoutState();\n        return false;\n      }else if(nowDate.getDay() > sessionDate.getDay()) {\n        console.log('this!!!!');\n        this.CallLogoutState();\n        return false;\n      }\n\n      let nowTime     = nowDate.getHours()+':'+nowDate.getMinutes()+':'+nowDate.getSeconds();\n      let sessionTime = sessionDate.getHours()+':'+sessionDate.getMinutes()+':'+sessionDate.getSeconds();\n      //if(nowTime > sessionTime) {\n      var regExp = /(\\d{1,2})\\:(\\d{1,2})\\:(\\d{1,2})/;\n      if (parseInt(nowTime.replace(regExp, \"$1$2$3\")) > parseInt(sessionTime .replace(regExp, \"$1$2$3\"))){\n        console.log('this!!!!', nowTime, sessionTime );\n        this.CallLogoutState();\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  CallLogoutState(){\n    this.destroySubject$.next();\n    //this.subscription.unsubscribe();\n    this.store.dispatch(new userActions.UserLogout());\n  }\n\n  /**\n   * pass null user data as an observable\n   * called when user logs out\n   */\n  public getUserLogoutSetting() {\n\n    return Observable.create(observer => {\n      const user = {\n        email: null,\n        name: null,\n        token: { token: null },\n        roles: null,\n        roles_a: null\n      };\n      observer.next(user); // This method same as resolve() method from Angular 1\n      // console.log('am done');\n      observer.complete(); // to show we are done with our processing\n      // observer.error(new Error(\"error message\"));\n    });\n\n  }\n\n  //get a key from session storage\n  public getSession(key: string) {\n    return sessionStorage.getItem(key);\n  }\n\n  /**\n   *  Check if the logged in user have a given role or permission\n   */\n  public checkRole(role: string) {\n    let found = false;\n\n    if (this.checkExpiry()) {\n\n      this.store.select(state => state.UserState.user.roles)\n      .pipe(takeUntil(this.destroySubject$))\n      .subscribe(list => {\n        if(list){\n        //if(Object.keys(list).length > 0){\n            list.forEach((user_role: Role) => {\n              if (user_role.role === role) {\n                found = true;\n              }\n            });\n        }\n      });\n\n    }else{\n      //this.subscription.unsubscribe();\n    }\n\n    return found;\n  }\n\n  ngOnDestroy() {\n    //this.subscription.unsubscribe();\n    this.destroySubject$.next();\n  }\n\n}\n","export class News {\n  public id?: number;\n  public news_name?: string;\n  public heading?: string;\n  public body?: string;\n  public newsstatus_id?: number;\n  public user_id?: number;\n  public language?: Language;\n  public newsbar?: NewsBar[];\n  public tickernews?: TickerNews[];\n  public newsstatus?: Newsstatus;\n  public newsnotes?: NewNotes[];\n  public draft?: boolean;\n  public loading?: boolean;\n  public list_news?: ListNews[];\n\n  constructor() {\n    this.news_name = '';\n    this.heading = '';\n    this.body = '';\n    this.newsstatus_id = 0;\n    this.user_id = 0;\n    this.language = new Language('', '');\n    this.newsbar = [new NewsBar('', '')];\n    this.draft = false;\n  }\n\n  static generateMockNews(): News {\n    return new News();\n  }\n\n}\n\nexport class NewsBar {\n\n  constructor(\n    public title: string,\n    public detail: string,\n    public id?: number,\n    public news_id?: number,\n    public created_at?: string,\n    public updated_a?: string\n  ) { }\n\n}\n\nexport class TickerNews {\n\n  constructor(\n    public news: string\n  ) { }\n\n}\n\nexport class Language {\n\n  constructor(\n    public language_code: string,\n    public language?: string,\n    public id?: number\n  ) {}\n\n}\n\nexport class Newsstatus {\n\n  constructor(\n    public id: string,\n    public status: string,\n    public detail: string,\n  ) {}\n\n}\n\nexport class NewNotes {\n\n  constructor(\n    public id: number,\n    public news_id: number,\n    public note: string,\n  ) {}\n\n}\n\nexport class NewsList {\n\n  public id: number;\n  public name: string;\n  public created_at: string;\n  public updated_at: string;\n  public list_news: ListNews[];\n\n  constructor() {\n    this.id = null;\n    this.name = '';\n    this.created_at = '';\n    this.updated_at = '';\n    this.list_news = [new ListNews()];\n  }\n\n}\n\nexport class ListNews {\n\n  public id: number;\n  public news_list_id: number;\n  public news_id: number;\n  public created_at: string;\n  public updated_at: string;\n  public news: News;\n\n  constructor() {\n    this.id = null;\n    this.news_list_id = null;\n    this.news_id = null;\n    this.created_at = null;\n    this.updated_at = null;\n    this.news = new News();\n  }\n\n}\n\nexport class ListOrder{\n  list_id: number;\n  news_id: number;\n  order: number;\n\n  constructor ( list_id, news_id, order ) {\n    this.list_id  = list_id;\n    this.news_id  = news_id;\n    this.order    = order;\n  }\n}\n\nexport class Ticker {\n  public id?: number;\n  public name?: string;\n  public color?: string;\n  public separator?: string;\n  public enabled?: number;\n  public tickernews?: TickersNews[];\n  public created_at?: string;\n  public updated_at?: string;\n\n  constructor() {\n    this.name = '';\n  }\n}\n\nexport class TickersNews {\n  public id?: number;\n  public news: string;\n  public name?: string;\n  public language_id?: number;\n  public enabled?: number;\n  public ticker_id?: number;\n  public language?: Language;\n  public created_at?: string;\n  public updated_at?: string;\n\n  constructor() {\n    this.news = '';\n    this.language = new Language('', '');\n  }\n}\n\n\n\nexport class JournalistDashboard {\n  public news_numbers?: JournalistDashboardNewsNumbers;\n  public lists?: NewsList[];\n\n  constructor() {\n    this.news_numbers = new JournalistDashboardNewsNumbers();\n    this.lists = [];\n  }\n}\nexport class JournalistDashboardNewsNumbers {\n  public my: number;\n  public reject: number;\n  public approved: number;\n  public in_review: number;\n\n  constructor() {\n    this.my = 0;\n    this.reject = 0;\n    this.approved = 0;\n    this.in_review = 0;\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  AfterViewInit,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  Renderer2\n  } from '@angular/core';\nimport { NgModel, NgControl } from '@angular/forms';\n\n@Directive({\n  selector: '[appDnrmsThaana]',\n  // providers: [NgModel],\n    host: {\n      '(input)': 'translate($event)',\n  }\n})\n// '[value]': 'appDnrmsThaana',\n// '(ngModelChange)': 'keyupEvent()'\nexport class ThaanaDirective implements AfterViewInit, OnInit {\n\n  @Input() appDnrmsThaana = true;\n  new_text: string;\n  firstChar = true;\n  selStart: number;\n  selEnd: number;\n  model_value: string;\n\n  @Output() ngModelChange = new EventEmitter();\n\n  _transFrom  = 'qwertyuiop[]\\\\asdfghjkl;\\'zxcvbnm,./QWERTYUIOP{}|ASDFGHJKL:\\\"ZXCVBNM<>?()';\n  _transToKbd = {\n    'phonetic': 'ްއެރތޔުިޮޕ][\\\\ަސދފގހޖކލ؛\\'ޒ×ޗވބނމ،./ޤޢޭޜޓޠޫީޯ÷}{|ާށޑﷲޣޙޛޚޅ:\\\"ޡޘޝޥޞޏޟ><؟)(',\n    'phonetic-hh': 'ޤަެރތޔުިޮޕ][\\\\އސދފގހޖކލ؛\\'ޒޝްވބނމ،./ﷲާޭޜޓޠޫީޯޕ}{|ޢށޑޟޣޙޛޚޅ:\\\"ޡޘޗޥޞޏމ><؟)(',\n    'typewriter': 'ޫޮާީޭގރމތހލ[]ިުްަެވއނކފﷲޒޑސޔޅދބށޓޯ×’“/:ޤޜޣޠޙ÷{}<>.،\\\"ޥޢޘޚޡ؛ޖޕޏޗޟޛޝ\\\\ޞ؟)('\n  };\n\n  constructor(\n    private elem: ElementRef,\n    private _model: NgModel,\n    private control: NgControl,\n    private renderer: Renderer2,\n  ) {\n  }\n\n  ngOnInit() {\n    this.selStart = this.elem.nativeElement.selectionStart;\n    this.selEnd   = this.elem.nativeElement.selectionEnd;\n  }\n\n  ngAfterViewInit(): void {\n    this.applyDhivehiStyles(this.appDnrmsThaana);\n  }\n\n applyDhivehiStyles(apply: boolean) {\n   if (apply) {\n    this.elem.nativeElement.style.color = '#2d2b2d';\n    this.elem.nativeElement.style.fontSize = '20px';\n    this.elem.nativeElement.style.textAlign = 'right';\n    this.elem.nativeElement.style.direction = 'rtl';\n    this.elem.nativeElement.style.lineHeight = '38px';\n    this.elem.nativeElement.style.fontFamily = 'MV Faseyha';\n    this.renderer.addClass(this.elem.nativeElement, 'dhv');\n    // this.elem.nativeElement.style.unicodeBidi = 'bidi-override';\n  }else {\n    this.elem.nativeElement.style.color = '#2d2b2d';\n    this.elem.nativeElement.style.fontSize = '16px';\n    this.elem.nativeElement.style.textAlign = 'left';\n    this.elem.nativeElement.style.direction = 'ltr';\n    this.elem.nativeElement.style.unicodeBidi = '';\n    this.elem.nativeElement.style.lineHeight = '28px';\n    this.elem.nativeElement.style.fontFamily = 'Poppins';\n    this.renderer.removeClass(this.elem.nativeElement, 'dhv');\n  }\n }\n\n//  @HostListener('ngModelChange', ['$event'])\n//   onEvent(event) {\n\n//     if (!this.appDnrmsThaana) {\n//       this.applyDhivehiStyles(false);\n//       return;\n//     } else {\n//       this.applyDhivehiStyles(true);\n//     }\n\n//     const nElm = this.elem.nativeElement;\n\n//     const _inputValue = nElm.value; // nElm.value;\n//     let _key = event.key;\n//     let _keyChar = '';\n//     let ctrl: any;\n\n\n//     if (_inputValue.length === 0) {\n//       return true;\n//     } else if (_inputValue.length <= 1) {\n//       // _keyChar = this.elem.nativeElement.value;\n//       _keyChar = _inputValue;\n//     } else {\n//       // _keyChar = this.elem.nativeElement.value.substr(this.elem.nativeElement.selectionStart - 1, 1);\n//       // _keyChar = _inputValue.substr(nElm.selectionStart - 1, 1);\n//       _keyChar = _inputValue.substr(_inputValue.length - 1, 1);\n//     }\n\n//     if (event.which == null) {\n//       // IE:\n//       _key = event.key;\n//     }else if (event.which > 0) {\n//       // Non-IE printable chars:\n//       _key = event.which;\n\n//       // Handle special keys misfire in Opera\n//       if ([45, 46, 35, 36].indexOf(event.key) === 1) {\n//         return true;\n//       }\n//     }else {\n//       // Ignore special keys\n//       return true;\n//     }\n//     // Check for CTRL modifier key\n//     if (event.modifier) {\n//       ctrl = event.modifiers && event.CONTROL_MASK;\n//     }else if (typeof(event.ctrlKey) !== 'undefined') {\n//       ctrl = event.ctrlKey;\n//     }\n//     const selOld: number = nElm.selectionEnd;\n\n//     try {\n//       const transIndex = this._transFrom.indexOf(_keyChar);\n\n//       if (transIndex === -1 || ctrl) {\n//         return true;\n//       }\n\n//       const tChar = this._transToKbd['phonetic'].substr(transIndex, 1);\n\n//       if (this.firstChar) {\n//         // this.new_text  = tChar;\n//         this.firstChar = false;\n\n//         this.new_text = _inputValue.substring(0, nElm.selectionStart - 1)\n//                       + tChar\n//                       + _inputValue.substring(nElm.selectionEnd, _inputValue.length);\n//       } else {\n//         this.new_text = _inputValue.substring(0, nElm.selectionStart - 1)\n//                       + tChar\n//                       + _inputValue.substring(nElm.selectionEnd, _inputValue.length);\n\n//       }\n\n//         this.elem.nativeElement.value = this.new_text;\n//         // this._model.valueAccessor.writeValue(this.new_text);\n//         this.ngModelChange.emit(this.new_text);\n\n//         // console.log(this.new_text);\n//         // console.log(nElm.value);\n//         // this.render.setElementProperty(this.elem.nativeElement, 'value', this.new_text);\n//       }catch (error) {\n//         console.error(error);\n//       }\n//       nElm.setSelectionRange(selOld, selOld);\n//       nElm.focus();\n//   }\n\n// @HostListener('focus', ['$event'])\n//   onFocus(event) {\n\n    // const nElm = this.elem.nativeElement;\n    // const _inputValue = nElm.value;\n\n    // nElm.setSelectionRange(nElm.selectionStart, nElm.selectionStart);\n    // nElm.focus();\n\n    // this.model_value = _inputValue;\n    // this.selStart = nElm.selectionStart;\n    // this.selEnd   = nElm.selectionEnd;\n//  }\n\n\n  translate(event) {\n\n    if (!this.appDnrmsThaana) {\n      this.applyDhivehiStyles(false);\n      return;\n    } else {\n      this.applyDhivehiStyles(true);\n    }\n\n    const nElm = this.elem.nativeElement;\n\n    const _inputValue = nElm.value; // nElm.value;\n    let _key = event.key;\n    let _keyChar = '';\n    let ctrl: any;\n\n    if (_inputValue.length === 0) {\n      return true;\n    } else if (_inputValue.length <= 1) {\n      // _keyChar = this.elem.nativeElement.value;\n      _keyChar = _inputValue;\n    } else {\n      // _keyChar = this.elem.nativeElement.value.substr(this.elem.nativeElement.selectionStart - 1, 1);\n      _keyChar = _inputValue.substr(nElm.selectionStart - 1, 1);\n      // _keyChar = _inputValue.substr(_inputValue.length - 1, 1);\n    }\n\n    if (event.which == null) {\n      // IE:\n      _key = event.key;\n    }else if (event.which > 0) {\n      // Non-IE printable chars:\n      _key = event.which;\n\n      // Handle special keys misfire in Opera\n      if ([45, 46, 35, 36].indexOf(event.key) === 1) {\n        return true;\n      }\n    }else {\n      // Ignore special keys\n      // return true;\n    }\n\n    // Check for CTRL modifier key\n    if (event.modifier) {\n      ctrl = event.modifiers && event.CONTROL_MASK;\n    }else if (typeof(event.ctrlKey) !== 'undefined') {\n      ctrl = event.ctrlKey;\n    }\n\n    const selOld: number = nElm.selectionEnd;\n    this.selEnd = nElm.selectionEnd;\n    this.selStart = nElm.selectionStart;\n\n    try {\n      const transIndex = this._transFrom.indexOf(_keyChar);\n\n      if (transIndex === -1 || ctrl) {\n        return true;\n      }\n\n      const tChar = this._transToKbd['phonetic'].substr(transIndex, 1);\n\n      if (this.firstChar) {\n        // this.new_text  = tChar;\n        this.firstChar = false;\n\n        this.new_text = _inputValue.substring(0, nElm.selectionStart - 1)\n                      + tChar\n                      + _inputValue.substring(nElm.selectionEnd, _inputValue.length);\n      } else {\n        this.new_text = _inputValue.substring(0, nElm.selectionStart - 1)\n                      + tChar\n                      + _inputValue.substring(nElm.selectionEnd, _inputValue.length);\n\n      }\n\n        this.ngModelChange.emit(this.new_text);\n        this._model.valueAccessor.writeValue(this.new_text);\n\n    }catch (error) {\n      console.error(error);\n    }\n\n    this.setCursor();\n  }\n\n\n  setCursor() {\n    // console.log('SELECTION: '+this.selStart+'||||'+this.selEnd)\n    this.elem.nativeElement.focus();\n    this.elem.nativeElement.setSelectionRange(this.selStart, this.selEnd);\n  }\n\n}\n","import {Component, Input, OnDestroy, Inject, ViewEncapsulation} from '@angular/core';\nimport {Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError} from '@angular/router';\nimport {DOCUMENT} from '@angular/common';\n\n@Component({\n    selector: 'app-spinner',\n    template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\n        <div class=\"spinner\">\n          <div class=\"double-bounce1\"></div>\n          <div class=\"double-bounce2\"></div>\n        </div>\n    </div>`,\n    encapsulation: ViewEncapsulation.None\n})\nexport class SpinnerComponent implements OnDestroy {\n    public isSpinnerVisible = true;\n\n    @Input() public backgroundColor = 'rgba(0, 115, 170, 0.69)';\n\n    constructor(private router: Router, @Inject(DOCUMENT) private document: Document) {\n      this.router.events.subscribe(event => {\n          if (event instanceof NavigationStart) {\n              this.isSpinnerVisible = true;\n          } else if ( event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\n              this.isSpinnerVisible = false;\n          }\n      }, () => {\n          this.isSpinnerVisible = false;\n      });\n    }\n\n    ngOnDestroy(): void {\n        this.isSpinnerVisible = false;\n    }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\n\n/**\n * NgModule that includes all Material modules that are required to serve the demo-app.\n */\n@NgModule({\n  exports: [\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatTableModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatNativeDateModule,\n    CdkTableModule,\n    A11yModule,\n    BidiModule,\n    CdkAccordionModule,\n    ObserversModule,\n    OverlayModule,\n    PlatformModule,\n    PortalModule,\n  ]\n})\nexport class DemoMaterialModule {}\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { TickersNews } from '../../../news/models/news';\n\nimport { Store } from '@ngrx/store';\nimport * as newsActions from '../../../news/store/news.actions';\n\n@Component({\n  selector: 'app-add-ticker-news-dialog',\n  templateUrl: './add-ticker-news-dialog.component.html'\n})\nexport class AddTickerNewsDialogComponent implements OnInit {\n  onAdd = new EventEmitter();\n\n  tickerNews = new TickersNews();\n  @Input() public dhivehiEnabled = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddTickerNewsDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: TickersNews,\n    private store: Store<any>,\n  ) { }\n\n  ngOnInit() {\n    this.tickerNews.language.language_code = 'Dhv';\n    this.tickerNews.ticker_id = this.data.id;\n    this.tickerNews.enabled   = 0; // ticker news are disabled when added\n  }\n\n\n  changeLanguage() {\n    if (this.dhivehiEnabled) {\n      this.tickerNews.language.language_code = 'Dhv';\n    } else {\n      this.tickerNews.language.language_code = 'Eng';\n    }\n  }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n  doAdd(id?: number) {\n    this.closeDialog(true);\n    //this.onAdd.emit(this.tickerNews);\n    this.store.dispatch(new newsActions.AddTickerNews(this.tickerNews));\n    this.onAdd.emit();\n  }\n\n}\n","<!-- <h3 mat-dialog-title>Add News to {{data.name}}</h3> -->\n\n<mat-toolbar color=\"secondary\" class=\"no-shadow\">\n    <mat-toolbar-row>\n        <span fxFlex fxShow=\"false\" fxShow.gt-xs>Add News to {{data.name}}</span>\n        <div fxShow=\"false\" fxShow.gt-xs>\n            <mat-slide-toggle labelPosition=\"after\" color=\"secondary\" [(ngModel)]=\"dhivehiEnabled\" (ngModelChange)=\"changeLanguage()\">{{tickerNews.language.language_code}}</mat-slide-toggle>\n        </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n\n<div mat-dialog-content>\n  <!-- <div fxLayout=\"row\" fxLayoutWrap=\"wrap\"> -->\n      <!-- title column -->\n      <!-- <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n          Add News to {{data.name}}\n      </div> -->\n      <!-- hr column -->\n      <!-- <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n        <mat-divider></mat-divider>\n      </div> -->\n      <!-- column -->\n  <!-- </div> -->\n\n  <div style=\"margin-top:20px;\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Ticker News</mat-label>\n          <textarea matInput mat-autosize matAutosizeMinRows=\"5\" #dhvInput required\n            [appDnrmsThaana]=\"dhivehiEnabled\"\n            [(ngModel)]=\"tickerNews.news\"\n            name=\"dhvInput\"></textarea>\n        </mat-form-field>\n      </div>\n  </div>\n\n  <!-- <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n          <code>{{tickerNews|json}}</code>\n      </div>\n  </div> -->\n\n</div>\n<!-- actions column -->\n<div align=\"end\" mat-dialog-actions align=\"end\">\n  <button mat-button color=\"basic\" (click)=\"closeDialog(true)\">Cancel</button>\n  <button mat-raised-button color=\"primary\" (click)=\"doAdd(data.id)\">Add</button>\n\n  <!-- <button mat-button color=\"basic\" *ngIf=\"data.newsstatus.status != 'published' && data.newsstatus.status != 'deleted'\" routerLink=\"/news/{{data.id}}\" (click)=\"closeDialog(true)\">Edit</button> -->\n</div>\n","import { Component } from '@angular/core';\nimport { PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';\nimport { Subscription } from 'Rxjs';\n\nimport { AuthService } from '../../../shared/services/auth.service';\n\nimport * as userActions from '../../../authentication/store/user.actions';\nimport { UserState } from '../../../store/app.state';\nimport { Store } from '@ngrx/store';\nimport { Router } from '../../../../../node_modules/@angular/router';\n\nimport { DsService } from '../../../shared/services/ds.service';\nimport { User } from '../../../shared/models/user';\nimport { environment } from '../../../../environments/environment';\ndeclare var deepstream: any;\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: []\n})\nexport class AppHeaderComponent {\n  public config: PerfectScrollbarConfigInterface = {};\n  loggedInSub: Subscription;\n  logged_in = false;\n  show_top_icons = false;\n  public userData: User = new User();\n\n\n\n\n  storagePath: string = null;\n  title = 'deepChat';\n  username;\n  text: string = 'first chat record';\n  chats;\n  chatArray = [];\n\n\n  constructor(\n    private auth: AuthService,\n    private store: Store<UserState>,\n    private ds: DsService,\n    private store2: Store<any>,\n  ) {\n    this.storagePath = environment.storageUrl;\n\n    // get user authentication status\n    this.loggedInSub = this.auth.loggedIn$.subscribe( loggedIn => this.logged_in = loggedIn );\n\n    this.store2.select(store => store.UserState).subscribe(userdata => {\n      this.userData = userdata.user;\n      //this.chantInit();\n    });\n  }\n\n  logOut(): void {\n    // this.auth.doSignOut();\n    this.store.dispatch(new userActions.UserLogout());\n\n  }\n\n\n    // chantInit(){\n    //   this.username = this.userData.email;\n    //   // Login without credentials\n    //   this.ds.login(null, this.loginHandler);\n\n    //   this.chats = this.ds.getList('chats');\n    //   this.chats.on('entry-added', recordName => {\n    //     this.ds.getRecord( recordName ).whenReady( record => {\n    //       record.subscribe( (data) => {\n    //         if(data.username && data.text) {\n    //           // Update bindable property\n    //           this.chatArray.push(data);\n    //           console.log(this.chatArray)\n    //         }\n    //       }, true );\n    //     });\n    //   })\n\n\n    //   const recordName = 'chat/' + this.ds.dsInstance.getUid();\n\n    //   const chatRecord = this.ds.getRecord(recordName);\n    //   chatRecord.set({uid: this.userData.id ,username: this.username, text: this.text, userimage: this.userData.profile.profilepic});\n    //   this.text = '';\n    //   // Update the chats list\n    //   this.chats.addEntry(recordName);\n    // }\n\n\n    // loginHandler(success, data) {\n    //   console.log('logged in', success, data);\n    // }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n// This is for Notifications\n  // notifications: Object[] = [\n  //   {\n  //     round: 'round-danger',\n  //     icon: 'ti-link',\n  //     title: 'Launch Admin',\n  //     subject: 'Just see the my new admin!',\n  //     time: '9:30 AM'\n  //   },\n  //   {\n  //     round: 'round-success',\n  //     icon: 'ti-calendar',\n  //     title: 'Event today',\n  //     subject: 'Just a reminder that you have event',\n  //     time: '9:10 AM'\n  //   },\n  //   {\n  //     round: 'round-info',\n  //     icon: 'ti-settings',\n  //     title: 'Settings',\n  //     subject: 'You can customize this template as you want',\n  //     time: '9:08 AM'\n  //   },\n  //   {\n  //     round: 'round-primary',\n  //     icon: 'ti-user',\n  //     title: 'Pavan kumar',\n  //     subject: 'Just see the my admin!',\n  //     time: '9:00 AM'\n  //   }\n  // ];\n\n  // This is for Mymessages\n  // mymessages: Object[] = [\n  //   {\n  //     useravatar: 'assets/images/users/1.jpg',\n  //     status: 'online',\n  //     from: 'Pavan kumar',\n  //     subject: 'Just see the my admin!',\n  //     time: '9:30 AM'\n  //   },\n  //   {\n  //     useravatar: 'assets/images/users/2.jpg',\n  //     status: 'busy',\n  //     from: 'Sonu Nigam',\n  //     subject: 'I have sung a song! See you at',\n  //     time: '9:10 AM'\n  //   },\n  //   {\n  //     useravatar: 'assets/images/users/2.jpg',\n  //     status: 'away',\n  //     from: 'Arijit Sinh',\n  //     subject: 'I am a singer!',\n  //     time: '9:08 AM'\n  //   },\n  //   {\n  //     useravatar: 'assets/images/users/4.jpg',\n  //     status: 'offline',\n  //     from: 'Pavan kumar',\n  //     subject: 'Just see the my admin!',\n  //     time: '9:00 AM'\n  //   }\n  // ];\n","<!-- ============================================================== -->\n<!-- Display login button if user is not logged in -->\n<!-- ============================================================== -->\n<button mat-icon-button alt=\"log in\" class=\"m-r-5\" *ngIf=\"!logged_in\" [routerLink]=\"['/authentication/login/']\">\n  <mat-icon style=\"color:#ffffff\">account_circle</mat-icon>\n</button>\n\n<!-- ============================================================== -->\n<!-- Notification - style you can find in header.scss -->\n<!-- ============================================================== -->\n<!-- <button [matMenuTriggerFor]=\"notification\" mat-icon-button class=\"m-r-10\">\n    <mat-icon>message</mat-icon>\n    <div class=\"notify\">\n        <span class=\"heartbit\"></span>\n        <span class=\"point\"></span>\n    </div>\n</button>\n<mat-menu #notification=\"matMenu\" class=\"mymegamenu\">\n    <div class=\"mailbox\">\n        <ul>\n            <li>\n                <div class=\"drop-title\">Notifications</div>\n            </li>\n            <li>\n                <div class=\"message-center\">\n                    <perfect-scrollbar [config]=\"config\">\n\n                        <a href=\"#\" *ngFor=\"let notification of notifications\">\n                            <div class=\"round {{notification.round}}\">\n                                <i class=\"{{notification.icon}}\"></i>\n                            </div>\n                            <div class=\"mail-content\">\n                                <h5>{{notification.title}}</h5>\n                                <span class=\"mail-desc\">{{notification.subject}}</span>\n                                <span class=\"time\">{{notification.time}}</span>\n                            </div>\n                        </a>\n\n                    </perfect-scrollbar>\n                </div>\n            </li>\n\n        </ul>\n    </div>\n</mat-menu> -->\n<!-- ============================================================== -->\n<!-- Profile - style you can find in header.scss -->\n<!-- ============================================================== -->\n<button [matMenuTriggerFor]=\"message\" mat-icon-button class=\"m-r-10\">\n    <!-- <mat-icon>email</mat-icon> -->\n    <!-- <div class=\"notify\">\n        <span class=\"heartbit\"></span>\n        <span class=\"point\"></span>\n    </div> -->\n</button>\n<mat-menu #message=\"matMenu\" class=\"mymessage\">\n    <div class=\"mailbox\">\n        <ul>\n            <!-- <li>\n                <div class=\"drop-title\">You have 4 new Mymessages</div>\n            </li> -->\n            <li>\n                <div class=\"message-center\">\n                    <perfect-scrollbar [config]=\"config\">\n\n                        <a href=\"#\" *ngFor=\"let mymessage of chatArray\">\n                            <div class=\"user-img\">\n                                <img src=\"{{storagePath}}profiles/user/{{mymessage.userimage}}\" alt=\"user\" class=\"img-circle\" width=\"40\">\n                                <!-- <span class=\"profile-status {{mymessage.status}} pull-right\"></span> -->\n                            </div>\n                            <div class=\"mail-content\">\n                                <h5>{{mymessage.username}}</h5>\n                                <span class=\"mail-desc\">{{mymessage.text}}</span>\n                                <!-- <span class=\"time\">{{mymessage.time}}</span> -->\n                            </div>\n                        </a>\n                    </perfect-scrollbar>\n                </div>\n            </li>\n        </ul>\n    </div>\n</mat-menu>\n<!-- ============================================================== -->\n<!-- Profile - style you can find in header.scss -->\n<!-- ============================================================== -->\n<button [matMenuTriggerFor]=\"profile\" mat-icon-button class=\"m-r-5\" *ngIf=\"logged_in\">\n  <mat-icon>account_circle</mat-icon>\n</button>\n<mat-menu #profile=\"matMenu\" class=\"mymegamenu\">\n    <!-- <button mat-menu-item>\n        <mat-icon>settings</mat-icon> Settings </button> -->\n    <button mat-menu-item [routerLink]=\"['/user/profile']\">\n        <mat-icon>account_box</mat-icon> Profile </button>\n    <!-- <button mat-menu-item>\n        <mat-icon>notifications_off</mat-icon> Disable notifications </button> -->\n    <button mat-menu-item (click)=\"logOut()\">\n        <mat-icon>exit_to_app</mat-icon> Sign Out </button>\n</mat-menu>\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { Action } from '@ngrx/store';\n\nimport * as UserActions from './user.actions';\nimport { UserState } from '../../store/app.state';\nimport { User, Profile } from '../../shared/models/user';\nimport { NewsState } from './../../store/app.state';\n\nconst myuser: UserState = { user: { email: null, name: null, token: {token: null}, roles: null, roles_a: null, profile: new Profile() } };\nexport const initialState: UserState = myuser;\n\nexport type Actions = UserActions.All;\nexport interface ActionWithPayload<T> extends Action {\n  payload: T;\n}\n\nexport function reducer(state = initialState, action: ActionWithPayload<any>): UserState {\n  switch (action.type) {\n    case UserActions.USER_LOGIN: {\n      return {\n        ...state\n      };\n    }\n\n    case UserActions.USER_LOGIN_SUCCESS: {\n      return {\n        ...state,\n        user: action.payload,\n      };\n    }\n\n    case UserActions.USER_GET_SETTINGS: {\n      return {\n        ...state\n      };\n    }\n\n    case UserActions.USER_GET_SETTINGS_SUCCESS: {\n      return {\n        ...state,\n        user: action.payload,\n      };\n    }\n\n    case UserActions.USER_LOGOUT: {\n      // return {\n      //   ...state\n      // };\n      return initialState;\n    }\n\n    case UserActions.USER_LOGOUT_SUCCESS: {\n      // return {\n      //   // ...state,\n      //   // user: action.payload,\n      //   user: { email: null, name: null, token: {token: null}, roles: null, roles_a: null }\n      // };\n      return initialState;\n    }\n\n\n\n\n    case UserActions.SERVER_USER_GET_SETTINGS: {\n      return {\n        ...state\n      };\n    }\n\n    case UserActions.SERVER_USER_GET_SETTINGS_SUCCESS: {\n      return {\n        ...state,\n        user: action.payload,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const getUserState = createFeatureSelector<UserState>('userState');\n\nexport const getUser = createSelector(\n  getUserState,\n  (state: UserState) => state.user\n);\n","import { Directive, HostListener, Inject } from '@angular/core';\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\n\n@Directive({\n  selector: '[appAccordionToggle]'\n})\nexport class AccordionAnchorDirective {\n\n  protected navlink: AccordionLinkDirective;\n\n  constructor( @Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\n    this.navlink = navlink;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(e: any) {\n    this.navlink.toggle();\n  }\n}\n","import '@angular/compiler';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"]}