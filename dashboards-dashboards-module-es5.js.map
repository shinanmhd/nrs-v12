{"version":3,"sources":["webpack:///src/app/dashboards/dashboard1/dashboard1.component.ts","webpack:///src/app/dashboards/dashboard1/dashboard1.component.html","webpack:///src/app/dashboards/dashboards.module.ts","webpack:///src/app/dashboards/user-dashboard/user-dashboard.component.ts","webpack:///src/app/dashboards/user-dashboard/user-dashboard.component.html","webpack:///src/app/shared/models/user-data.ts","webpack:///src/app/dashboards/dashboards.routing.ts","webpack:///src/app/dashboards/services/user.service.ts","webpack:///src/app/dashboards/dashboard2/dashboard2.component.ts","webpack:///src/app/dashboards/dashboard2/dashboard2.component.html","webpack:///src/app/dashboards/edit-profile/edit-profile.component.ts","webpack:///src/app/dashboards/edit-profile/edit-profile.component.html","webpack:///src/app/dashboards/chat/chat.component.ts","webpack:///src/app/dashboards/change-password-dialog/change-password-dialog.component.ts","webpack:///src/app/dashboards/change-password-dialog/change-password-dialog.component.html"],"names":["data","Dashboard1Component","barChart1","type","options","seriesBarDistance","high","axisX","showGrid","offset","axisY","responsiveOptions","labelInterpolationFnc","value","index","donuteChart1","donut","showLabel","donutWidth","lineChart1","low","showArea","fullWidth","mytimelines","from","time","image","attachment","content","buttons","sparklineLogin","$","sparkline","width","height","barWidth","resize","barSpacing","barColor","sparkResize","window","e","clearTimeout","setTimeout","selector","templateUrl","styleUrls","DashboardsModule","forChild","imports","declarations","entryComponents","id","UserDashboardComponent","store","dialog","userService","userData","random_number","Math","floor","random","storagePath","storageUrl","select","UserState","user","subscribe","userState","getDashboardData","dialogRef","open","maxHeight","email","changePass","UserData","news","DashboardsRoutes","path","children","component","UserService","http","apiUrl","postStr","post","userid","get","providedIn","Dashboard2Component","doughnutChartLabels","doughnutChartOptions","responsive","doughnutChartData","doughnutChartType","doughnutChartLegend","displayedColumns","dataSource","ELEMENT_DATA","mycomments","name","profile","status","date","mymessages","useravatar","subject","paginator","position","weight","designation","EditProfileComponent","router","formData","FormData","event","elem","target","files","length","set","key","console","log","append","user_id","dob","gender","fb","insta","twitter","phone","response","dispatch","navigate","appendForm","$event","uploadFile","updateProfile","ChatComponent","ds","title","username","chatMessage","chatArray","sidePanelOpened","userdata","chantInit","scrollToBottom","matchMedia","matches","login","loginHandler","chats","getList","msg","forEach","element","getRecord","m","push","success","myScrollContainer","nativeElement","scrollTop","scrollHeight","recordName","dsInstance","getUid","chatRecord","uid","text","userimage","profilepic","Date","addEntry","ChangePasswordDialogComponent","updates$","snackBar","onAdd","password","oldpassword","oldpasswordmsg","show","newpassword","newpasswordmsg","confirmnewpassword","confirmnewpasswordmsg","oldPassOk","passwordValid","err","checkOldPassword","checkPasswordValidity","changePassword","close","openSnackBar","message","action","duration","emit","confirmation","checkPass","checkNewPass","checkConfirmPass","closeDialog"],"mappings":"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","file":"dashboards-dashboards-module-es5.js","sourcesContent":["import { Component, AfterViewInit } from '@angular/core';\nimport * as Chartist from 'chartist';\nimport { ChartType, ChartEvent } from \"ng-chartist\";\ndeclare var require: any;\n\nconst data: any = require('./data.json');\n\nexport interface Chart {\n  type: ChartType;\n  data: Chartist.IChartistData;\n  options?: any;\n  responsiveOptions?: any;\n  events?: ChartEvent;\n}\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard1.component.html',\n  styleUrls: ['./dashboard1.component.scss']\n})\nexport class Dashboard1Component implements AfterViewInit{\n\n    // Barchart\n    barChart1: Chart = {\n        type: 'Bar',\n        data: data['Bar'],\n        options: {\n            seriesBarDistance: 15,\n            high: 12,\n\n            axisX: {\n                showGrid: false, offset: 20\n            },\n            axisY: {\n                showGrid: true, offset: 40\n            }\n        },\n\n        responsiveOptions: [\n            [\n                'screen and (min-width: 640px)',\n                {\n                    axisX: {\n                        labelInterpolationFnc: function (value: number, index: number): string {\n                            return index % 1 === 0 ? `${value}` : null;\n                        }\n                    }\n                }\n            ]\n        ]\n    };\n\n    // This is for the donute chart\n    donuteChart1: Chart = {\n        type: 'Pie',\n        data: data['Pie'],\n        options: {\n          donut: true,\n          showLabel: false,\n          donutWidth: 30\n\n        }\n        // events: {\n        //   draw(data: any): boolean {\n        //     return data;\n        //   }\n        // }\n      };\n    // This is for the line chart\n    // Line chart\n    lineChart1: Chart = {\n        type: 'Line',\n        data: data['LineWithArea'],\n        options: {\n          low: 0,\n          high: 35000,\n          showArea: true,\n          fullWidth: true\n        }\n    };\n     ngAfterViewInit(){\n    //Sparkline chart\n    var sparklineLogin = function () {\n        // spark count\n        (<any>$('.spark-count')).sparkline([4, 5, 0, 10, 9, 12, 4, 9, 4, 5, 3, 10, 9, 12, 10, 9, 12, 4, 9], {\n            type: 'bar'\n            , width: '100%'\n            , height: '70'\n            , barWidth: '2'\n            , resize: true\n            , barSpacing: '6'\n            , barColor: 'rgba(255, 255, 255, 0.3)'\n        });\n\n    }\n    var sparkResize;\n    (<any>$(window)).resize(function(e) {\n            clearTimeout(sparkResize);\n            sparkResize = setTimeout(sparklineLogin, 500);\n        });\n    sparklineLogin();\n     }\n    // Timeline\n    mytimelines: any[] = [{\n    from: 'Nirav joshi',\n    time: '(5 minute ago)',\n    image: 'assets/images/users/1.jpg',\n    attachment: 'assets/images/big/img2.jpg',\n    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper'\n  }, {\n    from: 'Sunil joshi',\n    time: '(3 minute ago)',\n    image: 'assets/images/users/2.jpg',\n    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper',\n    buttons: 'primary'\n  }, {\n    from: 'Vishal Bhatt',\n    time: '(1 minute ago)',\n    image: 'assets/images/users/3.jpg',\n    attachment: 'assets/images/big/img1.jpg',\n    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper'\n  }, {\n    from: 'Dhiren Adesara',\n    time: '(1 minute ago)',\n    image: 'assets/images/users/4.jpg',\n    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer nec odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi. Nulla quis sem at nibh elementum imperdiet. Duis sagittis ipsum. Praesent mauris. Fusce nec tellus sed augue semper',\n    buttons: 'warn'\n  }]; }\n","<!-- ============================================================== -->\n<!-- Simple four boxes Row -->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <!-- column -->    \n  <div fxFlex.gt-sm=\"25\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-content>\n          <!-- Row -->\n          <div class=\"d-flex no-block\">\n              <!-- column -->\n              <div class=\"m-r-10 no-shrink\">\n                  <button mat-fab mat-card-icon class=\"shadow-none bg-inverse  bg-success\">\n                      <mat-icon>account_circle</mat-icon>\n                  </button>\n              </div> \n              <!-- column -->\n              <div>\n                  <h3 class=\"m-0\">386</h3>\n                  <h6 class=\"text-muted m-0\">New Clients</h6>\n              </div> \n              \n          </div>      \n      </mat-card-content>\n    </mat-card>\n  </div>\n  <!-- column -->\n  <!-- column -->    \n  <div fxFlex.gt-sm=\"25\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-content>\n          <!-- Row -->\n          <div class=\"d-flex no-block\">\n              <!-- column -->\n              <div class=\"m-r-10 no-shrink\">\n                  <button mat-fab color=\"warn\" mat-card-icon class=\"shadow-none  bg-warning\">\n                      <mat-icon>local_mall</mat-icon>\n                  </button>\n              </div> \n              <!-- column -->\n              <div>\n                  <h3 class=\"m-0\">2408</h3>\n                  <h6 class=\"text-muted m-0\">All Projects</h6>\n              </div> \n              \n          </div>      \n      </mat-card-content>\n    </mat-card>\n  </div>\n  <!-- column --> \n  <!-- column -->    \n  <div fxFlex.gt-sm=\"25\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-content>\n          <!-- Row -->\n          <div class=\"d-flex no-block\">\n              <!-- column -->\n              <div class=\"m-r-10 no-shrink\">\n                  <button mat-fab color=\"accent\" mat-card-icon class=\"shadow-none\">\n                      <mat-icon>stars</mat-icon>\n                  </button>\n              </div>\n              <!-- column -->\n              <div>\n                  <h3 class=\"m-0\">352</h3>\n                  <h6 class=\"text-muted m-0\">New Items</h6>\n              </div> \n               \n          </div>      \n      </mat-card-content>\n    </mat-card>\n  </div>\n  <!-- column --> \n  <!-- column -->    \n  <div fxFlex.gt-sm=\"25\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-content>\n          <!-- Row -->\n          <div class=\"d-flex no-block\">\n              <!-- column -->\n              <div class=\"m-r-10 no-shrink\">\n                  <button mat-fab color=\"warn\" mat-card-icon class=\"shadow-none bg-danger\">\n                      <mat-icon>content_paste</mat-icon>\n                  </button>\n              </div> \n              <!-- column -->\n              <div>\n                  <h3 class=\"m-0\">159</h3>\n                  <h6 class=\"text-muted m-0\">New Invoices</h6>\n              </div> \n              \n          </div>      \n      </mat-card-content>\n    </mat-card>\n  </div>\n  <!-- column -->     \n</div>\n<!-- ============================================================== -->\n<!-- Charts -->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <!-- Column-->    \n  <div fxFlex.gt-lg=\"75\" fxFlex.gt-md=\"60\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-content>\n          <mat-card-title>Sales Overview</mat-card-title>\n          <mat-card-subtitle>Ample Admin Vs Material Admin</mat-card-subtitle>\n          \n          <div class=\"barchrt\" style=\"height:360px;\">\n              <x-chartist class=\"\" [data]=\"barChart1.data\" [type]=\"barChart1.type\" [options]=\"barChart1.options\" [responsiveOptions]=\"barChart1.responsiveOptions\" [events]=\"barChart1.events\"> </x-chartist>\n            </div>\n          <ul class=\"list-inline text-center\">\n                <li><h6 class=\"text-muted text-success m-0\"><i class=\"fa fa-circle font-10 m-r-10 \"></i>Ample</h6> </li>\n                <li><h6 class=\"text-muted  text-info  m-0\"><i class=\"fa fa-circle font-10 m-r-10\"></i>Pixel</h6> </li>\n            </ul>\n      </mat-card-content>\n    </mat-card>\n  </div>\n  <!-- Column-->    \n  <div fxFlex.gt-lg=\"25\" fxFlex.gt-md=\"40\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n      <mat-card>\n          <mat-card-content>\n              <mat-card-title>Our Visitors</mat-card-title>\n              <mat-card-subtitle>Different Devices Used to Visit</mat-card-subtitle>\n              <div class=\"piechart\" >\n                  <x-chartist class=\"\" [data]=\"donuteChart1.data\" [type]=\"donuteChart1.type\" [options]=\"donuteChart1.options\" [responsiveOptions]=\"donuteChart1.responsiveOptions\" [events]=\"donuteChart1.events\"> </x-chartist>\n                </div>\n          </mat-card-content>\n          <hr>\n          <mat-card-content>\n            <ul class=\"list-inline text-center\">\n                <li><h6 class=\"text-muted text-success m-0\"><i class=\"fa fa-circle font-10 m-r-10 \"></i>Mobile</h6> </li>\n                <li><h6 class=\"text-muted  text-info  m-0\"><i class=\"fa fa-circle font-10 m-r-10\"></i>Desktop</h6> </li>\n                <li><h6 class=\"text-muted  text-purple  m-0\"><i class=\"fa fa-circle font-10 m-r-10\"></i>Tablet</h6> </li>\n            </ul>\n          </mat-card-content>\n          \n      </mat-card>    \n    </div>      \n  <!-- Column-->\n</div> \n<!-- ============================================================== -->\n<!-- Chart boxes -->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <!-- column -->    \n  <div fxFlex.gt-sm=\"33.33\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card class=\"bg-info\">\n      <mat-card-content>\n          <!-- column -->\n          <div class=\"d-flex no-block align-items-center\">\n            <div class=\"stats\">\n                <h3 class=\"text-white m-0\">Purchase</h3>\n                <h6 class=\"text-white m-t-0\">March 2017</h6>\n                <h1 class=\"text-white m-0\">35487</h1>\n            </div>\n            <div class=\"spark-count ml-auto\"></div>\n          </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n  <!-- column -->\n  <!-- column -->    \n  <div fxFlex.gt-sm=\"33.33\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card class=\"bg-purple\">\n      <mat-card-content >\n          <!-- column -->\n          <div class=\"d-flex no-block align-items-center\">\n            <div class=\"stats\">\n                <h3 class=\"text-white m-0\">Expense</h3>\n                <h6 class=\"text-white m-t-0\">March 2017</h6>\n                <h1 class=\"text-white m-0\">35487</h1>\n            </div>\n            <div class=\"spark-count ml-auto\"></div>\n          </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n  <!-- column --> \n  <!-- column -->    \n  <div fxFlex.gt-sm=\"33.33\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card class=\"bg-success\">\n      <mat-card-content>\n          <!-- column -->\n          <div class=\"d-flex no-block align-items-center\">\n            <div class=\"stats\">\n                <h3 class=\"text-white m-0\">Income</h3>\n                <h6 class=\"text-white m-t-0\">March 2017</h6>\n                <h1 class=\"text-white m-0\">35487</h1>\n            </div>\n            <div class=\"spark-count ml-auto\"></div>\n          </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n  <!-- column --> \n  \n  <!-- column -->     \n</div>\n<!-- ============================================================== -->\n<!-- Image and chart -->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <!-- Column-->    \n    <div fxFlex.gt-lg=\"25\" fxFlex.gt-md=\"40\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n        <mat-card class=\"oh\">\n          <img mat-card-image src=\"assets/images/big/img1.jpg\" alt=\"Photo of a Shiba Inu\">\n          <mat-card-content >\n             <p>\n               The Shiba Inu is the smallest of the six original and distinct spitz breeds of dog from Japan.\n               A small, agile dog that copes very well with mountainous terrain\n             </p>\n             <mat-card-actions>\n                <button mat-raised-button color=\"accent\">LIKE</button>\n                <button mat-button>SHARE</button>\n              </mat-card-actions>\n            </mat-card-content>      \n        </mat-card>\n    </div>\n    <!-- Column-->    \n    <div fxFlex.gt-lg=\"75\" fxFlex.gt-md=\"60\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n        <mat-card>\n          <mat-card-content>\n              <mat-card-title>Newsletter Campaign</mat-card-title>\n              <mat-card-subtitle>Overview of Newsletter Campaign</mat-card-subtitle>\n              \n              <div class=\"linearea\" style=\"height:360px;\">\n                  <x-chartist class=\"\" [data]=\"lineChart1.data\" [type]=\"lineChart1.type\" [options]=\"lineChart1.options\" [responsiveOptions]=\"lineChart1.responsiveOptions\" [events]=\"lineChart1.events\"> </x-chartist>\n              </div>\n              <ul class=\"list-inline text-center p-t-10\">\n                <li><h6 class=\"text-muted text-success m-0\"><i class=\"fa fa-circle font-10 m-r-10 \"></i>Sent</h6> </li>\n                <li><h6 class=\"text-muted  text-info  m-0\"><i class=\"fa fa-circle font-10 m-r-10\"></i>Clicked</h6> </li>\n              </ul>     \n          </mat-card-content>\n        </mat-card>\n    </div>    \n        \n</div> \n<!-- ============================================================== -->\n<!-- Image Card row-->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <!-- Card column -->\n    <div fxFlex.gt-lg=\"25\" fxFlex.gt-md=\"40\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n        <mat-card class=\"oh text-center little-profile\">\n          <img mat-card-image src=\"assets/images/background/profile-bg.jpg\" alt=\"Photo of a Shiba Inu\">\n          <mat-card-content>\n             <div class=\"pro-img\"><img src=\"assets/images/users/4.jpg\" width=\"100\" alt=\"user\"></div>\n             <h3 class=\"m-b-0\">Angela Dominic</h3>\n              <h6 class=\"m-t-0 \">Web Designer &amp; Developer</h6>\n              <mat-card-actions>\n                <button mat-raised-button color=\"warn\">Follow</button>\n              </mat-card-actions>\n              <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" class=\"m-t-30\">\n                  <div fxFlex.gt-sm=\"33.33%\" fxFlex.gt-xs=\"33.33%\" fxFlex=\"100\">\n                        <h3 class=\"m-0 font-light\">1099</h3>\n                        <small>Articles</small>    \n                  </div>\n                  <div fxFlex.gt-sm=\"33.33%\" fxFlex.gt-xs=\"33.33%\" fxFlex=\"100\">\n                        <h3 class=\"m-0 font-light\">23,469</h3>\n                        <small>Followers</small>    \n                  </div>\n                  <div fxFlex.gt-sm=\"33.33%\" fxFlex.gt-xs=\"33.33%\" fxFlex=\"100\">\n                        <h3 class=\"m-0 font-light\">6035</h3>\n                        <small>Likes</small>    \n                  </div>\n              </div>      \n          </mat-card-content>      \n        </mat-card>\n    </div>\n    <!-- Card column -->\n    <!-- Card column -->\n    <div fxFlex.gt-lg=\"75\" fxFlex.gt-md=\"60\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n        <mat-card>\n            <mat-tab-group>\n                <!-- Tab 1 -->\n                <mat-tab label=\"Activity\">\n                    <mat-card-content>\n                        <div class=\"d-flex no-blcok\" *ngFor=\"let mytimeline of mytimelines\">\n                            <div class=\"m-r-20\"><img class=\"img-circle\" width=\"50\" [src]=\"mytimeline.image\" alt=\"Image of {{mytimeline.from}}\">  </div>\n                            <div class=\"p-b-20 b-b m-b-30\"> \n                              <h4 class=\"m-0\">{{mytimeline.from}} <small class=\"text-muted\">{{mytimeline.time}}</small></h4>\n                              <p class=\"text-muted\">{{mytimeline.content}}</p>\n                              <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n                                  <div fxFlex.gt-sm=\"20\" fxFlex=\"100\">\n                                       <img class=\"img-responsive rounded\" [src]=\"mytimeline.attachment\" *ngIf=\"mytimeline.attachment\" alt=\"Image of {{mytimeline.attachment}}\">\n                                  </div>      \n                              </div>\n                              <button mat-raised-button color=\"{{mytimeline.buttons}}\" *ngIf=\"mytimeline.buttons\">Check Now</button>   \n                            </div>\n                        </div>\n                    </mat-card-content>\n                </mat-tab>\n                <!-- End Tab 1 -->\n                <!-- Tab 2 -->\n                <mat-tab label=\"Profile\">\n                    <mat-card-content>\n                        <mat-card-title>Form Basic Layouts</mat-card-title>\n                        <!-- ============================================================== -->\n                        <!-- column -->\n                        <!-- ============================================================== -->\n                        <form class=\"basic-form\">\n                        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n                            <!-- column -->\n                            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                              <mat-form-field>\n                                <input matInput placeholder=\"Some text value\">\n                              </mat-form-field>\n                            </div>\n                            <!-- column -->\n                            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                              <mat-form-field>\n                                <input matInput placeholder=\"EmailId\" type=\"email\">\n                              </mat-form-field>\n                            </div>\n                            <!-- column -->\n                            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                              <mat-form-field>\n                                <input matInput placeholder=\"Password\" type=\"password\">\n                              </mat-form-field>\n                            </div>\n                            \n                            <!-- column -->\n                            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                              <mat-form-field>\n                                <mat-select placeholder=\"Select\">\n                                  <mat-option value=\"option\">Option</mat-option>\n                                  <mat-option value=\"option\">Option2</mat-option>\n                                  <mat-option value=\"option\">Option3</mat-option>    \n                                </mat-select>\n                              </mat-form-field>\n                            </div>\n\n                            <!-- column -->\n                            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                              <mat-form-field>\n                                <textarea matInput placeholder=\"Textarea\"></textarea>\n                              </mat-form-field>\n                            </div>\n                            <!-- column -->\n                            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                              <button mat-raised-button color=\"primary\">Update Profile</button>\n                            </div> \n                        </div>\n                        </form>      \n                    </mat-card-content>\n                </mat-tab>\n            </mat-tab-group>\n        </mat-card>\n    </div>    \n</div>\n","\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { DemoMaterialModule} from '../demo-material-module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { DashboardsRoutes } from './dashboards.routing';\nimport { ChartistModule} from 'ng-chartist';\nimport { ChartsModule } from 'ng2-charts';\n\nimport { Dashboard1Component } from './dashboard1/dashboard1.component';\nimport { Dashboard2Component } from './dashboard2/dashboard2.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\nimport { ChangePasswordDialogComponent } from './change-password-dialog/change-password-dialog.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { ChatComponent } from './chat/chat.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    DemoMaterialModule,\n    FlexLayoutModule,\n    ChartistModule,\n    ChartsModule,\n    RouterModule.forChild(DashboardsRoutes),\n    FormsModule\n  ],\n  declarations: [\n    Dashboard1Component,\n    Dashboard2Component,\n    UserDashboardComponent,\n    ChangePasswordDialogComponent,\n    EditProfileComponent,\n    ChatComponent\n  ],\n  entryComponents: [ChangePasswordDialogComponent]\n})\n\nexport class DashboardsModule {\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { State, Store } from '@ngrx/store';\nimport { UserState } from '../../store/app.state';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ChangePasswordDialogComponent } from '../change-password-dialog/change-password-dialog.component';\nimport { User } from '../../shared/models/user';\nimport { environment } from '../../../environments/environment';\nimport { UserService } from '../services/user.service';\nimport { UserData } from '../../shared/models/user-data';\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css']\n})\nexport class UserDashboardComponent implements OnInit {\n  public userState: User;\n  public storagePath: string;\n  public random_number: number;\n  public userData: UserData = new UserData();\n\n  constructor(\n    private store: Store<any>,\n    public dialog: MatDialog,\n    private userService: UserService,\n  ) { }\n\n  ngOnInit() {\n    this.random_number = Math.floor(Math.random() * (999999 - 100000)) + 100000;\n    this.storagePath = environment.storageUrl;\n    this.store.select(store => store.UserState.user).subscribe(user => {\n      this.userState = user;\n\n      //get user data\n      if(this.userState.id){\n        this.userService.getDashboardData(this.userState.id).subscribe((data: UserData) => {\n          this.userData = data;\n        });\n      }\n    });\n\n  }\n\n  changePass() {\n    let dialogRef = this.dialog.open(ChangePasswordDialogComponent, { width: '40%', height: 'auto', maxHeight: '95%', data: { email: this.userState.email } });\n  }\n\n\n}\n","<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <!-- Card column -->\n  <div fxFlex.gt-lg=\"100\" fxFlex.gt-md=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n      <mat-card class=\"oh text-center little-profile\">\n          <img mat-card-image src=\"assets/images/background/profile-bg.jpg\" alt=\"Arial Image of Male.\" *ngIf=\"!userState.profile.coverimage\">\n          <img mat-card-image src=\"{{storagePath+'profiles/cover/'+userState.profile.coverimage}}?{{random_number}}\" alt=\"Arial Image of Male.\" *ngIf=\"userState.profile.coverimage\">\n        <mat-card-content>\n           <div class=\"pro-img\">\n              <img src=\"{{storagePath+'profiles/default.jpg'}}\" width=\"100\" alt=\"user\" style=\"border: 2px solid #ffffff;\" *ngIf=\"!userState.profile.profilepic\">\n              <img src=\"{{storagePath+'profiles/user/'+userState.profile.profilepic}}\" width=\"100\" alt=\"user\" style=\"border: 2px solid #ffffff;\" *ngIf=\"userState.profile.profilepic\">\n           </div>\n           <h3 class=\"m-b-0\">{{ userState.name | titlecase }}</h3>\n            <h6 class=\"m-t-0 \"><b>login:</b> {{ userState.email }}</h6>\n            <mat-card-actions>\n              <button mat-raised-button color=\"basic\" [routerLink]=\"['/user/profile/edit']\">Edit Profile</button>\n              <button mat-raised-button color=\"basic\" (click)=\"changePass()\">Change Password</button>\n            </mat-card-actions>\n\n            <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" class=\"m-t-30\">\n                <!-- <div fxFlex.gt-sm=\"11.33%\" fxFlex.gt-xs=\"33.33%\" fxFlex=\"100\">\n                      <h3 class=\"m-0 font-light\">1099</h3>\n                      <small>Articles</small>\n                </div> -->\n            </div>\n\n\n            <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" class=\"m-t-30\" *ngIf=\"userState.profile\">\n                <!-- <div fxFlex.gt-sm=\"11.33%\" fxFlex.gt-xs=\"33.33%\" fxFlex=\"100\">\n                      <h3 class=\"m-0 font-light\">1099</h3>\n                      <small>Articles</small>\n                </div> -->\n            </div>\n\n\n        </mat-card-content>\n      </mat-card>\n  </div>\n  <!-- Card column -->\n</div>\n\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\" fxLayoutAlign=\"center start\" class=\"pricing-box\">\n  <div fxFlex.gt-sm=\"30\" fxFlex=\"30\">\n    <div class=\"card-group text-left\" *ngIf=\"userState.profile.id != 'null'\">\n      <mat-card class=\"pricing-plan\">\n        <mat-card-content>\n        <!-- <mat-card-title>{{ userState.name | titlecase }}</mat-card-title> -->\n          <mat-list class=\"profile-listing\">\n            <mat-list-item>Phone: {{ userState.profile.phone }}</mat-list-item>\n            <mat-list-item>Email: {{ userState.profile.email }}</mat-list-item>\n          </mat-list>\n\n\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" class=\"m-t-30 text-center\">\n              <div fxFlex.gt-sm=\"33.33%\" fxFlex.gt-xs=\"33.33%\" fxFlex=\"100\" class=\"social-widget\">\n                  <a href=\"{{ userState.profile.fb }}\" target=\"_blank\" style=\"width: 100%; display: block;\" class=\"soc-header box-facebook\">\n                    <i class=\"fa fa-facebook display-5\"></i>\n                  </a>\n              </div>\n              <div fxFlex.gt-sm=\"33.33%\" fxFlex.gt-xs=\"33.33%\" fxFlex=\"100\" class=\"social-widget\">\n                <a href=\"{{ userState.profile.twitter }}\" target=\"_blank\" style=\"width: 100%; display: block;\" class=\"soc-header box-twitter\">\n                  <i class=\"fa fa-twitter display-5\"></i>\n                </a>\n              </div>\n              <div fxFlex.gt-sm=\"33.33%\" fxFlex.gt-xs=\"33.33%\" fxFlex=\"100\" class=\"social-widget\">\n                <a href=\"{{ userState.profile.insta }}\" target=\"_blank\" style=\"width: 100%; display: block;\" class=\"soc-header box-linkedin\">\n                  <i class=\"fa fa-instagram display-5\"></i>\n                </a>\n              </div>\n          </div>\n        </mat-card-content>\n\n      </mat-card>\n    </div>\n  </div>\n  <div fxFlex.gt-sm=\"70\" fxFlex=\"70\">\n    <div>\n        <!-- {{ userData | json }} -->\n        <mat-card class=\"pricing-plan\">\n            <mat-card-content *ngIf=\"userData.news\">\n              <mat-card-title>My Latest News</mat-card-title>\n\n              <div class=\"table-rasponsive\" *ngIf=\"userData.news\">\n                <div class=\"table\">\n                  <div class=\"table-header\">\n                    <div class=\"header__item column-news_name\">News Name</div>\n                    <div class=\"header__item column-heading\">Heading</div>\n                    <!-- <div class=\"header__item column-journalist\">Journalist</div> -->\n                    <div class=\"header__item column-date\">Date</div>\n                    <div class=\"header__item column-actions\">Actions</div>\n                  </div>\n                  <div class=\"table-content\">\n                    <div class=\"table-row\" *ngFor=\"let lnews of userData.news\" id=\"{{ lnews.id }}\">\n\n                      <div class=\"table-data column-news_name\" >{{ lnews.news_name }}</div>\n\n                      <div class=\"table-data column-heading dhv\" *ngIf=\"lnews.language.language_code === 'Dhv'\">{{ lnews.heading }}</div>\n                      <div class=\"table-data column-heading\" *ngIf=\"lnews.language.language_code != 'Dhv'\">{{ lnews.heading }}</div>\n\n                      <!-- <div class=\"table-data column-journalist\" *ngIf=\"lnews.newsstatus.status != 'breaker'\">{{ lnews.user.name }}</div>\n                      <div class=\"table-data column-journalist\" *ngIf=\"lnews.newsstatus.status == 'breaker'\">&nbsp;</div> -->\n\n                      <div class=\"table-data column-date\" matTooltip=\"{{ lnews.created_at}}\" matTooltipPosition=\"below\" *ngIf=\"lnews.newsstatus.status != 'breaker'\">{{ lnews.created_at | date }}</div>\n                      <div class=\"table-data column-date\" *ngIf=\"lnews.newsstatus.status == 'breaker'\">&nbsp;</div>\n\n                      <div class=\"table-data column-actions\">\n                          <button mat-icon-button color=\"basic\" (click)=\"viewNews(lnews)\" matTooltip=\"View News\" matTooltipPosition=\"below\" *ngIf=\"lnews.newsstatus.status != 'breaker'\">\n                              <mat-icon aria-label=\"view news\">zoom_in</mat-icon>\n                          </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n\n            </mat-card-content>\n          </mat-card>\n\n\n\n    </div>\n  </div>\n</div>\n","import { News } from '../../news/models/news';\n\nexport class UserData{\n  news?: News;\n\n  constructor() {\n    this.news = null;\n  }\n}\n","import { Routes } from '@angular/router';\n\nimport { Dashboard1Component } from './dashboard1/dashboard1.component';\nimport { Dashboard2Component } from './dashboard2/dashboard2.component';\nimport { UserDashboardComponent } from './user-dashboard/user-dashboard.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { ChatComponent } from './chat/chat.component';\n\nexport const DashboardsRoutes: Routes = [\n {\n  path: '',\n  children: [\n    {\n      path: '',\n      component: UserDashboardComponent\n    },\n    {\n      path: 'profile',\n      component: UserDashboardComponent\n    },\n    {\n      path: 'dashboard',\n      component: UserDashboardComponent\n    },\n    {\n      path: 'default1',\n      component: Dashboard1Component\n    },\n    {\n      path: 'default2',\n      component: Dashboard2Component\n    },\n    {\n      path: 'profile/edit',\n      component: EditProfileComponent\n    },\n    {\n      path: 'chat',\n      component: ChatComponent\n    }\n  /*, {\n      path: 'todo',\n      component: TodoComponent\n    }*/]\n  }\n];\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { environment } from './../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private apiUrl = environment.apiUrl;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  checkOldPassword(postStr: { email: string, password: string }) {\n    return this.http.post<any>(this.apiUrl + 'checkpass', postStr);\n  }\n\n  changePassword(postStr: { email: string, oldpassword: string, newpassword: string }) {\n    return this.http.post<any>(this.apiUrl + 'changepass', postStr);\n  }\n\n  getDashboardData(userid) {\n    return this.http.get<any>(this.apiUrl + 'userdata/profile/'+userid);\n  }\n}\n","import { Component, AfterViewInit, ViewChild } from '@angular/core';\n\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as Chartist from 'chartist';\nimport { ChartType, ChartEvent } from \"ng-chartist\";\ndeclare var require: any;\n\nconst data: any = require('./data.json');\n\nexport interface Chart {\n  type: ChartType;\n  data: Chartist.IChartistData;\n  options?: any;\n  responsiveOptions?: any;\n  events?: ChartEvent;\n}\n\n@Component({\n  selector: 'app-dashboard2',\n  templateUrl: './dashboard2.component.html',\n  styleUrls: ['./dashboard2.component.scss'],\n\n})\nexport class Dashboard2Component implements AfterViewInit{\n\n\n    // Barchart\n    barChart1: Chart = {\n        type: 'Bar',\n        data: data['Bar'],\n        options: {\n            seriesBarDistance: 15,\n            high: 12,\n            axisX: {\n                showGrid: false, offset: 20\n            },\n            axisY: {\n                showGrid: true, offset: 40\n            }\n        },\n        responsiveOptions: [\n            [\n                'screen and (min-width: 640px)',\n                {\n                    axisX: {\n                        labelInterpolationFnc: function (value: number, index: number): string {\n                            return index % 1 === 0 ? `${value}` : null;\n                        }\n                    }\n                }\n            ]\n        ]\n    };\n\n\n    // Doughnut\n    public doughnutChartLabels: string[] = [\n        'Desktop',\n        'Mobile',\n        'Tablet'\n    ];\n    public doughnutChartOptions: any = {\n        responsive: false\n    };\n\n    public doughnutChartData: number[] = [350, 450, 100];\n    public doughnutChartType: string = 'doughnut';\n    public doughnutChartLegend: boolean = false;\n\n     ngAfterViewInit(){\n        //Sparkline chart\n        var sparklineLogin = function () {\n            // spark count\n            (<any>$('.spark-count')).sparkline([4, 5, 0, 10, 9, 12, 4, 9, 4, 5, 3, 10, 9, 12, 10, 9, 12, 4, 9], {\n                type: 'bar'\n                , width: '100%'\n                , height: '70'\n                , barWidth: '2'\n                , resize: true\n                , barSpacing: '6'\n                , barColor: 'rgba(255, 255, 255, 0.3)'\n            });\n\n        }\n        var sparkResize;\n        (<any>$(window)).resize(function(e) {\n                clearTimeout(sparkResize);\n                sparkResize = setTimeout(sparklineLogin, 500);\n            });\n        sparklineLogin();\n         /**\n       * Set the paginator after the view init since this component will\n       * be able to query its view for the initialized paginator.\n       */\n         this.dataSource.paginator = this.paginator;\n     }\n\n    // This is for the table\n    displayedColumns = ['position', 'name', 'weight', 'designation'];\n    dataSource = new MatTableDataSource<Element>(ELEMENT_DATA);\n    @ViewChild ( MatPaginator , {static: true}) paginator: MatPaginator;\n    // This is for the comments\n    mycomments: Object[] = [{\n      name: 'James Anderson',\n      content: 'Lorem Ipsum is simply dummy text of the printing and type setting industry. Lorem Ipsum has beenorem Ipsum is simply dummy text of the printing and type setting industry.',\n      profile: 'assets/images/users/1.jpg',\n      status: 'Pending',\n      class: 'info',\n      date: 'April 14, 2016'\n    },{\n      name: 'Michael Jorden',\n      content: 'Lorem Ipsum is simply dummy text of the printing and type setting industry. Lorem Ipsum has beenorem Ipsum is simply dummy text of the printing and type setting industry.',\n      profile: 'assets/images/users/2.jpg',\n      status: 'Approved',\n      class: 'light-success',\n      date: 'April 14, 2016'\n    },{\n      name: 'James Anderson',\n      content: 'Lorem Ipsum is simply dummy text of the printing and type setting industry. Lorem Ipsum has beenorem Ipsum is simply dummy text of the printing and type setting industry.',\n      profile: 'assets/images/users/3.jpg',\n      status: 'Pending',\n      class: 'danger',\n      date: 'April 14, 2016'\n    },{\n      name: 'Johnathan Doeting',\n      content: 'Lorem Ipsum is simply dummy text of the printing and type setting industry. Lorem Ipsum has beenorem Ipsum is simply dummy text of the printing and type setting industry.',\n      profile: 'assets/images/users/1.jpg',\n      status: 'Pending',\n      class: 'info',\n      date: 'April 14, 2016'\n    }];\n\n    // This is for Mymessages\n    mymessages: Object[] = [{\n      useravatar: 'assets/images/users/1.jpg',\n      status: 'online',\n      from: 'Pavan kumar',\n      subject: 'Just see the my admin!',\n      time: '9:30 AM'\n    }, {\n      useravatar: 'assets/images/users/2.jpg',\n      status: 'busy',\n      from: 'Sonu Nigam',\n      subject: 'I have sung a song! See you at',\n      time: '9:10 AM'\n    }, {\n      useravatar: 'assets/images/users/3.jpg',\n      status: 'away',\n      from: 'Arijit Sinh',\n      subject: 'I am a singer!',\n      time: '9:08 AM'\n    },{\n      useravatar: 'assets/images/users/4.jpg',\n      status: 'busy',\n      from: 'Sonu Nigam',\n      subject: 'I have sung a song! See you at',\n      time: '9:10 AM'\n    }, {\n      useravatar: 'assets/images/users/6.jpg',\n      status: 'away',\n      from: 'Arijit Sinh',\n      subject: 'I am a singer!',\n      time: '9:08 AM'\n    },{\n      useravatar: 'assets/images/users/7.jpg',\n      status: 'busy',\n      from: 'Sonu Nigam',\n      subject: 'I have sung a song! See you at',\n      time: '9:10 AM'\n    }, {\n      useravatar: 'assets/images/users/8.jpg',\n      status: 'away',\n      from: 'Arijit Sinh',\n      subject: 'I am a singer!',\n      time: '9:08 AM'\n    }, {\n      useravatar: 'assets/images/users/6.jpg',\n      status: 'offline',\n      from: 'Pavan kumar',\n      subject: 'Just see the my admin!',\n      time: '9:00 AM'\n    }];\n\n}\nexport interface Element {\n  name: string;\n  position: string;\n  weight: number;\n  designation: string;\n}\n\nconst ELEMENT_DATA: Element[] = [\n  {position: 'assets/images/users/1.jpg', name: 'Nirav joshi', weight: 1.0079, designation: 'H'},\n  {position: 'assets/images/users/2.jpg', name: 'Sunil joshi', weight: 4.0026, designation: 'He'},\n  {position: 'assets/images/users/3.jpg', name: 'Vishal Bhatt', weight: 6.941, designation: 'Li'},\n  {position: 'assets/images/users/4.jpg', name: 'Beryllium Lon', weight: 9.0122, designation: 'Be'},\n  {position: 'assets/images/users/5.jpg', name: 'Boron son', weight: 10.811, designation: 'B'},\n  {position: 'assets/images/users/6.jpg', name: 'Carbon hryt', weight: 12.0107, designation: 'C'},\n  {position: 'assets/images/users/7.jpg', name: 'Nitro oxur', weight: 14.0067, designation: 'N'},\n  {position: 'assets/images/users/8.jpg', name: 'Oxyg rigch', weight: 15.9994, designation: 'O'},\n];\n","<!-- ============================================================== -->\n<!-- Card Group Row -->\n<!-- ============================================================== -->\n<div class=\"card-group\">\n  <!-- column -->\n\n    <mat-card>\n      <mat-card-content>\n          <!-- column -->\n          <mat-icon class=\"text-info\">account_circle</mat-icon>\n          <h3 class=\"m-0\">386</h3>\n          <h5 class=\"text-muted m-t-0 m-b-10\">New Clients</h5>\n          <mat-progress-bar mode=\"determinate\" value=\"40\"></mat-progress-bar>\n      </mat-card-content>\n    </mat-card>\n\n  <!-- column -->\n  <!-- column -->\n\n    <mat-card>\n      <mat-card-content>\n          <!-- column -->\n          <mat-icon class=\"text-danger\">local_mall</mat-icon>\n          <h3 class=\"m-0\">1386</h3>\n          <h5 class=\"text-muted m-t-0 m-b-10\">New Projects</h5>\n          <mat-progress-bar color=\"warn\" mode=\"determinate\" value=\"60\"></mat-progress-bar>\n      </mat-card-content>\n    </mat-card>\n\n  <!-- column -->\n  <!-- column -->\n\n    <mat-card>\n      <mat-card-content>\n          <!-- column -->\n          <mat-icon class=\"text-purple\">stars</mat-icon>\n          <h3 class=\"m-0\">986</h3>\n          <h5 class=\"text-muted m-t-0 m-b-10\">New Items</h5>\n          <mat-progress-bar color=\"accent\" mode=\"determinate\" value=\"80\"></mat-progress-bar>\n      </mat-card-content>\n    </mat-card>\n\n  <!-- column -->\n  <!-- column -->\n\n    <mat-card>\n      <mat-card-content>\n          <!-- column -->\n          <mat-icon class=\"text-info\">content_paste</mat-icon>\n          <h3 class=\"m-0\">786</h3>\n          <h5 class=\"text-muted m-t-0  m-b-10\">New Invoices</h5>\n          <mat-progress-bar mode=\"indeterminate\" value=\"40\"></mat-progress-bar>\n      </mat-card-content>\n    </mat-card>\n\n  <!-- column -->\n</div>\n<!-- ============================================================== -->\n<!-- Chart boxes -->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <!-- column -->\n  <div fxFlex.gt-md=\"33.33\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n        <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n            <mat-card class=\"bg-success\">\n              <mat-card-content>\n                  <!-- column -->\n                  <div class=\"d-flex p-t-20 p-b-20 no-block align-items-center\">\n                    <div class=\"stats\">\n                        <h3 class=\"text-white m-0\">Sales</h3>\n                        <h6 class=\"text-white m-t-0\">March 2018</h6>\n                        <h1 class=\"text-white m-0\">35487</h1>\n                    </div>\n                    <div class=\"spark-count ml-auto\"></div>\n                  </div>\n              </mat-card-content>\n            </mat-card>\n        </div>\n    </div>\n    <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n        <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n            <mat-card class=\"bg-purple\">\n              <mat-card-content >\n                  <!-- column -->\n                  <div class=\"d-flex p-t-20 p-b-20 no-block align-items-center\">\n                    <div class=\"stats\">\n                        <h3 class=\"text-white m-0\">Purchase</h3>\n                        <h6 class=\"text-white m-t-0\">March 2018</h6>\n                        <h1 class=\"text-white m-0\">35487</h1>\n                    </div>\n                    <div class=\"spark-count ml-auto\"></div>\n                  </div>\n              </mat-card-content>\n            </mat-card>\n        </div>\n      </div>\n  </div>\n  <!-- column -->\n  <!-- column -->\n  <div fxFlex.gt-md=\"33.33\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-content>\n          <!-- column -->\n          <mat-card-title>Our Visitors</mat-card-title>\n          <mat-card-subtitle>Different Devices Used to Visit</mat-card-subtitle>\n          <div class=\"text-center\">\n          <canvas baseChart class=\"m-auto\" width=\"230\" height=\"230\" [data]=\"doughnutChartData\" [labels]=\"doughnutChartLabels\" [legend]=\"doughnutChartLegend\" [options]=\"doughnutChartOptions\" [chartType]=\"doughnutChartType\" [colors]=\"[{backgroundColor: ['#1976d2', '#26dad2', '#dadada']}]\"></canvas>\n        </div>\n      </mat-card-content><hr>\n      <mat-card-content>\n            <ul class=\"list-inline text-center\">\n                <li><h6 class=\"text-muted text-success m-0\"><i class=\"fa fa-circle font-10 m-r-10 \"></i>Mobile</h6> </li>\n                <li><h6 class=\"text-muted  text-info  m-0\"><i class=\"fa fa-circle font-10 m-r-10\"></i>Desktop</h6> </li>\n                <li><h6 class=\"text-muted  text-purple  m-0\"><i class=\"fa fa-circle font-10 m-r-10\"></i>Tablet</h6> </li>\n            </ul>\n          </mat-card-content>\n    </mat-card>\n  </div>\n  <!-- column -->\n  <!-- column -->\n  <div fxFlex.gt-md=\"33.33\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-content>\n          <!-- column -->\n          <mat-card-title>Sales Yealry</mat-card-title>\n          <mat-card-subtitle>This is the simple example of bar chart</mat-card-subtitle>\n          <div class=\"barchrt\" style=\"height:325px;\">\n          <x-chartist class=\"\" [data]=\"barChart1.data\" [type]=\"barChart1.type\" [options]=\"barChart1.options\" [responsiveOptions]=\"barChart1.responsiveOptions\" [events]=\"barChart1.events\"> </x-chartist>\n          </div>\n      </mat-card-content>\n    </mat-card>\n  </div>\n  <!-- column -->\n\n  <!-- column -->\n</div>\n<!-- ============================================================== -->\n<!-- Image and chart -->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <!-- Column-->\n    <div fxFlex.gt-lg=\"25\" fxFlex.gt-md=\"40\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n        <mat-card class=\"oh text-center little-profile\">\n          <img mat-card-image src=\"assets/images/background/profile-bg.jpg\" alt=\"Photo of a Shiba Inu\">\n          <mat-card-content>\n             <div class=\"pro-img\"><img src=\"assets/images/users/4.jpg\" width=\"100\" alt=\"user\"></div>\n             <h3 class=\"m-b-0\">Angela Dominic</h3>\n              <h6 class=\"m-t-0 \">Web Designer &amp; Developer</h6>\n              <mat-card-actions>\n                <button mat-raised-button color=\"warn\">Follow</button>\n              </mat-card-actions>\n              <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" class=\"m-t-30\">\n                  <div fxFlex.gt-sm=\"33.33%\" fxFlex.gt-xs=\"33.33%\" fxFlex=\"100\">\n                        <h3 class=\"m-0 font-light\">1099</h3>\n                        <small>Articles</small>\n                  </div>\n                  <div fxFlex.gt-sm=\"33.33%\" fxFlex.gt-xs=\"33.33%\" fxFlex=\"100\">\n                        <h3 class=\"m-0 font-light\">23,469</h3>\n                        <small>Followers</small>\n                  </div>\n                  <div fxFlex.gt-sm=\"33.33%\" fxFlex.gt-xs=\"33.33%\" fxFlex=\"100\">\n                        <h3 class=\"m-0 font-light\">6035</h3>\n                        <small>Likes</small>\n                  </div>\n              </div>\n          </mat-card-content>\n        </mat-card>\n    </div>\n    <!-- Column-->\n    <div fxFlex.gt-lg=\"75\" fxFlex.gt-md=\"60\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n        <mat-card>\n          <mat-card-content>\n              <mat-card-title>Contact list</mat-card-title>\n              <mat-card-subtitle>Overview of Newsletter Campaign</mat-card-subtitle>\n              <mat-table #table [dataSource]=\"dataSource\" class=\"contactlist\">\n                    <!--- Note that these columns can be defined in any order.\n                          The actual rendered columns are set as a property on the row definition\" -->\n\n                    <!-- Position Column -->\n                    <ng-container matColumnDef=\"position\" >\n                      <mat-header-cell *matHeaderCellDef> Pic </mat-header-cell>\n                      <mat-cell *matCellDef=\"let element\"> <img src=\"{{element.position}}\" class=\"img-circle\" width=\"30\"/></mat-cell>\n                    </ng-container>\n\n                    <!-- Name Column -->\n                    <ng-container matColumnDef=\"name\">\n                      <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n                      <mat-cell *matCellDef=\"let element\"> <h5 class=\"m-0\">{{element.name}}</h5> {{element.weight}} </mat-cell>\n                    </ng-container>\n\n                    <!-- Weight Column -->\n                    <ng-container matColumnDef=\"weight\">\n                      <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\n                      <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\n                    </ng-container>\n\n                    <!-- Symbol Column -->\n                    <ng-container matColumnDef=\"designation\">\n                      <mat-header-cell *matHeaderCellDef> Designation </mat-header-cell>\n                      <mat-cell *matCellDef=\"let element\"> {{element.designation}} </mat-cell>\n                    </ng-container>\n\n                    <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n                    <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n                  </mat-table>\n                   <mat-paginator #paginator\n                                 [pageSize]=\"5\"\n                                 [pageSizeOptions]=\"[5, 10, 20]\">\n                  </mat-paginator>\n          </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n<!-- ============================================================== -->\n<!-- Image Card row-->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <!-- Card column -->\n    <div fxFlex.gt-lg=\"50\" fxFlex.gt-md=\"50\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n            <mat-card-title>Recent Comments</mat-card-title>\n            <mat-card-subtitle>Latest Comments on users from Material</mat-card-subtitle>\n            <div class=\"comment-widgets\">\n                <!-- Comment Row -->\n                <div class=\"d-flex flex-row comment-row\" *ngFor=\"let mycomment of mycomments\">\n                    <div class=\"p-2\"><span class=\"round\"><img src=\"{{mycomment.profile}}\" alt=\"user\" width=\"50\"></span></div>\n                    <div class=\"comment-text w-100\">\n                        <h5 class=\"m-0\">{{mycomment.name}}</h5>\n                        <p class=\"m-b-5\">{{mycomment.content}}</p>\n                        <div class=\"comment-footer\">\n                            <span class=\"text-muted pull-right\">{{mycomment.date}}</span>\n                            <span class=\"label label-{{mycomment.class}}\">{{mycomment.status}}</span>\n                            <span class=\"action-icons\">\n                               <a href=\"javascript:void(0)\"><i class=\"ti-pencil-alt\"></i></a>\n                               <a href=\"javascript:void(0)\"><i class=\"ti-check\"></i></a>\n                               <a href=\"javascript:void(0)\"><i class=\"ti-heart\"></i></a>\n                            </span>\n                        </div>\n                    </div>\n               </div>\n            </div>\n            </mat-card-content>\n        </mat-card>\n    </div>\n    <!-- Card column -->\n    <!-- Card column -->\n    <div fxFlex.gt-lg=\"50\" fxFlex.gt-md=\"50\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n        <mat-card>\n            <mat-card-content>\n                <mat-card-title>Recent Messages</mat-card-title>\n                <mat-card-subtitle>Latest Messages on users from Material</mat-card-subtitle>\n                <div class=\"mailbox message-widget\">\n                    <div class=\"message-center\">\n                        <a href=\"#\" *ngFor=\"let mymessage of mymessages\">\n                            <div class=\"user-img\"> <img src=\"{{mymessage.useravatar}}\" alt=\"user\" class=\"img-circle\" width=\"40\">\n                                <span class=\"profile-status {{mymessage.status}} pull-right\"></span>\n                            </div>\n                            <div class=\"mail-content\">\n                                <h5>{{mymessage.from}}</h5>\n                                <span class=\"mail-desc\">{{mymessage.subject}}</span>\n                                <span class=\"time\">{{mymessage.time}}</span>\n                            </div>\n                        </a>\n                    </div>\n                </div>\n\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Profile, User } from '../../shared/models/user';\nimport { Store } from '@ngrx/store';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from './../../../environments/environment';\nimport * as userActions from '../../authentication/store/user.actions';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n  public userState: User;\n\n  public formData = new FormData();\n\n  constructor(\n    private store: Store<any>,\n    private http: HttpClient,\n    private router: Router\n    ) { }\n\n  ngOnInit() {\n    this.store.select(store => store.UserState.user).subscribe(user => {\n      this.userState = user;\n      if(!this.userState.profile.id){\n        this.userState.profile = new Profile();\n      }\n\n    });\n  }\n\n  uploadFile(event, image: string){\n    let elem = event.target;\n    if(elem.files.length > 0){\n      if(image === 'pp'){\n        this.formData.set('profilepic', elem.files[0]);\n      }else if(image === 'cp'){\n        this.formData.set('coverimage', elem.files[0]);\n      }\n    }\n  }\n\n  appendForm(key:string, event) {\n    // switch(key){\n    //   case 'email':\n    //     this.formData.set('email', event.value);\n    //   break;\n    // }\n\n    console.log(event)\n  }\n\n  updateProfile() {\n\n    this.formData.append('user_id', this.userState.profile.user_id);\n    this.formData.append('dob', this.userState.profile.dob);\n    this.formData.append('gender', this.userState.profile.gender);\n    this.formData.append('fb', this.userState.profile.fb);\n    this.formData.append('insta', this.userState.profile.insta);\n    this.formData.append('twitter', this.userState.profile.twitter);\n    this.formData.append('email', this.userState.profile.email);\n    this.formData.append('phone', this.userState.profile.phone);\n\n    return this.http.post<any>(environment.apiUrl + 'updateprofile/', this.formData).subscribe(response => {\n      if(response === 200){\n        //update session\n        this.store.dispatch(new userActions.ServerGetUserSettings());\n        this.router.navigate(['/user/profile']);\n      }\n    })\n  }\n\n}\n","<!-- ============================================================== -->\n<!-- Card Grid-->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n      <mat-card>\n          <mat-card-content>\n              <mat-card-title>Edit Profile</mat-card-title>\n              <!-- ============================================================== -->\n              <!-- column -->\n              <!-- ============================================================== -->\n              <form class=\"basic-form m-t-40\" #profileForm=\"ngForm\">\n              <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n                  <!-- column -->\n                  <div fxFlex.gt-md=\"45\" fxFlex=\"45\">\n                    <mat-form-field>\n                      <input matInput placeholder=\"Name\" name=\"name\" required [(ngModel)]=\"userState.name\" disabled>\n                    </mat-form-field>\n                  </div>\n\n                  <div fxFlex.gt-sm=\"5\" fxFlex=\"5\" class=\"m-b-20\"></div>\n\n                  <!-- column -->\n                  <div fxFlex.gt-sm=\"15\" fxFlex=\"15\" class=\"m-t-30 m-b-20\">\n                    <mat-radio-group name=\"gender\" [(ngModel)]=\"userState.profile.gender\" required>\n                      <mat-radio-button color=\"primary\" [value]=\"1\" [checked]=\"userState.profile.gender == '1'\" class=\"m-r-10\" (change)=\"appendForm('gender', $event)\">Male</mat-radio-button>\n                      <mat-radio-button color=\"warn\" [value]=\"2\" [checked]=\"userState.profile.gender == '2'\" class=\"m-r-10\" (change)=\"appendForm('gender', $event)\">Female</mat-radio-button>\n                    </mat-radio-group>\n                  </div>\n\n                  <div fxFlex.gt-sm=\"35\" fxFlex=\"35\" class=\"m-b-20\"></div>\n\n\n\n\n                  <!-- column -->\n                  <div fxFlex.gt-sm=\"45\" fxFlex=\"45\">\n                    <mat-form-field>\n                      <input matInput required [matDatepicker]=\"picker\" placeholder=\"Choose date of birth\" name=\"dob\" [(ngModel)]=\"userState.profile.dob\" (ngModelChange)=\"appendForm('dob', $event)\">\n                      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                      <mat-datepicker #picker></mat-datepicker>\n                    </mat-form-field>\n                  </div>\n\n                  <div fxFlex.gt-sm=\"5\" fxFlex=\"5\" class=\"m-b-20\"></div>\n\n                  <!-- column -->\n                  <div fxFlex.gt-sm=\"45\" fxFlex=\"45\">\n                    <mat-form-field>\n                      <input matInput required placeholder=\"EmailId\" type=\"email\" name=\"email\" [(ngModel)]=\"userState.profile.email\" (ngModelChange)=\"appendForm('email', $event)\">\n                    </mat-form-field>\n                  </div>\n\n                  <div fxFlex.gt-sm=\"5\" fxFlex=\"5\" class=\"m-b-20\"></div>\n\n\n\n                  <!-- column -->\n                  <div fxFlex.gt-sm=\"45\" fxFlex=\"45\" class=\"m-b-20\">\n                    <p>Profile Picture</p>\n                    <input class=\"form-control b-b\" placeholder=\"Profile Picture\" type=\"file\" (change)=\"uploadFile($event, 'pp')\">\n                  </div>\n                  <div fxFlex.gt-sm=\"5\" fxFlex=\"5\" class=\"m-b-20\"></div>\n                  <!-- column -->\n                  <div fxFlex.gt-sm=\"45\" fxFlex=\"45\" class=\"m-b-20\">\n                    <p>Cover Image</p>\n                    <input class=\"form-control b-b\" placeholder=\"Cover Image\" type=\"file\" (change)=\"uploadFile($event, 'cp')\">\n                  </div>\n                  <div fxFlex.gt-sm=\"5\" fxFlex=\"5\" class=\"m-b-20\"></div>\n\n\n\n\n                  <!-- column -->\n                  <div fxFlex.gt-sm=\"45\" fxFlex=\"45\">\n                      <mat-form-field>\n                        <input matInput required placeholder=\"Facebook Id\" type=\"text\" name=\"fb\" [(ngModel)]=\"userState.profile.fb\" (ngModelChange)=\"appendForm('fb', $event)\">\n                      </mat-form-field>\n                  </div>\n\n                  <div fxFlex.gt-sm=\"5\" fxFlex=\"5\" class=\"m-b-20\"></div>\n                  <!-- column -->\n                  <div fxFlex.gt-sm=\"45\" fxFlex=\"45\">\n                      <mat-form-field>\n                        <input matInput required placeholder=\"Twitter Id\" type=\"text\" name=\"twitter\" [(ngModel)]=\"userState.profile.twitter\" (ngModelChange)=\"appendForm('twitter', $event)\">\n                      </mat-form-field>\n                  </div>\n\n                  <div fxFlex.gt-sm=\"5\" fxFlex=\"5\" class=\"m-b-20\"></div>\n\n\n\n\n                  <!-- column -->\n                  <div fxFlex.gt-sm=\"45\" fxFlex=\"45\">\n                      <mat-form-field>\n                        <input matInput required placeholder=\"Instagram Id\" type=\"text\" name=\"insta\" [(ngModel)]=\"userState.profile.insta\" (ngModelChange)=\"appendForm('insta', $event)\">\n                      </mat-form-field>\n                  </div>\n\n                  <div fxFlex.gt-sm=\"5\" fxFlex=\"5\" class=\"m-b-20\"></div>\n                  <!-- column -->\n                  <div fxFlex.gt-sm=\"45\" fxFlex=\"45\">\n                      <mat-form-field>\n                        <input matInput required placeholder=\"Phone Number\" type=\"text\" name=\"phone\" [(ngModel)]=\"userState.profile.phone\" (ngModelChange)=\"appendForm('phone', $event)\">\n                      </mat-form-field>\n                  </div>\n\n                  <div fxFlex.gt-sm=\"5\" fxFlex=\"5\" class=\"m-b-20\"></div>\n\n\n\n\n                  <!-- column -->\n                  <!-- <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                    <code>{{formData|json}}</code>\n                  </div> -->\n\n\n                  <!-- column -->\n                  <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" align=\"right\">\n                      <button mat-raised-button color=\"basic\" routerLink=\"/user/profile\" class=\"m-r-10 m-t-40\">Cancel</button>\n                      <button mat-raised-button color=\"primary\" (click)=\"updateProfile()\">Save</button>\n                  </div>\n              </div>\n              </form>\n          </mat-card-content>\n      </mat-card>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\nimport { User } from '../../shared/models/user';\nimport { environment } from '../../../environments/environment';\nimport { Store } from '@ngrx/store';\nimport { DsService } from '../../shared/services/ds.service';\nimport { element } from 'protractor';\ndeclare var deepstream: any;\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.scss']\n})\nexport class ChatComponent implements OnInit {\n\n  public userData: User = new User();\n  storagePath: string = null;\n  title = 'deepChat';\n  username: string = null;\n  public chatMessage: string = '';\n  chats;\n  chatArray = [];\n  @ViewChild('messagesDiv', {static: true}) myScrollContainer: ElementRef;\n\n\n\n  them;\n  user;\n  sidePanelOpened = true;\n\n  constructor(\n    private ds: DsService,\n    private store: Store<any>,\n  ) {\n  }\n\n  ngOnInit() {\n    this.storagePath = environment.storageUrl;\n    this.store.select(store => store.UserState).subscribe(userdata => {\n      this.userData = userdata.user;\n      this.chantInit();\n\n    this.scrollToBottom();\n    });\n  }\n\n  isOver(): boolean {\n    return window.matchMedia(`(max-width: 960px)`).matches;\n  }\n\n\n  chantInit(){\n    this.username = this.userData.email;\n    // Login without credentials\n    this.ds.login(null, this.loginHandler);\n\n\n    this.chats = this.ds.getList('chats');\n\n    this.chats.subscribe(msg => {\n      console.log(msg)\n      msg.forEach(element => {\n\n        this.ds.getRecord(element).subscribe((m) => {\n          console.log(m)\n          this.chatArray.push(m);\n\n          this.scrollToBottom();\n        });\n      });\n    });\n\n\n    // this.chats.on('entry-added', recordName => {\n    //   this.ds.getRecord( recordName ).whenReady( record => {\n    //     record.subscribe( (data) => {\n    //       if(data.username && data.text) {\n    //         // Update bindable property\n    //         this.chatArray.push(data);\n    //         console.log(this.chatArray)\n    //       }\n    //     }, true );\n    //   });\n    // })\n  }\n\n\n  loginHandler(success, data) {\n    console.log('logged in', success, data);\n  }\n\n  private scrollToBottom() {\n    this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight + 20;\n    console.log(this.myScrollContainer.nativeElement.scrollHeight)\n  }\n\n  sendMessage() {\n    const recordName = 'chat/' + this.ds.dsInstance.getUid();\n    //const recordName = 'chat/' + this.userData.id;\n\n    const chatRecord = this.ds.getRecord(recordName);\n    chatRecord.set({uid: this.userData.id ,username: this.username, text: this.chatMessage, userimage: this.userData.profile.profilepic, date: new Date()});\n    this.chatMessage = '';\n    // Update the chats list\n    this.chats.addEntry(recordName);\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { Store } from '@ngrx/store';\nimport { Actions } from '@ngrx/effects';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'change-password-dialog',\n  templateUrl: './change-password-dialog.component.html',\n  styleUrls: ['./change-password-dialog.component.css']\n})\n\nexport class ChangePasswordDialogComponent implements OnInit {\n  onAdd = new EventEmitter();\n  password = {\n    oldpassword: '',\n    oldpasswordmsg: [\n      { id: 1, show: false, msg: 'Please enter old password!' },\n      { id: 2, show: false, msg: 'Incorrect old password!' },\n    ],\n    newpassword: '',\n    newpasswordmsg: [\n      { id: 1, show: false, msg: 'Password must contain at least 8 characters!' },\n      { id: 2, show: false, msg: '' },\n      { id: 3, show: false, msg: 'Passwords do not match!' },\n    ],\n    confirmnewpassword: '',\n    confirmnewpasswordmsg: [\n      { id: 1, show: false, msg: 'Password must contain at least 8 characters!' },\n      { id: 2, show: false, msg: 'Passwords do not match!' },\n    ]\n  };\n  oldPassOk = false;\n  passwordValid = false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ChangePasswordDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: { email: string },\n    private store: Store<any>,\n    private updates$: Actions,\n    private userService: UserService,\n    public snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {}\n\n  checkPass(event: any) {\n    let err = false;\n    if (this.password.oldpassword.length === 0){\n      this.password.oldpasswordmsg[0].show = true;\n      err = true;\n    } else {\n      this.password.oldpasswordmsg[0].show = false;\n      err = false;\n    }\n\n    if(!err){\n      this.userService.checkOldPassword({ email: this.data.email, password: this.password.oldpassword }).subscribe(response => {\n        if(response === 403) {\n          this.password.oldpasswordmsg[1].show = true;\n          this.oldPassOk = false;\n        } else if(response === 200) {\n          this.password.oldpasswordmsg[1].show = false;\n          this.oldPassOk = true;\n        }\n        this.checkPasswordValidity();\n      })\n    }\n    this.checkPasswordValidity();\n  }\n\n  checkNewPass(e?: any) {\n    if(this.password.newpassword.length < 8){\n      this.password.newpasswordmsg[0].show = true;\n    } else {\n      this.password.newpasswordmsg[0].show = false;\n    }\n\n    if(this.password.confirmnewpassword.length > 0){\n      if(this.password.confirmnewpassword != this.password.newpassword){\n        this.password.confirmnewpasswordmsg[1].show = true;\n        this.password.newpasswordmsg[2].show = true;\n      } else {\n        this.password.confirmnewpasswordmsg[1].show = false;\n        this.password.newpasswordmsg[2].show = false;\n      }\n    }\n    this.checkPasswordValidity();\n  }\n\n  checkConfirmPass(e?: any) {\n    if(this.password.confirmnewpassword.length < 8){\n      this.password.confirmnewpasswordmsg[0].show = true;\n    } else {\n      this.password.confirmnewpasswordmsg[0].show = false;\n    }\n\n    if(this.password.confirmnewpassword != this.password.newpassword){\n      this.password.confirmnewpasswordmsg[1].show = true;\n      this.password.newpasswordmsg[2].show = true;\n    } else {\n      this.password.confirmnewpasswordmsg[1].show = false;\n      this.password.newpasswordmsg[2].show = false;\n    }\n    this.checkPasswordValidity();\n  }\n\n  checkPasswordValidity() {\n    if(this.oldPassOk){\n      if(this.password.confirmnewpassword.length > 0 && this.password.newpassword.length > 0){\n        if(this.password.confirmnewpassword === this.password.newpassword){\n          this.passwordValid = true;\n        }else{\n          this.passwordValid =  false;\n        }\n      }else{\n        this.passwordValid =  false;\n      }\n    }else{\n      this.passwordValid =  false;\n    }\n  }\n\n  changePassword() {\n    if(this.passwordValid) {\n      this.userService.changePassword({ email: this.data.email, oldpassword: this.password.oldpassword, newpassword: this.password.newpassword }).subscribe(response => {\n        this.dialogRef.close(true);\n        if(response === 200){\n          this.openSnackBar('Password Updated!');\n        }else if(response === 403){\n          this.openSnackBar('Unauthorized! pleasse check your old password and try again!');\n        }else if(response === 500){\n          this.openSnackBar('Unable to change password at this time, please try later!');\n        }\n      });\n    }\n  }\n\n  openSnackBar(message: string, action: string= 'close') {\n    this.snackBar.open(message, action, {\n      duration: 1000,\n    });\n  }\n\n  addUser() {\n    this.onAdd.emit();\n    this.dialogRef.close(true);\n  }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n}\n","<h3 mat-dialog-title>Change Password</h3>\n<form class=\"basic-form\" #userForm=\"ngForm\">\n  <div mat-dialog-content>\n\n      <div style=\"margin-top:20px;\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n            <div *ngFor=\"let msg of password.oldpasswordmsg\">\n              <small *ngIf=\"msg.show\" class=\"text-danger font-14\">{{msg.msg}}</small>\n            </div>\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Current Password</mat-label>\n              <input type=\"password\" matInput mat-autosize required name=\"oldpass\" (focusout)=\"checkPass($event)\" [(ngModel)]=\"password.oldpassword\">\n            </mat-form-field>\n          </div>\n      </div>\n\n      <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n            <div *ngFor=\"let msg of password.newpasswordmsg\">\n              <small *ngIf=\"msg.show\" class=\"text-danger font-14\">{{msg.msg}}</small>\n            </div>\n            <mat-form-field appearance=\"outline\">\n              <mat-label>New Password</mat-label>\n              <input type=\"password\" matInput mat-autosize required name=\"newpass\" (focusout)=\"checkNewPass($event)\" [(ngModel)]=\"password.newpassword\">\n            </mat-form-field>\n          </div>\n      </div>\n\n      <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n            <div *ngFor=\"let msg of password.confirmnewpasswordmsg\">\n              <small *ngIf=\"msg.show\" class=\"text-danger font-14\">{{msg.msg}}</small>\n            </div>\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Confirm new Password</mat-label>\n              <input type=\"password\" matInput mat-autosize required name=\"confirmnewpass\" (focusout)=\"checkConfirmPass($event)\" [(ngModel)]=\"password.confirmnewpassword\">\n            </mat-form-field>\n          </div>\n      </div>\n\n      <!-- <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n              <code>{{user|json}}</code>\n          </div>\n      </div> -->\n\n  </div>\n  <!-- actions column -->\n  <div mat-dialog-actions align=\"end\">\n    <button mat-button color=\"basic\" (click)=\"closeDialog(true)\">Cancel</button>\n    <button mat-raised-button color=\"primary\" (click)=\"changePassword()\" [disabled]=\"!passwordValid\">Change Password</button>\n    <!-- <button mat-button color=\"basic\" *ngIf=\"data.newsstatus.status != 'published' && data.newsstatus.status != 'deleted'\" routerLink=\"/news/{{data.id}}\" (click)=\"closeDialog(true)\">Edit</button> -->\n  </div>\n\n</form>\n"]}