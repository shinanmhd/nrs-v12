{"version":3,"sources":["./node_modules/rxjs/_esm2015/internal/observable/interval.js","./node_modules/rxjs/_esm2015/internal/operators/count.js","./src/app/news/add-ticker-dialog/add-ticker-dialog.component.ts","./src/app/news/add-ticker-dialog/add-ticker-dialog.component.html","./src/app/news/services/news.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAA2C;AACA;AACG;AACvC,0CAA0C,mDAAK;AACtD,SAAS,0DAAS;AAClB;AACA;AACA;AACA,oBAAoB,mDAAK;AACzB;AACA,eAAe,mDAAU;AACzB,6DAA6D,iCAAiC;AAC9F;AACA,KAAK;AACL;AACA;AACA,WAAW,8BAA8B;AACzC;AACA,mBAAmB,2CAA2C;AAC9D;AACA,oC;;;;;;;;;;;;;;;;ACpB2C;AACpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CuF;AACd;AACpB;AAEjB;AACiB;;;;;;;;;;AAM9C,MAAM,wBAAwB;IAMnC,YACS,SAAiD,EACxB,IAAS,EACjC,KAAiB;QAFlB,cAAS,GAAT,SAAS,CAAwC;QACxB,SAAI,GAAJ,IAAI,CAAK;QACjC,UAAK,GAAL,KAAK,CAAY;QAR3B,UAAK,GAAG,IAAI,uDAAY,EAAE,CAAC;QAE3B,WAAM,GAAG,IAAI,gDAAM,EAAE,CAAC;QACN,mBAAc,GAAG,IAAI,CAAC;IAMlC,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC;IAC1B,CAAC;IAED,WAAW,CAAC,YAAqB;QAC/B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;IACrC,CAAC;IAED,KAAK;QACH,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACvB,mCAAmC;QACnC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,0DAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;QAC5D,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;IACpB,CAAC;;gGA1BU,wBAAwB,uMAQzB,qEAAe;sHARd,wBAAwB;QCXrC,wEAAqB;QAAA,yEAAc;QAAA,4DAAK;QAExC,yEAAwB;QAatB,yEAAiE;QAC7D,yEAAqC;QACnC,oFAAqC;QACnC,4EAAW;QAAA,sEAAW;QAAA,4DAAY;QAClC,8EAGoB;QADlB,iMAAyB;QAF3B,4DAGoB;QACtB,4DAAiB;QACnB,4DAAM;QACV,4DAAM;QAEN,0EAAwC;QACpC,0EAAqC;QACnC,qFAAqC;QACnC,6EAAW;QAAA,qEAAS;QAAA,4DAAY;QAChC,+EAGoB;QADlB,uMAA8B;QAFhC,4DAGoB;QACtB,4DAAiB;QACnB,4DAAM;QACV,4DAAM;QAQR,4DAAM;QAEN,0EAAgD;QAC9C,6EAA6D;QAA5B,iJAAS,gBAAY,IAAI,CAAC,IAAC;QAAC,kEAAM;QAAA,4DAAS;QAC5E,8EAA4D;QAAlB,iJAAS,WAAO,IAAC;QAAC,+DAAG;QAAA,4DAAS;QAG1E,4DAAM;;QAhCM,0DAAwB;QAAxB,iFAAwB;QAYxB,0DAAwB;QAAxB,iFAAwB;;;;;;;;;;;;;;;;;;;;AC/BuC;AAGT;;;AAM3D,MAAM,WAAW;IAGtB,YACU,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHlB,WAAM,GAAG,yEAAkB,CAAC;IAIhC,CAAC;IAEL,oBAAoB;IACpB,YAAY;QACV,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,CAAC;IAC5D,CAAC;IAED,wDAAwD;IACxD,MAAM,CAAE,UAAkB,EAAE,EAAE,OAAe,CAAC;QAC5C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,MAAM,GAAG,MAAM,EAAE;YAC9C,MAAM,EAAE,IAAI,4DAAU,EAAE;iBACrB,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC;iBACpC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;SAChC,CAAC,CAAC;IACL,CAAC;IAED,gEAAgE;IAChE,SAAS,CAAE,UAAkB,EAAE,EAAE,OAAe,CAAC;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,MAAM,GAAG,YAAY,EAAE;YACpD,MAAM,EAAE,IAAI,4DAAU,EAAE;iBACrB,GAAG,CAAC,WAAW,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC;iBACpC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;SAChC,CAAC,CAAC;IACL,CAAC;IAED,mCAAmC;IACnC,OAAO,CAAE,EAAU;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,uCAAuC;IACvC,QAAQ,CAAE,SAAe;QACvB,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,iCAAiC,EAAC,CAAC,CAAC;QAErF,SAAS,CAAC,aAAa,GAAG,CAAC,CAAC;QAC5B,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,MAAM,GAAG,MAAM,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACnF,CAAC;IAED,iBAAiB;IACjB,WAAW,CAAE,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,MAAM,GAAG,eAAe,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;IACtE,CAAC;IAED,iBAAiB;IACjB,WAAW,CAAE,EAAU;QACrB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,iBAAiB;IACjB,kBAAkB,CAAE,EAAU;QAC5B,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,IAAI,CAAC,MAAM,GAAG,eAAe,GAAG,EAAE,CAAC,CAAC;IACnE,CAAC;IAED,qBAAqB;IACrB,UAAU,CAAE,EAAU;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,IAAI,CAAC,MAAM,GAAG,WAAW,GAAG,EAAE,CAAC,CAAC;IAC/D,CAAC;IAED,yBAAyB;IACzB,QAAQ,CAAE,EAAU;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAO,IAAI,CAAC,MAAM,GAAG,YAAY,GAAG,EAAE,CAAE,CAAC;IAC/D,CAAC;IAED,uCAAuC;IACvC,UAAU,CAAE,SAAe,EAAE,EAAU;QACrC,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,iCAAiC,EAAC,CAAC,CAAC;QAErF,SAAS,CAAC,aAAa,GAAG,CAAC,CAAC;QAC5B,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;QAEvD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,MAAM,GAAG,OAAO,GAAG,EAAE,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACxF,CAAC;IAED,qDAAqD;IACrD,UAAU;QACR,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,MAAM,GAAG,qBAAqB,CAAC,CAAC;IACjE,CAAC;IAED,yBAAyB;IACzB,aAAa,CAAE,WAAwB;QACrC,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,iCAAiC,EAAC,CAAC,CAAC;QAErF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,MAAM,GAAG,sBAAsB,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IACtG,CAAC;IAED,uBAAuB;IACvB,iBAAiB,CAAE,cAAsB;QACvC,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,iCAAiC,EAAC,CAAC,CAAC;QAErF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,MAAM,GAAG,yBAAyB,EAAE,EAAE,cAAc,EAAE,cAAc,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAC/H,CAAC;IAED,wBAAwB;IACxB,oBAAoB,CAAE,cAAsB;QAC1C,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,iCAAiC,EAAC,CAAC,CAAC;QAErF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAM,IAAI,CAAC,MAAM,GAAG,0BAA0B,EAAE,EAAE,cAAc,EAAE,cAAc,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAChI,CAAC;IAED,wBAAwB;IACxB,iBAAiB,CAAE,cAAsB;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAM,IAAI,CAAC,MAAM,GAAG,mBAAmB,GAAG,cAAc,CAAC,CAAC;IACnF,CAAC;IAGD,eAAe;IACf,SAAS,CAAE,MAAc;QACvB,MAAM,OAAO,GAAG,IAAI,6DAAW,CAAC,EAAC,cAAc,EAAE,iCAAiC,EAAC,CAAC,CAAC;QAErF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAM,IAAI,CAAC,MAAM,GAAG,qBAAqB,EAAE,MAAM,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;IAChG,CAAC;;sEAtHU,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFV,MAAM","file":"common-es2015.js","sourcesContent":["import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n//# sourceMappingURL=interval.js.map","import { Subscriber } from '../Subscriber';\nexport function count(predicate) {\n    return (source) => source.lift(new CountOperator(predicate, source));\n}\nclass CountOperator {\n    constructor(predicate, source) {\n        this.predicate = predicate;\n        this.source = source;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n    }\n}\nclass CountSubscriber extends Subscriber {\n    constructor(destination, predicate, source) {\n        super(destination);\n        this.predicate = predicate;\n        this.source = source;\n        this.count = 0;\n        this.index = 0;\n    }\n    _next(value) {\n        if (this.predicate) {\n            this._tryPredicate(value);\n        }\n        else {\n            this.count++;\n        }\n    }\n    _tryPredicate(value) {\n        let result;\n        try {\n            result = this.predicate(value, this.index++, this.source);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        if (result) {\n            this.count++;\n        }\n    }\n    _complete() {\n        this.destination.next(this.count);\n        this.destination.complete();\n    }\n}\n//# sourceMappingURL=count.js.map","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Ticker, TickersNews } from '../models/news';\n\nimport { Store } from '@ngrx/store';\nimport * as newsActions from '../store/news.actions';\n\n@Component({\n  selector: 'app-add-ticker-dialog',\n  templateUrl: './add-ticker-dialog.component.html'\n})\nexport class AddTickerDialogComponent implements OnInit {\n  onAdd = new EventEmitter();\n\n  ticker = new Ticker();\n  @Input() public dhivehiEnabled = true;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddTickerDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private store: Store<any>,\n  ) { }\n\n  ngOnInit() {\n    this.ticker.color = '#000000';\n    this.ticker.enabled = 1;\n  }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n  doAdd() {\n    this.closeDialog(true);\n    //this.onAdd.emit(this.tickerNews);\n    this.store.dispatch(new newsActions.AddTicker(this.ticker));\n    this.onAdd.emit();\n  }\n\n}\n","<h3 mat-dialog-title>Add New Ticker</h3>\n\n<div mat-dialog-content>\n  <!-- <div fxLayout=\"row\" fxLayoutWrap=\"wrap\"> -->\n      <!-- title column -->\n      <!-- <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n          Add News to {{data.name}}\n      </div> -->\n      <!-- hr column -->\n      <!-- <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n        <mat-divider></mat-divider>\n      </div> -->\n      <!-- column -->\n  <!-- </div> -->\n\n  <div style=\"margin-top:20px;\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Ticker Name</mat-label>\n          <input matInput mat-autosize #dhvInput required\n            [appDnrmsThaana]=\"false\"\n            [(ngModel)]=\"ticker.name\"\n            name=\"tickerName\">\n        </mat-form-field>\n      </div>\n  </div>\n\n  <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Separator</mat-label>\n          <input matInput mat-autosize #dhvInput required\n            [appDnrmsThaana]=\"false\"\n            [(ngModel)]=\"ticker.separator\"\n            name=\"tickerName\">\n        </mat-form-field>\n      </div>\n  </div>\n\n  <!-- <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n          <code>{{ticker|json}}</code>\n      </div>\n  </div> -->\n\n</div>\n<!-- actions column -->\n<div align=\"end\" mat-dialog-actions align=\"end\">\n  <button mat-button color=\"basic\" (click)=\"closeDialog(true)\">Cancel</button>\n  <button mat-raised-button color=\"primary\" (click)=\"doAdd()\">Add</button>\n\n  <!-- <button mat-button color=\"basic\" *ngIf=\"data.newsstatus.status != 'published' && data.newsstatus.status != 'deleted'\" routerLink=\"/news/{{data.id}}\" (click)=\"closeDialog(true)\">Edit</button> -->\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\n\nimport { environment } from './../../../environments/environment';\nimport { News, TickersNews, Ticker } from './../models/news';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsService {\n  private apiUrl = environment.apiUrl;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  //get dashboard data\n  getDashboard () {\n    return this.http.get<any>(this.apiUrl + 'news/dashboard');\n  }\n\n  // get the news that belongs to me, with status & bar(s)\n  myNews (perpage: number = 10, page: number = 1) {\n    return this.http.get<any>(this.apiUrl + 'news', {\n      params: new HttpParams()\n        .set('no_result', perpage.toString())\n        .set('page', page.toString())\n    });\n  }\n\n  // get the trashed news that belongs to me, with status & bar(s)\n  trashNews (perpage: number = 10, page: number = 1) {\n    return this.http.get<any>(this.apiUrl + 'news/trash', {\n      params: new HttpParams()\n        .set('no_result', perpage.toString())\n        .set('page', page.toString())\n    });\n  }\n\n  // get a news, with status & bar(s)\n  getNews (id: number) {\n    return this.http.get<any>(this.apiUrl + 'news/' + id);\n  }\n\n  // save a news, with bar(s) & ticker(s)\n  saveNews (save_news: News) {\n    const headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\n\n    save_news.newsstatus_id = 1;\n    const post_str = JSON.parse(JSON.stringify(save_news));\n    console.log(post_str);\n\n    return this.http.post<any>(this.apiUrl + 'news', post_str, { headers: headers });\n  }\n\n  // untrash a news\n  unTrashNews (id: number) {\n    return this.http.put<any>(this.apiUrl + 'news/untrash/' + id, null);\n  }\n\n  // deleate a news\n  destroyNews (id: number) {\n    return this.http.delete<any>(this.apiUrl + 'news/' + id);\n  }\n\n  // deleate a news\n  destroyNewsForever (id: number) {\n    return this.http.delete<any>(this.apiUrl + 'news/destroy/' + id);\n  }\n\n  // deleate a news bar\n  destroyBar (id: number) {\n    return this.http.delete<any>(this.apiUrl + 'news/bar/' + id);\n  }\n\n  // get a news for editing\n  editNews (id: number) {\n    return this.http.get<any>( this.apiUrl + 'news/edit/' + id );\n  }\n\n  // save a news, with bar(s) & ticker(s)\n  updateNews (save_news: News, id: number) {\n    const headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\n\n    save_news.newsstatus_id = 1;\n    const post_str = JSON.parse(JSON.stringify(save_news));\n\n    return this.http.put<any>(this.apiUrl + 'news/' + id, post_str, { headers: headers });\n  }\n\n  // Get tickers, tickers are returned with ticker news\n  GetTickers () {\n    return this.http.get<any>(this.apiUrl + 'news/ticker/tickers');\n  }\n\n  // Add a news to a ticker\n  AddTickerNews (ticker_news: TickersNews) {\n    const headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\n\n    return this.http.post<any>(this.apiUrl + 'news/ticker/news/add', ticker_news, { headers: headers });\n  }\n\n  // Enable a ticker news\n  ApproveTickerNews (ticker_news_id: number) {\n    const headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\n\n    return this.http.put<any>(this.apiUrl + 'news/ticker/news/enable', { ticker_news_id: ticker_news_id }, { headers: headers });\n  }\n\n  // Disable a ticker news\n  DisApproveTickerNews (ticker_news_id: number) {\n    const headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\n\n    return this.http.put<any>(this.apiUrl + 'news/ticker/news/disable', { ticker_news_id: ticker_news_id }, { headers: headers });\n  }\n\n  // deleate a ticker news\n  destroyTickerNews (ticker_news_id: number) {\n    return this.http.delete<any>(this.apiUrl + 'news/ticker/news/' + ticker_news_id);\n  }\n\n\n  // Add a ticker\n  AddTicker (ticker: Ticker) {\n    const headers = new HttpHeaders({'Content-Type': 'application/json; charset=utf-8'});\n\n    return this.http.post<any>(this.apiUrl + 'news/ticker/add/new', ticker, { headers: headers });\n  }\n}\n"],"sourceRoot":"webpack:///"}