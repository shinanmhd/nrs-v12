{"version":3,"sources":["./src/app/admin/models/admin-news.models.ts","./src/app/admin/store/admin.effects.ts","./src/app/admin/user/user.component.ts","./src/app/admin/user/user.component.html","./src/app/admin/services/user.service.ts","./src/app/admin/add-news-list-template-dialog/add-news-list-template-dialog.component.ts","./src/app/admin/add-news-list-template-dialog/add-news-list-template-dialog.component.html","./src/app/admin/news-list/news-list.component.ts","./src/app/admin/news-list/news-list.component.html","./src/app/admin/news-breakers/news-breakers.component.ts","./src/app/admin/news-breakers/news-breakers.component.html","./src/app/admin/add-news-breaker-dialog/add-news-breaker-dialog.component.ts","./src/app/admin/add-news-breaker-dialog/add-news-breaker-dialog.component.html","./src/app/admin/assign-role-dialog/assign-role-dialog.component.ts","./src/app/admin/assign-role-dialog/assign-role-dialog.component.html","./src/app/admin/models/user.model.ts","./src/app/admin/add-user-dialog/add-user-dialog.component.ts","./src/app/admin/add-user-dialog/add-user-dialog.component.html","./src/app/admin/admin.routing.ts","./src/app/admin/services/news.service.ts","./src/app/admin/admin.module.ts","./src/app/admin/dashboard/dashboard.component.ts","./src/app/admin/dashboard/dashboard.component.html","./src/app/admin/store/admin.actions.ts","./src/app/admin/store/admin.reducer.ts"],"names":[],"mappings":"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","file":"admin-admin-module-es2015.js","sourcesContent":["export class NewsListTemplate {\n  id?: number;\n  list_name: string;\n  enabled: boolean;\n  created_at?: string;\n  updated_at?: string;\n\n  constructor() {\n    this.list_name = '';\n  }\n}\n\nexport class SettingsKey {\n  id?: number;\n  key?: string;\n  value?: string;\n  created_at?: string;\n  updated_at?: string;\n\n  constructor() {\n  }\n}\n","\nimport {catchError, mergeMap,  map } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Observable ,  of } from 'rxjs';\nimport { Action } from '@ngrx/store';\n\n\n\n\nimport {Actions, Effect, ofType} from '@ngrx/effects';\n\nimport * as AdminActions from './admin.actions';\nimport { News } from '../../news/models/news';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class AdminEffects {\n\n  constructor(\n    private actions$: Actions,\n    private userService: UserService\n  ) { }\n\n  //Effects go here\n  @Effect()\n  GetMyNews$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<AdminActions.GetUsers>(AdminActions.GET_USERS),\n      mergeMap(action =>\n        this.userService.getUsers().pipe(\n        map((data) => {\n          //console.log(data);\n          return new AdminActions.GetUsersSuccess(data)\n        }),\n        catchError(() => of(new AdminActions.GetUsersError())),)\n      )\n    );\n\n  @Effect()\n  AssignRole$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<AdminActions.AssignRole>(AdminActions.ASSIGN_ROLE),\n      mergeMap(action =>\n        this.userService.assignRole({ user_id: action.payload.user_id, role_id: action.payload.role_id }).pipe(\n        map((data) => {\n          console.log(data);\n          return new AdminActions.AssignRoleSuccess(data)\n        }),\n        catchError(() => of(new AdminActions.AssignRoleError())),)\n      )\n    );\n\n  @Effect()\n  RemoveRole$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<AdminActions.RemoveRole>(AdminActions.REMOVE_ROLE),\n      mergeMap(action =>\n        this.userService.removeRole({ user_id: action.payload.user_id, role_id: action.payload.role_id }).pipe(\n        map((data) => {\n          console.log(data);\n          return new AdminActions.RemoveRoleSuccess(data)\n        }),\n        catchError(() => of(new AdminActions.RemovenRoleError())),)\n      )\n    );\n\n  @Effect()\n  CreateUser$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<AdminActions.CreateUser>(AdminActions.CREATE_USER),\n      mergeMap(action =>\n        this.userService.createUser(action.payload).pipe(\n        map((data) => {\n          console.log(data);\n          return new AdminActions.CreateUserSuccess(data)\n        }),\n        catchError(() => of(new AdminActions.CreateUserError())),)\n      )\n    );\n\n  @Effect()\n  UpdateUser$: Observable<Action> = this.actions$.\n    pipe(\n      ofType<AdminActions.CreateUser>(AdminActions.UPDATE_USER),\n      mergeMap(action =>\n        this.userService.updateUser(action.payload).pipe(\n        map((data) => {\n          console.log(data);\n          return new AdminActions.UpdateUserSuccess(data)\n        }),\n        catchError(() => of(new AdminActions.UpdateUserError())),)\n      )\n    );\n\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\nimport { Users } from '../models/user.model';\n\nimport { Store } from '@ngrx/store';\nimport {Actions, ofType} from '@ngrx/effects';\n\nimport * as AdminActions from '../store/admin.actions';\nimport { AssignRoleDialogComponent } from '../assign-role-dialog/assign-role-dialog.component';\nimport { AddUserDialogComponent } from '../add-user-dialog/add-user-dialog.component';\nimport { SessionService } from '../../shared/services/session.service';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { environment } from '../../../environments/environment';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit, OnDestroy {\n\n  sidePanelOpened = true;\n  users: Users[] = [];\n  selectedUser: Users = null;\n  currentUserEmail: string;\n  destroySubject$: Subject<void> = new Subject();\n\n  updateUser: Users = null;\n\n  public storagePath: string;\n\n  constructor(\n    private store: Store<any>,\n    private updates$: Actions,\n    public dialog: MatDialog,\n    private sessionService: SessionService,\n    public snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n    this.storagePath = environment.storageUrl;\n    this.store.dispatch(new AdminActions.GetUsers());\n\n    // update selected list selection\n    this.updates$\n    .pipe(\n      ofType(AdminActions.GET_USERS_SUCCESS),\n      takeUntil(this.destroySubject$)\n    )\n    .subscribe(() => {\n      let sub = this.store.select(adminStore => adminStore.Admin.users)\n      .pipe(takeUntil(this.destroySubject$))\n      .subscribe(userList => {\n        this.users = userList;\n      });\n    });\n\n    //get current user email\n    this.store.select(store => store.UserState.user.email)\n    //.take(1)\n    .pipe(takeUntil(this.destroySubject$))\n    .subscribe(email => this.currentUserEmail = email);\n  }\n\n  onAddRole() {\n    let dialogRef = this.dialog.open(AssignRoleDialogComponent, { width: '95%', height: '60%', maxHeight: '95%', data: this.selectedUser });\n\n    dialogRef.componentInstance.onAdd.subscribe((result: any) => {\n      this.updates$\n      .pipe(\n        ofType(AdminActions.ASSIGN_ROLE_SUCCESS),\n        takeUntil(this.destroySubject$)\n      )\n      .subscribe(() => {\n\n        this.openSnackBar('Role Added to User!');\n\n        this.store.select(store => store.Admin.users)\n        .pipe(takeUntil(this.destroySubject$))\n        .subscribe(users => {\n          users.forEach((user: Users) => {\n            if (user.id === result.user_id) {\n              this.selectedUser = user;\n            }\n          });\n        });\n\n      });\n    });\n  }\n\n\n  onRemoveRole(roleid: number, userid: number) {\n    this.store.dispatch(new AdminActions.RemoveRole({ user_id: this.selectedUser.id, role_id: roleid }));\n\n    this.updates$\n    .pipe(\n      ofType(AdminActions.REMOVE_ROLE_SUCCESS),\n      takeUntil(this.destroySubject$)\n    )\n    .subscribe(() => {\n\n      this.openSnackBar('Role Removed from User!');\n\n      this.store.select(store => store.Admin.users)\n      .pipe(takeUntil(this.destroySubject$))\n      .subscribe(users => {\n        users.forEach((user: Users) => {\n          if (user.id === userid) {\n            this.selectedUser = user;\n          }\n        });\n      });\n\n    });\n  }\n\n  onAddUser() {\n    let dialogRef = this.dialog.open(AddUserDialogComponent, { width: '40%', height: 'auto', maxHeight: '95%' });\n\n    dialogRef.componentInstance.onAdd.pipe(takeUntil(this.destroySubject$)).subscribe((result: any) => {\n      this.updates$\n      .pipe(\n        ofType(AdminActions.CREATE_USER_SUCCESS),\n        takeUntil(this.destroySubject$)\n      )\n      .subscribe(() => {\n\n        this.openSnackBar('User Created!');\n\n        // this.store.select(store => store.Admin.users)\n        // .subscribe(users => {\n        //   users.forEach((user: Users) => {\n        //     if (user.id === this.selectedUser.id) {\n        //       this.selectedUser = user;\n        //     }\n        //   });\n        // });\n\n      });\n    });\n  }\n\n\n  checkRight(role: string, user: Users) {\n    let re = false;\n    user.roles.forEach(urole => {\n      if(urole.name === role){\n        re = true;\n      }\n    });\n\n    return re;\n  }\n\n  isOver(): boolean {\n    return window.matchMedia(`(max-width: 960px)`).matches;\n  }\n\n  onSelect(user: Users): void {\n    this.selectedUser = user;\n\n    this.updateUser = new Users(this.selectedUser.name, this.selectedUser.email, null);\n    this.updateUser.id = this.selectedUser.id;\n  }\n\n  onUpdateProfile() {\n    this.store.dispatch(new AdminActions.UpdateUser(this.updateUser));\n\n    // update selected list selection\n    this.updates$\n    .pipe(\n      ofType(AdminActions.UPDATE_USER_SUCCESS),\n      takeUntil(this.destroySubject$)\n    )\n    .subscribe(() => {\n      //show notification\n      this.openSnackBar('User Data Updated!');\n\n      let sub = this.store.select(adminStore => adminStore.Admin.users)\n      .subscribe(userList => {\n        this.users = userList;\n      });\n    });\n  }\n\n  openSnackBar(message: string, action: string= 'close') {\n    this.snackBar.open(message, action, {\n      duration: 1000,\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroySubject$.next();\n  }\n\n\n  checkMyRight(right?: string) {\n    if (this.sessionService.checkRole('ticker-editor')) {\n      return true;\n    } else if (this.sessionService.checkRole('news-editor')) {\n      return true;\n    }\n    return false;\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"center start\">\n    <div fxFlex.gt-md=\"100\" fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n      <mat-card class=\"mat-card-top\">\n        <mat-sidenav-container [ngClass]=\"{ 'side-panel-opened': sidePanelOpened, 'side-panel-closed': !sidePanelOpened }\">\n          <mat-sidenav #chatnav [mode]=\"isOver() ? 'over' : 'side'\" [opened]=\"!isOver()\" (open)=\"sidePanelOpened = true\"\n          (close)=\"sidePanelOpened = false\">\n            <mat-toolbar color=\"primary\" class=\"no-shadow\">\n              <div fxLayout=\"row\" fxFlex=\"100\" >\n                <span class=\"m-t-0 font-14\">\n                  <button mat-icon-button class=\"mr-1\"><mat-icon>contacts</mat-icon></button>\n                  Users\n                </span>\n              </div>\n              <button (click)=\"onAddUser()\" mat-mini-fab color=\"basic\" class=\"mr-1\" align=\"end\" matTooltip=\"Add User\" matTooltipPosition=\"below\" [disabled]=\"!checkMyRight('create-user')\">\n                <mat-icon>person_add</mat-icon>\n              </button>\n            </mat-toolbar>\n\n            <mat-nav-list *ngIf=\"users.length !== 0\">\n              <mat-list-item (click)=\"onSelect(user)\" *ngFor=\"let user of users\" [style.background-color]=\"user.email==currentUserEmail ? 'rgba(127, 255, 212, 0.2)' : 'rgba(255, 255, 255, 0)'\">\n\n                <mat-icon *ngIf=\"user.roles.length > 0 && (!checkRight('admin', user))\" color=\"basic\">face</mat-icon>\n                <mat-icon *ngIf=\"user.roles.length > 0 && (checkRight('news-editor', user)) || (checkRight('n-editor', user))\" color=\"primary\">account_circle</mat-icon>\n                <mat-icon *ngIf=\"user.roles.length <= 0\" class=\"label-light-warning\">error_outline</mat-icon>\n                <mat-icon *ngIf=\"checkRight('admin', user) && checkRight('create-user', user)\" color=\"warn\">security</mat-icon>\n                <mat-icon *ngIf=\"checkRight('admin', user) && (!checkRight('create-user', user))\" color=\"primary\">security</mat-icon>\n\n                <b matLine>{{user.name}}</b>\n                <p matLine class=\"text-muted\">{{user.email}}</p>\n              </mat-list-item>\n            </mat-nav-list>\n          </mat-sidenav>\n\n          <mat-toolbar class=\"bg-success no-shadow chat-right-panel\" color=\"warn\">\n            <div fxLayout=\"row\" fxFlex=\"100\" fxLayoutAlign=\"center center\">\n              <button (click)=\"chatnav.toggle()\" class=\"mr-1\" mat-icon-button>\n                <mat-icon>short_text</mat-icon>\n              </button>\n\n              <span class=\"top-avatar m-r-10\" *ngIf=\"selectedUser\">\n                  <img src=\"{{storagePath+'profiles/default.jpg'}}\" class=\"img-circle\" *ngIf=\"!selectedUser.profile\">\n                  <img src=\"{{storagePath+'profiles/user/'+selectedUser.profile.profilepic}}\" class=\"img-circle\" *ngIf=\"selectedUser.profile\">\n              </span>\n\n              <div fxFlex>\n                <div class=\"font-14\" *ngIf=\"selectedUser\">{{selectedUser.name}}</div>\n              </div>\n              <!-- <button [matMenuTriggerFor]=\"them\" mat-icon-button class=\"ml-1\">\n                <mat-icon>more_vert</mat-icon>\n              </button>\n              <mat-menu #them=\"matMenu\" x-position=\"before\">\n                <button mat-menu-item>Contact info</button>\n                <button mat-menu-item>Mute</button>\n                <button mat-menu-item>Delete chat</button>\n              </mat-menu> -->\n            </div>\n          </mat-toolbar>\n\n          <mat-card-content class=\"chat-middle-box\">\n            <div *ngIf=\"selectedUser\" style=\"min-height: 500px;\">\n              <!-- <code>{{selectedUser|json}}</code> -->\n              <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n\n\n                  <div fxFlex.gt-lg=\"100\" fxFlex.gt-md=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n                      <mat-card>\n                          <mat-tab-group>\n                              <!-- Tab 1 -->\n                              <mat-tab label=\"Profile\">\n                                  <mat-card-content>\n                                      <!-- ============================================================== -->\n                                      <!-- column -->\n                                      <!-- ============================================================== -->\n                                      <form class=\"basic-form\" #profileForm=\"ngForm\">\n                                        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n                                            <!-- column -->\n                                            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                                              <mat-form-field>\n                                                <input matInput placeholder=\"Name\" required name=\"profileName\" [(ngModel)]=\"updateUser.name\" [disabled]=\"!checkMyRight('create-user')\">\n                                              </mat-form-field>\n                                            </div>\n                                            <!-- column -->\n                                            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                                              <mat-form-field>\n                                                <input matInput placeholder=\"Email\" required type=\"email\" name=\"profileEmail\" [(ngModel)]=\"updateUser.email\" [disabled]=\"selectedUser.email == currentUserEmail || !checkMyRight('create-user')\">\n                                              </mat-form-field>\n                                            </div>\n                                            <!-- column -->\n                                            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                                              <mat-form-field>\n                                                <input matInput placeholder=\"Password\" type=\"password\" name=\"profilePassword\" [(ngModel)]=\"updateUser.password\" [disabled]=\"!checkMyRight('create-user')\">\n                                              </mat-form-field>\n                                            </div>\n\n                                            <!-- debug -->\n                                            <!-- <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                                              <code>{{updateUser|json}}</code>\n                                            </div> -->\n\n                                            <!-- column -->\n                                            <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n                                              <button mat-raised-button color=\"primary\" [disabled]=\"!profileForm.form.valid || !checkMyRight('create-user')\" (click)=\"onUpdateProfile()\">Update Profile</button>\n                                            </div>\n                                        </div>\n                                      </form>\n                                  </mat-card-content>\n                              </mat-tab>\n                              <!-- Tab 2 -->\n                              <mat-tab label=\"Activity\">\n                                  <mat-card-content>\n\n                                    <mat-card-subtitle>Last 200 Activity performed by {{selectedUser.name}}</mat-card-subtitle>\n\n                                    <div class=\"table-rasponsive\">\n\n                                        <div class=\"table\">\n                                          <div class=\"table-header\">\n                                            <div class=\"header__item column-log_id\">Log Id</div>\n                                            <div class=\"header__item column-log_name\">Log Name</div>\n                                            <div class=\"header__item column-description\">Description</div>\n                                            <div class=\"header__item column-subject\">Subject Type</div>\n                                            <div class=\"header__item column-date\">Log Date</div>\n                                          </div>\n                                          <div class=\"table-content\">\n                                            <div class=\"table-row\" *ngFor=\"let activity of selectedUser.activity\">\n                                              <div class=\"table-data column-log_id\">{{ activity.id }}</div>\n\n                                              <div class=\"table-data column-log_name\">{{ activity.log_name }}</div>\n\n                                              <div class=\"table-data column-description\" matTooltipPosition=\"below\">{{ activity.description }}</div>\n\n                                              <div class=\"table-data column-subject\" matTooltipPosition=\"below\">{{ activity.subject_type }}</div>\n\n                                              <div class=\"table-data column-date\">{{activity.created_at | date:'medium'}}</div>\n                                            </div>\n                                          </div>\n                                        </div>\n\n                                      </div>\n\n                                  </mat-card-content>\n                              </mat-tab>\n                              <!-- End Tab 2 -->\n                              <!-- Start Tab 3 -->\n                              <mat-tab label=\"Roles & Permissions\">\n                                <mat-card-content>\n                                    <!-- <code>{{selectedUser.roles|json}}</code> -->\n                                    <!-- <mat-card-subtitle>Last 100 Activity performed by {{selectedUser.name}}</mat-card-subtitle> -->\n\n                                    <div class=\"table-rasponsive\">\n\n                                        <div class=\"table\">\n                                          <div class=\"table-header\">\n                                            <div class=\"header__item column-role\">Role</div>\n                                            <div class=\"header__item column-name\">Role Name</div>\n                                            <div class=\"header__item column-detail\">Detail</div>\n                                            <div class=\"header__item column-permission\">Permission</div>\n                                            <div class=\"header__item column-actions\">Actions</div>\n                                          </div>\n                                          <div class=\"table-content\">\n                                            <div class=\"table-row\" *ngFor=\"let role of selectedUser.roles\">\n                                              <div class=\"table-data column-role\">{{ role.name }}</div>\n\n                                              <div class=\"table-data column-name\">{{ role.display_name }}</div>\n\n                                              <div class=\"table-data column-detail\" matTooltipPosition=\"below\">{{ role.description }}</div>\n\n                                              <div class=\"table-data column-permissions\" matTooltipPosition=\"below\">\n                                                <mat-chip-list>\n                                                  <mat-chip color=\"primary\" *ngFor=\"let perm of role.permissions\">{{perm.name}}</mat-chip>\n                                                </mat-chip-list>\n                                              </div>\n\n                                              <div class=\"table-data column-actions\">\n                                                  <button mat-icon-button color=\"warn\" (click)=\"onRemoveRole(role.id, selectedUser.id)\" matTooltip=\"Remove Role\" matTooltipPosition=\"below\" [disabled]=\"selectedUser.email == currentUserEmail || !checkMyRight('create-user')\">\n                                                    <mat-icon aria-label=\"Edit\">clear</mat-icon>\n                                                  </button>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n\n                                      </div>\n\n                                </mat-card-content>\n                              </mat-tab>\n                              <!-- End Tab 3 -->\n                          </mat-tab-group>\n                      </mat-card>\n                  </div>\n\n\n              </div>\n            </div>\n\n            <div *ngIf=\"!selectedUser\" style=\"min-height: 500px;\">\n            </div>\n          </mat-card-content>\n\n          <mat-card-actions class=\"chat-footer\">\n            <div align=\"end\">\n              <button mat-raised-button color=\"primary\" [disabled]=\"!selectedUser || !checkMyRight('create-user')\" (click)=\"onAddRole()\">Assign Role</button>\n              <!-- <button mat-raised-button color=\"primary\" (click)=\"onAddUser()\">Create User</button> -->\n              <!-- <button mat-raised-button color=\"warn\" [disabled]=\"!selectedNews\" (click)=\"rejectNews()\">Reject</button>\n              <button mat-raised-button color=\"primary\" [disabled]=\"!selectedNews\" (click)=\"approveNews(selectedNews)\">Approve</button> -->\n            </div>\n          </mat-card-actions>\n        </mat-sidenav-container>\n      </mat-card>\n    </div>\n  </div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { environment } from './../../../environments/environment';\nimport { News, ListOrder } from '../../news/models/news';\nimport { Users } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private apiUrl = environment.apiUrl;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  // get selected list\n  getUsers () {\n    return this.http.get<any>(this.apiUrl + 'management-console/users');\n  }\n\n  // get all roles for assignment\n  getRoles () {\n    return this.http.get<any>(this.apiUrl + 'management-console/user/get-roles');\n  }\n\n  // assign role to user\n  assignRole ( user_role: { user_id: number, role_id: number } ) {\n    return this.http.put<any>(this.apiUrl + 'management-console/user/assign-role', user_role);\n  }\n\n  // remove role from user\n  removeRole ( user_role: { user_id: number, role_id: number } ) {\n    return this.http.put<any>(this.apiUrl + 'management-console/user/remove-role', user_role);\n  }\n\n  // create user\n  createUser ( user: Users ) {\n    return this.http.post<any>(this.apiUrl + 'management-console/user/create', user);\n  }\n\n  // update user\n  updateUser ( user: Users ) {\n    return this.http.put<any>(this.apiUrl + 'management-console/user/update', user);\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Store } from '@ngrx/store';\nimport * as adminActions from '../store/admin.actions';\nimport { UserService } from '../services/user.service';\nimport { Roles, Users } from '../models/user.model';\nimport { Actions } from '@ngrx/effects';\nimport { NewsListTemplate } from '../models/admin-news.models';\n\n@Component({\n  selector: 'add-news-list-template-dialog',\n  templateUrl: './add-news-list-template-dialog.component.html',\n  styleUrls: ['./add-news-list-template-dialog.component.css']\n})\n\nexport class AddNewsListDialogComponent implements OnInit {\n  onAdd = new EventEmitter();\n  template: NewsListTemplate = new NewsListTemplate();\n\n  constructor(\n    public dialogRef: MatDialogRef<AddNewsListDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Users,\n    private store: Store<any>,\n    private userService: UserService,\n    private updates$: Actions,\n  ) { }\n\n  ngOnInit() {\n    this.template.enabled = true;\n  }\n\n  addTemplate() {\n    // this.store.dispatch(new adminActions.CreateUser(this.user));\n    this.onAdd.emit(this.template);\n    this.dialogRef.close(true);\n  }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n}\n","<h3 mat-dialog-title>Add News List Template</h3>\n<form class=\"basic-form\" #userForm=\"ngForm\">\n  <div mat-dialog-content>\n\n      <div style=\"margin-top:20px;\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Template Name</mat-label>\n              <input matInput mat-autosize required name=\"templateName\" [(ngModel)]=\"template.list_name\">\n            </mat-form-field>\n          </div>\n      </div>\n<!-- {{template|json}} -->\n  </div>\n  <!-- actions column -->\n  <div mat-dialog-actions align=\"end\">\n    <button mat-button color=\"basic\" (click)=\"closeDialog(true)\">Cancel</button>\n    <button mat-raised-button color=\"primary\" (click)=\"addTemplate()\" [disabled]=\"!userForm.form.valid\">Add Template</button>\n    <!-- <button mat-button color=\"basic\" *ngIf=\"data.newsstatus.status != 'published' && data.newsstatus.status != 'deleted'\" routerLink=\"/news/{{data.id}}\" (click)=\"closeDialog(true)\">Edit</button> -->\n  </div>\n\n</form>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { NewsService } from '../services/news.service';\nimport { NewsListTemplate, SettingsKey } from '../models/admin-news.models';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { AddNewsListDialogComponent } from '../add-news-list-template-dialog/add-news-list-template-dialog.component';\nimport { ConfirmDialogComponent } from '../../shared/component/confirm-dialog/confirm-dialog.component';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-news-list',\n  templateUrl: './news-list.component.html',\n  styleUrls: ['./news-list.component.css']\n})\nexport class NewsListComponent implements OnInit, OnDestroy {\n  templates: NewsListTemplate[] = [];\n  generationTime: SettingsKey = new SettingsKey();\n  destroySubject$: Subject<void> = new Subject();\n\n  constructor(\n    private adminNewsService: NewsService,\n    public dialog: MatDialog,\n    public snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n    this.generationTime.key = 'list_generation_time';\n\n    this.adminNewsService.getListTemplates().pipe(takeUntil(this.destroySubject$)).subscribe((templates: NewsListTemplate[]) => this.templates = templates);\n    this.adminNewsService.getListGenTime().pipe(takeUntil(this.destroySubject$)).subscribe((time: SettingsKey) => this.generationTime.value = time.value);\n  }\n\n  enable(id: number) {\n    this.adminNewsService.enableListTemplate({template_id: id}).pipe(takeUntil(this.destroySubject$)).subscribe(data => {\n      this.templates = data;\n    });\n  }\n\n  disable(id: number) {\n    this.adminNewsService.disableListTemplate({template_id: id}).pipe(takeUntil(this.destroySubject$)).subscribe(data => {\n      this.templates = data;\n    });\n  }\n\n  updateTime() {\n    this.adminNewsService.setSettingsKey(this.generationTime).pipe(takeUntil(this.destroySubject$)).subscribe(data => {\n      this.generationTime = data;\n      this.openSnackBar('List Generations Time updated!');\n    });\n  }\n\n  onAddTemplate() {\n    let dialogRef = this.dialog.open(AddNewsListDialogComponent, { width: '40%', height: 'auto', maxHeight: '95%' });\n\n    dialogRef.componentInstance.onAdd.pipe(takeUntil(this.destroySubject$)).subscribe((result: NewsListTemplate) => {\n      this.adminNewsService.createListTemplate(result).pipe(takeUntil(this.destroySubject$)).subscribe((data: NewsListTemplate[]) => {\n        this.templates = data;\n      });\n    });\n  }\n\n  onDeleteTemplate(id: number) {\n    let dialogRef = this.dialog.open(ConfirmDialogComponent,\n      { width: '350px', data: {title: 'Delete News List Template', message: 'Are you sure you want to delete this Template?'} });\n\n      dialogRef.afterClosed().pipe(takeUntil(this.destroySubject$)).subscribe((result: string) => {\n        dialogRef = null;\n        if (result) {\n          this.adminNewsService.deleteListTemplate(id).pipe(takeUntil(this.destroySubject$)).subscribe((data: NewsListTemplate[]) => {\n            this.templates = data;\n          });\n        }\n      });\n  }\n\n\n  openSnackBar(message: string, action: string= 'close') {\n    this.snackBar.open(message, action, {\n      duration: 1000,\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroySubject$.next();\n  }\n\n}\n","<!-- ============================================================== -->\n<!-- Update List Generation time & list templates -->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <!-- Column-->\n    <div fxFlex.gt-lg=\"85\" fxFlex.gt-md=\"75\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n        <mat-card>\n          <mat-card-content>\n              <mat-card-title>List Templates</mat-card-title>\n              <mat-card-subtitle>News Lists to be generated everyday</mat-card-subtitle>\n\n              <div class=\"table-rasponsive\">\n              <div class=\"table\">\n                <div class=\"table-header\">\n                  <div class=\"header__item column-name\">List Name</div>\n                  <div class=\"header__item column-actions\">Actions</div>\n                </div>\n                <div class=\"table-content\">\n                  <div class=\"table-row status_{{ list.enabled }}\" *ngFor=\"let list of templates\">\n                    <div class=\"table-data column-name\">{{ list.list_name }}</div>\n\n                    <div class=\"table-data column-actions\">\n                        <button mat-icon-button color=\"warn\" (click)=\"onDeleteTemplate(list.id)\" matTooltip=\"Remove Template\" matTooltipPosition=\"below\">\n                          <mat-icon aria-label=\"Edit\">clear</mat-icon>\n                        </button>\n\n                        <button mat-icon-button color=\"basic\" *ngIf=\"!list.enabled\" (click)=\"enable(list.id)\" matTooltip=\"Enable Template\" matTooltipPosition=\"below\">\n                          <mat-icon aria-label=\"Approve\">check_circle</mat-icon>\n                        </button>\n                        <button mat-icon-button color=\"warn\" *ngIf=\"list.enabled\" (click)=\"disable(list.id)\" matTooltip=\"Disable Template\" matTooltipPosition=\"below\">\n                          <mat-icon aria-label=\"Approve\">do_not_disturb_on</mat-icon>\n                        </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <mat-card-actions align=\"end\">\n              <button mat-raised-button color=\"accent\" (click)=\"onAddTemplate()\">Add a Template</button>\n            </mat-card-actions>\n          </mat-card-content>\n        </mat-card>\n    </div>\n\n    <!-- Column-->\n    <div fxFlex.gt-lg=\"15\" fxFlex.gt-md=\"25\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n        <mat-card class=\"oh\">\n          <mat-card-content >\n            <p>\n              News Lists generation time\n            </p>\n\n            <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n              <!-- column -->\n              <div fxFlex.gt-md=\"100\" fxFlex=\"100\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Time</mat-label>\n                  <input matInput placeholder=\"News List Generation Time\" #ListTime required name=\"ListTime\" [(ngModel)]=\"generationTime.value\">\n                </mat-form-field>\n              </div>\n            </div>\n\n            <!-- {{generationTime|json}} -->\n\n             <mat-card-actions align=\"end\">\n                <button mat-raised-button color=\"accent\" (click)=\"updateTime()\">Update Time</button>\n              </mat-card-actions>\n            </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator, PageEvent } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\nimport { ConfirmDialogComponent } from '../../shared/component/confirm-dialog/confirm-dialog.component';\nimport { NewsService } from '../services/news.service';\nimport { News } from '../../news/models/news';\nimport { AddNewsBreakerDialogComponent } from '../add-news-breaker-dialog/add-news-breaker-dialog.component';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-news-breakers',\n  templateUrl: './news-breakers.component.html',\n  styleUrls: ['./news-breakers.component.css']\n})\nexport class NewsBreakersComponent implements OnInit, OnDestroy {\n  breakers: News[];\n  destroySubject$: Subject<void> = new Subject();\n\n  constructor(\n    private adminNewsService: NewsService,\n    public dialog: MatDialog,\n    public snackBar: MatSnackBar\n  ) { }\n\n  ngOnInit() {\n    this.adminNewsService.getBreakers().subscribe(breakers => {\n      this.breakers = breakers\n    });\n  }\n\n  onAddBreaker() {\n    let dialogRef = this.dialog.open(AddNewsBreakerDialogComponent, { width: '40%', height: 'auto', maxHeight: '95%' });\n\n    dialogRef.componentInstance.onAdd\n    .pipe(takeUntil(this.destroySubject$))\n    .subscribe((result: News) => {\n      this.adminNewsService.createBreaker(result).subscribe((data: News[]) => {\n        this.breakers = data;\n      });\n    });\n  }\n\n  onDeleteBreaker(id: number){\n    let dialogRef = this.dialog.open(ConfirmDialogComponent,\n      { width: '350px', data: {title: 'Delete News Breaker', message: 'Are you sure you want to delete this Breaker?'} });\n\n      dialogRef.afterClosed()\n      .pipe(takeUntil(this.destroySubject$))\n      .subscribe((result: string) => {\n        dialogRef = null;\n        if (result) {\n          this.adminNewsService.deleteBreakers(id).subscribe((data: News[]) => {\n            this.breakers = data;\n          });\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroySubject$.next();\n  }\n\n}\n","<!-- ============================================================== -->\n<!-- Update List Generation time & list templates -->\n<!-- ============================================================== -->\n<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n    <!-- Column-->\n    <div fxFlex.gt-lg=\"85\" fxFlex.gt-md=\"75\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n        <mat-card>\n          <mat-card-content>\n              <mat-card-title>News Breakers</mat-card-title>\n              <!-- <mat-card-subtitle>News Lists to be generated everyday</mat-card-subtitle> -->\n\n              <div class=\"table-rasponsive\">\n              <div class=\"table\">\n                <div class=\"table-header\">\n                  <div class=\"header__item column-name\">Breaker Name</div>\n                  <div class=\"header__item column-actions\">Actions</div>\n                </div>\n                <div class=\"table-content\">\n                  <div class=\"table-row\" *ngFor=\"let breaker of breakers\">\n                    <div class=\"table-data column-name\">{{ breaker.news_name }}</div>\n\n                    <div class=\"table-data column-actions\">\n                        <button mat-icon-button color=\"warn\" (click)=\"onDeleteBreaker(breaker.id)\" matTooltip=\"Remove Template\" matTooltipPosition=\"below\">\n                          <mat-icon aria-label=\"Edit\">clear</mat-icon>\n                        </button>\n\n                        <!-- <button mat-icon-button color=\"basic\" *ngIf=\"!list.enabled\" (click)=\"enable(breaker.id)\" matTooltip=\"Enable Template\" matTooltipPosition=\"below\">\n                          <mat-icon aria-label=\"Approve\">check_circle</mat-icon>\n                        </button>\n                        <button mat-icon-button color=\"warn\" *ngIf=\"list.enabled\" (click)=\"disable(breaker.id)\" matTooltip=\"Disable Template\" matTooltipPosition=\"below\">\n                          <mat-icon aria-label=\"Approve\">do_not_disturb_on</mat-icon>\n                        </button> -->\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <mat-card-actions align=\"end\">\n              <button mat-raised-button color=\"accent\" (click)=\"onAddBreaker()\">Add Breaker</button>\n            </mat-card-actions>\n          </mat-card-content>\n        </mat-card>\n    </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Store } from '@ngrx/store';\nimport * as adminActions from '../store/admin.actions';\nimport { UserService } from '../services/user.service';\nimport { Roles, Users } from '../models/user.model';\nimport { Actions } from '@ngrx/effects';\nimport { News } from '../../news/models/news';\n\n@Component({\n  selector: 'add-news-breaker-dialog',\n  templateUrl: './add-news-breaker-dialog.component.html',\n  styleUrls: ['./add-news-breaker-dialog.component.css']\n})\n\nexport class AddNewsBreakerDialogComponent implements OnInit {\n  onAdd = new EventEmitter();\n  breaker: News = new News();\n\n  constructor(\n    public dialogRef: MatDialogRef<AddNewsBreakerDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Users,\n    private store: Store<any>,\n    private userService: UserService,\n    private updates$: Actions,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  addBreaker() {\n    // this.store.dispatch(new adminActions.CreateUser(this.user));\n    this.onAdd.emit(this.breaker);\n    this.dialogRef.close(true);\n    console.log(JSON.stringify(this.breaker));\n  }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n}\n","<h3 mat-dialog-title>Add News Breaker</h3>\n<form class=\"basic-form\" #userForm=\"ngForm\">\n  <div mat-dialog-content>\n\n      <div style=\"margin-top:20px;\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Breaker Name</mat-label>\n              <input matInput mat-autosize required name=\"templateName\" [(ngModel)]=\"breaker.news_name\">\n            </mat-form-field>\n          </div>\n      </div>\n<!-- {{template|json}} -->\n  </div>\n  <!-- actions column -->\n  <div mat-dialog-actions align=\"end\">\n    <button mat-button color=\"basic\" (click)=\"closeDialog(true)\">Cancel</button>\n    <button mat-raised-button color=\"primary\" (click)=\"addBreaker()\" [disabled]=\"!userForm.form.valid\">Add Breaker</button>\n    <!-- <button mat-button color=\"basic\" *ngIf=\"data.newsstatus.status != 'published' && data.newsstatus.status != 'deleted'\" routerLink=\"/news/{{data.id}}\" (click)=\"closeDialog(true)\">Edit</button> -->\n  </div>\n\n</form>\n","import { Component, OnInit, OnDestroy, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Store } from '@ngrx/store';\nimport * as adminActions from '../store/admin.actions';\nimport { UserService } from '../services/user.service';\nimport { Roles, Users } from '../models/user.model';\nimport {Actions, ofType} from '@ngrx/effects';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'assign-role-dialog',\n  templateUrl: './assign-role-dialog.component.html',\n  styleUrls: ['./assign-role-dialog.component.css']\n})\nexport class AssignRoleDialogComponent implements OnInit, OnDestroy {\n  onAdd = new EventEmitter();\n  roles: Roles[] = [];\n  destroySubject$: Subject<void> = new Subject();\n\n  constructor(\n    public dialogRef: MatDialogRef<AssignRoleDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Users,\n    private store: Store<any>,\n    private userService: UserService,\n    private updates$: Actions,\n  ) { }\n\n  ngOnInit() {\n    this.userService.getRoles().subscribe(roles => {\n      this.roles = roles;\n    });\n  }\n\n  userHasRole(role_: string) {\n    let re = false;\n\n    this.data.roles.forEach((element: Roles) => {\n      if(element.name === role_) {\n        re = true;\n        //console.log(element.name, role_)\n      }\n    });\n\n    return re;\n  }\n\n  assignRole(roleid: number) {\n    this.store.dispatch(new adminActions.AssignRole({ user_id: this.data.id, role_id: roleid }));\n    this.onAdd.emit({ user_id: this.data.id });\n\n    this.updates$\n      .pipe(\n        ofType(adminActions.ASSIGN_ROLE_SUCCESS),\n        takeUntil(this.destroySubject$)\n      )\n      .subscribe(() => {\n\n        this.store.select(store => store.Admin.users)\n        .subscribe(users => {\n          users.forEach((user: Users) => {\n            if (user.id === this.data.id) {\n              // console.log(element)\n              this.data = user;\n            }\n          });\n        });\n\n      });\n  }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n  doAdd() {\n    this.closeDialog(true);\n    this.onAdd.emit();\n  }\n\n  ngOnDestroy() {\n    this.destroySubject$.next();\n  }\n\n}\n","<h3 mat-dialog-title>Assign Role to {{data.name}}</h3>\n\n<div mat-dialog-content>\n  <!-- <div fxLayout=\"row\" fxLayoutWrap=\"wrap\"> -->\n      <!-- title column -->\n      <!-- <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n          Add News to {{data.name}}\n      </div> -->\n      <!-- hr column -->\n      <!-- <div fxFlex.gt-sm=\"100\" fxFlex=\"100\" class=\"m-t-20\">\n        <mat-divider></mat-divider>\n      </div> -->\n      <!-- column -->\n  <!-- </div> -->\n\n  <div style=\"margin-top:20px;\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n\n\n          <div class=\"table-rasponsive\" *ngIf=\"roles\">\n\n            <div class=\"table\">\n              <div class=\"table-header\">\n                <div class=\"header__item column-role\">Role</div>\n                <div class=\"header__item column-name\">Role Name</div>\n                <div class=\"header__item column-detail\">Detail</div>\n                <div class=\"header__item column-actions\">Actions</div>\n              </div>\n              <div class=\"table-content\">\n                <div class=\"table-row\" *ngFor=\"let role of roles\" [class.role_assigned]=\"userHasRole(role.name)\">\n                  <div class=\"table-data column-role\">{{ role.name }}</div>\n\n                  <div class=\"table-data column-name\">{{ role.display_name }}</div>\n\n                  <div class=\"table-data column-detail\" matTooltipPosition=\"below\">{{ role.description }}</div>\n\n                  <div class=\"table-data column-actions\">\n                      <button mat-icon-button color=\"warn\" [disabled]=\"userHasRole(role.name)\" (click)=\"assignRole(role.id)\" matTooltip=\"Assign Role\" matTooltipPosition=\"below\">\n                        <mat-icon aria-label=\"Edit\">add</mat-icon>\n                      </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n\n\n      </div>\n  </div>\n\n  <!-- <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n      <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n          <code>{{tickerNews|json}}</code>\n      </div>\n  </div> -->\n\n</div>\n<!-- actions column -->\n<!-- <div mat-dialog-actions align=\"end\">\n  <button mat-button color=\"basic\" (click)=\"closeDialog(true)\">Cancel</button>\n  <button mat-raised-button color=\"primary\" (click)=\"doAdd(data.id)\">Add</button> -->\n  <!-- <button mat-button color=\"basic\" *ngIf=\"data.newsstatus.status != 'published' && data.newsstatus.status != 'deleted'\" routerLink=\"/news/{{data.id}}\" (click)=\"closeDialog(true)\">Edit</button> -->\n<!-- </div> -->\n","export class Users {\n  id?: number;\n  name: string;\n  email: string;\n  created_at?: string;\n  updated_at?: string;\n  activity?: Activity[];\n  roles?: Roles[]\n  password?: string;\n  profile?: Profile;\n\n  constructor(name, email, password) {\n    this.name = name;\n    this.email = email;\n    this.password = password;\n  }\n}\n\nexport class Roles {\n  id: number;\n  name: string;\n  display_name: string;\n  description: string;\n  created_at: string;\n  updated_at: string;\n  pivot: {\n      user_id: number,\n      role_id: number\n  }\n  permissions?: Permissions[]\n\n  constructor() {}\n}\n\nexport class Permissions {\n  id: number;\n  name: string;\n  display_name: string;\n  description: string;\n  created_at: string;\n  updated_at: string;\n  pivot: {\n      role_id: number,\n      permission_id: number\n  }\n\n  constructor() {}\n}\n\nexport class Activity {\n  id: number;\n  log_name: string;\n  description: string;\n  subject_id: number;\n  subject_type: string;\n  causer_id: number;\n  causer_type: string;\n  properties?: any[];\n  created_at: string;\n  updated_at: string;\n\n  constructor() {}\n}\n\nexport class Profile{\n  id?: string;\n  user_id?: string;\n  dob?: string;\n  gender?: string;\n  fb?: string;\n  insta?: string;\n  twitter?: string;\n  email?: string;\n  phone?: string;\n  profilepic?: string;\n  coverimage?: string;\n\n  constructor(){\n    this.user_id    = '-';\n    this.dob        = '-';\n    this.gender     = '-';\n    this.fb         = '-';\n    this.insta      = '-';\n    this.twitter    = '-';\n    this.email      = '-';\n    this.phone      = '-';\n    this.profilepic = '';\n    this.coverimage = '';\n\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { Store } from '@ngrx/store';\nimport * as adminActions from '../store/admin.actions';\nimport { UserService } from '../services/user.service';\nimport { Roles, Users } from '../models/user.model';\nimport { Actions } from '@ngrx/effects';\n\n@Component({\n  selector: 'add-user-dialog',\n  templateUrl: './add-user-dialog.component.html',\n  styleUrls: ['./add-user-dialog.component.css']\n})\n\nexport class AddUserDialogComponent implements OnInit {\n  onAdd = new EventEmitter();\n  user: Users = new Users(null, null, null);\n\n  constructor(\n    public dialogRef: MatDialogRef<AddUserDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Users,\n    private store: Store<any>,\n    private userService: UserService,\n    private updates$: Actions,\n  ) { }\n\n  ngOnInit() {}\n\n  addUser() {\n    this.store.dispatch(new adminActions.CreateUser(this.user));\n    this.onAdd.emit();\n    this.dialogRef.close(true);\n  }\n\n  closeDialog(confirmation: boolean) {\n    this.dialogRef.close(confirmation);\n  }\n\n}\n","<h3 mat-dialog-title>Add User</h3>\n<form class=\"basic-form\" #userForm=\"ngForm\">\n  <div mat-dialog-content>\n\n      <div style=\"margin-top:20px;\" fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Name</mat-label>\n              <input matInput mat-autosize required name=\"tickerName\" [(ngModel)]=\"user.name\">\n            </mat-form-field>\n          </div>\n      </div>\n\n      <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Email</mat-label>\n              <input matInput mat-autosize required name=\"tickerName\" [(ngModel)]=\"user.email\">\n            </mat-form-field>\n          </div>\n      </div>\n\n      <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Password</mat-label>\n              <input type=\"password\" matInput mat-autosize required name=\"tickerName\" [(ngModel)]=\"user.password\">\n            </mat-form-field>\n          </div>\n      </div>\n\n      <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex=\"100\">\n              <code>{{user|json}}</code>\n          </div>\n      </div>\n\n  </div>\n  <!-- actions column -->\n  <div mat-dialog-actions align=\"end\">\n    <button mat-button color=\"basic\" (click)=\"closeDialog(true)\">Cancel</button>\n    <button mat-raised-button color=\"primary\" (click)=\"addUser()\" [disabled]=\"!userForm.form.valid\">Add User</button>\n    <!-- <button mat-button color=\"basic\" *ngIf=\"data.newsstatus.status != 'published' && data.newsstatus.status != 'deleted'\" routerLink=\"/news/{{data.id}}\" (click)=\"closeDialog(true)\">Edit</button> -->\n  </div>\n\n</form>\n","import { Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { UserComponent } from './user/user.component';\nimport { NewsListComponent } from './news-list/news-list.component';\nimport { NewsBreakersComponent } from './news-breakers/news-breakers.component';\n\nexport const AdminRoutes: Routes = [\n {\n    path: '',\n    children: [{\n      path: 'admin-dashboard',\n      component: DashboardComponent,\n      data: { role: 'admin' }\n    },{\n      path: 'user-console',\n      component: UserComponent,\n      data: { role: 'admin' }\n    },{\n      path: 'news-settings/list',\n      component: NewsListComponent,\n      data: { role: 'admin' }\n    },{\n      path: 'news-settings/breakers',\n      component: NewsBreakersComponent,\n      data: { role: 'admin' }\n    },\n  ]\n  }\n];\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { environment } from './../../../environments/environment';\nimport { News, ListOrder } from '../../news/models/news';\nimport { Users } from '../models/user.model';\nimport { NewsListTemplate, SettingsKey } from '../models/admin-news.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NewsService {\n\n  private apiUrl = environment.apiUrl;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  // get list templates\n  getListTemplates () {\n    return this.http.get<any>(this.apiUrl + 'management-console/news/list-templates');\n  }\n\n  // get list generation time\n  getListGenTime () {\n    return this.http.get<any>(this.apiUrl + 'management-console/news/list-templates/time');\n  }\n\n  // enable news list template\n  enableListTemplate (body: { template_id: number }) {\n    return this.http.put<any>(this.apiUrl + 'management-console/news/list-templates/enable', body);\n  }\n\n  // enable news list template\n  disableListTemplate (body: { template_id: number }) {\n    return this.http.put<any>(this.apiUrl + 'management-console/news/list-templates/disable', body);\n  }\n\n  // set value for a settings key\n  setSettingsKey (body: SettingsKey) {\n    return this.http.put<any>(this.apiUrl + 'management-console/settings/set', body);\n  }\n\n  // create a news list template\n  createListTemplate (template: NewsListTemplate) {\n    return this.http.post<any>(this.apiUrl + 'management-console/news/list-templates/create', template);\n  }\n\n  // delete a news list template\n  deleteListTemplate (id: number) {\n    return this.http.delete<any>(this.apiUrl + 'management-console/news/list-templates/'+id);\n  }\n\n\n  /**---------------------------------------------------------------------------------\n   * ------------------------------------------------------------------> News Breakers\n   ---------------------------------------------------------------------------------*/\n  // get breakers\n  getBreakers () {\n    return this.http.get<any>(this.apiUrl + 'management-console/news/breakers/manage/get');\n  }\n\n  // create a news breaker\n  createBreaker (template: News) {\n    return this.http.post<any>(this.apiUrl + 'management-console/news/breakers/manage/create', template);\n  }\n\n  // delete a news breaker\n  deleteBreakers (id: number) {\n    return this.http.delete<any>(this.apiUrl + 'management-console/news/breakers/manage/delete/'+id);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RouterModule } from '@angular/router';\nimport { AdminRoutes } from './admin.routing';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from '../shared/shared.module';\n\nimport { DemoMaterialModule } from '../demo-material-module';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\n/*import { DragulaModule } from 'ng2-dragula/ng2-dragula';*/\nimport { DragulaModule } from 'ng2-dragula';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { reducer } from './store/admin.reducer';\nimport { AdminEffects } from './store/admin.effects';\nimport { UserComponent } from './user/user.component';\nimport { AssignRoleDialogComponent } from './assign-role-dialog/assign-role-dialog.component';\nimport { AddUserDialogComponent } from './add-user-dialog/add-user-dialog.component';\nimport { NewsListComponent } from './news-list/news-list.component';\nimport { NewsBreakersComponent } from './news-breakers/news-breakers.component';\nimport { AddNewsListDialogComponent } from './add-news-list-template-dialog/add-news-list-template-dialog.component';\nimport { AddNewsBreakerDialogComponent } from './add-news-breaker-dialog/add-news-breaker-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AdminRoutes),\n    FormsModule,\n    DemoMaterialModule,\n    FlexLayoutModule,\n    PerfectScrollbarModule,\n    DragulaModule,\n    SharedModule,\n    NgxDatatableModule,\n    StoreModule.forFeature('Admin', reducer),\n    EffectsModule.forFeature([AdminEffects]),\n  ],\n  declarations: [\n    DashboardComponent,\n    UserComponent,\n    AssignRoleDialogComponent,\n    AddUserDialogComponent,\n    AddNewsListDialogComponent,\n    AddNewsBreakerDialogComponent,\n    NewsListComponent,\n    NewsBreakersComponent\n  ],\n  entryComponents: [\n    AssignRoleDialogComponent,\n    AddUserDialogComponent,\n    AddNewsListDialogComponent,\n    AddNewsBreakerDialogComponent\n  ]\n})\nexport class AdminModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  dashboard works!\n</p>\n","import { Action } from '@ngrx/store';\nimport { News, NewsList, ListOrder } from './../../news/models/news';\nimport { Users } from '../models/user.model';\n\n\nexport const GET_USERS = '[Admin] GET_USERS';\nexport const GET_USERS_SUCCESS = '[Admin] GET_USERS_SUCCESS';\nexport const GET_USERS_ERROR = '[Admin] GET_USERS_ERROR';\n\nexport const ASSIGN_ROLE = '[Admin] ASSIGN_ROLE';\nexport const ASSIGN_ROLE_SUCCESS = '[Admin] ASSIGN_ROLE_SUCCESS';\nexport const ASSIGN_ROLE_ERROR = '[Admin] ASSIGN_ROLE_ERROR';\n\nexport const REMOVE_ROLE = '[Admin] REMOVE_ROLE';\nexport const REMOVE_ROLE_SUCCESS = '[Admin] REMOVE_ROLE_SUCCESS';\nexport const REMOVE_ROLE_ERROR = '[Admin] REMOVE_ROLE_ERROR';\n\nexport const CREATE_USER = '[Admin] CREATE_USER';\nexport const CREATE_USER_SUCCESS = '[Admin] CREATE_USER_SUCCESS';\nexport const CREATE_USER_ERROR = '[Admin] CREATE_USER_ERROR';\n\nexport const UPDATE_USER = '[Admin] UPDATE_USER';\nexport const UPDATE_USER_SUCCESS = '[Admin] UPDATE_USER_SUCCESS';\nexport const UPDATE_USER_ERROR = '[Admin] UPDATE_USER_ERROR';\n\nexport const CHANGE_LOADED = '[Admin] CHANGE_LOADED';\nexport const LOGOUT_ADMIN_STATE = '[Admin] LOGOUT_ADMIN_STATE';\n\n/**\n * -------------------------------------------------------------------------------------------------------\n * ------------------------------------------------------------------------------> USER MANAGEMENT ACTIONS\n * -------------------------------------------------------------------------------------------------------\n *\n *\n * ------------------------------------------------------------------------------> GET USERS\n */\nexport class GetUsers implements Action {\n  readonly type = GET_USERS;\n  constructor() {};\n}\n\nexport class GetUsersSuccess implements Action {\n  readonly type = GET_USERS_SUCCESS;\n  constructor(public payload: Users[]) {}\n}\n\nexport class GetUsersError implements Action {\n  readonly type = GET_USERS_ERROR;\n}\n\n/*\n* ------------------------------------------------------------------------------> ASSIGN ROLE\n*/\nexport class AssignRole implements Action {\n readonly type = ASSIGN_ROLE;\n constructor(public payload: { user_id: number, role_id: number }) {};\n}\n\nexport class AssignRoleSuccess implements Action {\n readonly type = ASSIGN_ROLE_SUCCESS;\n constructor(public payload: Users[]) {}\n}\n\nexport class AssignRoleError implements Action {\n readonly type = ASSIGN_ROLE_ERROR;\n}\n\n/*\n* ------------------------------------------------------------------------------> REMOVE ROLE\n*/\nexport class RemoveRole implements Action {\n readonly type = REMOVE_ROLE;\n constructor(public payload: { user_id: number, role_id: number }) {};\n}\n\nexport class RemoveRoleSuccess implements Action {\n readonly type = REMOVE_ROLE_SUCCESS;\n constructor(public payload: Users[]) {}\n}\n\nexport class RemovenRoleError implements Action {\n readonly type = REMOVE_ROLE_ERROR;\n}\n\n/*\n* ------------------------------------------------------------------------------> CREATE USER\n*/\nexport class CreateUser implements Action {\n  readonly type = CREATE_USER;\n  constructor(public payload: Users) {};\n }\n\n export class CreateUserSuccess implements Action {\n  readonly type = CREATE_USER_SUCCESS;\n  constructor(public payload: Users[]) {}\n }\n\n export class CreateUserError implements Action {\n  readonly type = CREATE_USER_ERROR;\n }\n\n /*\n * ------------------------------------------------------------------------------> UPDATE USER\n */\n export class UpdateUser implements Action {\n   readonly type = UPDATE_USER;\n   constructor(public payload: Users) {};\n  }\n\n  export class UpdateUserSuccess implements Action {\n   readonly type = UPDATE_USER_SUCCESS;\n   constructor(public payload: Users[]) {}\n  }\n\n  export class UpdateUserError implements Action {\n   readonly type = UPDATE_USER_ERROR;\n  }\n\n\n\n/**\n * --------------------------------------------------------------------------------------------\n * ------------------------------------------------------------------------------> MISC ACTIONS\n * --------------------------------------------------------------------------------------------\n */\nexport class LogoutAdminState implements Action {\n  readonly type = LOGOUT_ADMIN_STATE;\n}\n\nexport class UpdateLoaded implements Action {\n  readonly type = CHANGE_LOADED;\n  constructor(public payload: { isLoaded: boolean }) {}\n}\n\nexport type All = LogoutAdminState | UpdateLoaded;\n","import { News } from '../../news/models/news';\nimport { Action, createFeatureSelector, createSelector } from '@ngrx/store';\n\nimport * as AdminActions from './admin.actions';\nimport { ReviewNewsState, AdminState } from '../../store/app.state';\n\n\n\n\n\nexport const initialState: AdminState = {\n  isLoaded: false,\n  users: []\n};\n\nexport type Actions = AdminActions.All;\nexport interface ActionWithPayload<T> extends Action {\n  payload: T;\n}\n\nexport function reducer(state = initialState, action: ActionWithPayload<any>): AdminState {\n  switch (action.type) {\n\n    /**\n     * ---------------------------------------------------------------------------------------------------------------\n     * --------------------------------------------------------------------------------------> USER MANAGEMENT ACTIONS\n     * ---------------------------------------------------------------------------------------------------------------\n     */\n    /**\n     * --------------------------------------------------------------------------------------> GET USERS\n     */\n    case AdminActions.GET_USERS: {\n      return {\n        ...state,\n        isLoaded: false\n      }\n    }\n\n    case AdminActions.GET_USERS_SUCCESS: {\n      return {\n        ...state,\n        users: action.payload,\n        isLoaded: true\n      }\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> ASSIGN ROLE\n     */\n    case AdminActions.ASSIGN_ROLE: {\n      return {\n        ...state,\n        isLoaded: false\n      }\n    }\n\n    case AdminActions.ASSIGN_ROLE_SUCCESS: {\n      return {\n        ...state,\n        users: action.payload,\n        isLoaded: true\n      }\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> REMOVE ROLE\n     */\n    case AdminActions.REMOVE_ROLE: {\n      return {\n        ...state,\n        isLoaded: false\n      }\n    }\n\n    case AdminActions.REMOVE_ROLE_SUCCESS: {\n      return {\n        ...state,\n        users: action.payload,\n        isLoaded: true\n      }\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> CREATE USER\n     */\n    case AdminActions.CREATE_USER: {\n      return {\n        ...state,\n        isLoaded: false\n      }\n    }\n\n    case AdminActions.CREATE_USER_SUCCESS: {\n      return {\n        ...state,\n        users: action.payload,\n        isLoaded: true\n      }\n    }\n\n    /**\n     * --------------------------------------------------------------------------------------> UPDATE USER\n     */\n    case AdminActions.UPDATE_USER: {\n      return {\n        ...state,\n        isLoaded: false\n      }\n    }\n\n    case AdminActions.UPDATE_USER_SUCCESS: {\n      return {\n        ...state,\n        users: action.payload,\n        isLoaded: true\n      }\n    }\n\n\n\n    case AdminActions.GET_USERS_ERROR: {\n      return {\n        ...state,\n        isLoaded: true\n      }\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nexport const getAdminState = createFeatureSelector<AdminState>('Admin');\n"],"sourceRoot":"webpack:///"}